#server.port=8081
#server.ip=192.168.1.160:8848
#backupfileurl=192.168.1.95:8081/file/recovery
#audiofileurl=192.168.1.95:8081/file/voiceAccept
#
#
#
#mybatis-plus.type-aliases-package=com.tgy.rtls.data.entity
#mybatis-plus.mapper-locations=classpath*:com/tgy/rtls/data/mapper/**/*.xml
##Enable print log
#mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.slf4j.Slf4jImpl
##level
#logging.level.com.tgy.rtls.data.mapper=debug
#
#
#file.staticAccessPath=/rtls/**
#file.uploadFolder=E:/upload/rtls/
#sql.uploadFolder=E:/upload/rtls/park1/
#
#file.url=/rtls/
#
#fdfs.url=http://192.168.1.95:7003/
#websocket.url=ws://192.168.1.80:8081/
#
##log
##Specify the file name
##custom log name springboot The official recommendation is to use the file name with -spring as
## your log configuration (such as using logback-spring.xml instead of logback-spring.xml)
#logging.config=classpath:logback.xml
#
#logging.file.max-size=30MB
##Redis
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
#spring.redis.jedis.pool.max-active=1000
#spring.redis.jedis.pool.max-idle=8
#spring.redis.jedis.pool.max-wait=-1ms
#spring.redis.jedis.pool.min-idle=0
#spring.redis.timeout=30s
#spring.redis.database=0
#
#
##=============== consumer  =======================
#spring.kafka.consumer.group-id=lora_1255072701
#spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100
##
#spring.kafka.bootstrap-servers=192.168.1.95:9092
#
#coal.ip=192.168.1.80
#
##thymeleaf
#spring.thymeleaf.cache=false
#spring.thymeleaf.servlet.content-type=text/html
#spring.thymeleaf.mode=HTML5
#
#spring.servlet.multipart.max-file-size=50MB
#spring.servlet.multipart.max-request-size=50MB
#
#fdfs.connect-timeout=600
#fdfs.so-timeout=1500
#fdfs.thumb-image.height=150
#fdfs.thumb-image.width=150
#fdfs.tracker-list=192.168.1.95:22122
#fdfs.pool.jmx-enabled=false
#rtls.shiro.Jsession.timeout=86400000
## \u6743\u9650\u4E0D\u8DB3\u8DF3\u8F6C\u9875\u9762
#rtls.shiro.unauthorizedUrl=/page/unauth
##\u81EA\u5B9A\u4E49shiro\u5BC6\u7801\u52A0\u5BC6\u7C7B\u578B \u53CA \u52A0\u5BC6\u6B21\u6570
#rtls.shiro.algorithmName=MD5
#rtls.shiro.hashIterations=16
#rtls.shiro.salt=lrr
#
##\u963F\u91CC\u4E91\u77ED\u4FE1\u670D\u52A1
#aliyun.sms.regionId=default
#aliyun.sms.accessKeyId=LTAI5tCvn38GYwAhBCGRnomd
#aliyun.sms.secret=3dHJ92VXGMCsoef6Sezm7pkGGY2tYW
#
#http_pool-max_total=200
#http_pool-default_max_per_route=100
#http_pool-connect_timeout=5000
#http_pool-connection_request_timeout=1000
#http_pool-socket_timeout=65000
#http_pool-validate_after_inactivity=2000
#
#
##
###========================\u57FA\u672C\u914D\u7F6E
#### \u5E94\u7528\u540D\u79F0
###spring.application.name=sharging-jdbc-demo
### \u5185\u5B58\u6A21\u5F0F
#spring.shardingsphere.mode.type=Standalone
#spring.shardingsphere.mode.repository.type=File
#spring.shardingsphere.mode.overwrite=true
#
## \u6253\u5370SQl
#spring.shardingsphere.props.sql-show=true
#
##
####  \u4E00\u4E2A\u5B9E\u4F53\u7C7B\u5BF9\u5E94\u591A\u4E2A\u8868 \u8986\u76D6
#spring.main.allow-bean-definition-overriding=true
### \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90 \u540D\u79F0
#spring.shardingsphere.datasource.names=ds0,ds1,ds2
##========================\u6570\u636E\u6E90
#spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/park0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true
#spring.shardingsphere.datasource.ds0.username=root
#spring.shardingsphere.datasource.ds0.password=123456
#
#spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/park1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=123456
#
#spring.shardingsphere.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds2.url=jdbc:mysql://localhost:3306/park?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true
#spring.shardingsphere.datasource.ds2.username=root
#spring.shardingsphere.datasource.ds2.password=123456
#
##========================\u6807\u51C6\u5206\u7247\u8868\u914D\u7F6E\uFF08\u6570\u636E\u8282\u70B9\u914D\u7F6E\uFF09
#####\u6307\u5B9A\u6570\u636E\u5E93 ds\u76F8\u5F53\u4E8E\u4E0A\u9762#spring.shardingsphere.datasource.names=ds0,ds1\u8D77\u7684\u522B\u540D\u3002$->{0..1}\u662F\u8868\u8FBE\u5F0F0..1\u8868\u793A\u4F60\u8868\u540D\u540E\u9762\u7684\u6570\u5B57\uFF0C\u5982\u679C\u662F1/2\u90A3\u5C31\u662F$->{1..2}
#####p_findcar\u662F\u8868\u540D\u3002p_findcar1\u3001p_findcar2 ---\u300Bp_findcar$->{1..2}
##spring.shardingsphere.rules.sharding.tables.p_findcar.actual-data-nodes=ds$->{0..1}.p_findcar$->{0..1}
#spring.shardingsphere.rules.sharding.tables.p_findcar.actual-data-nodes=ds$->{0..1}.p_findcar_$->{202308..202309}
##------------------------\u5206\u5E93\u7B56\u7565
## \u5206\u7247\u5217\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.p_findcar.database-strategy.standard.sharding-column=map
## \u5206\u7247\u7B97\u6CD5\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.p_findcar.database-strategy.standard.sharding-algorithm-name=alg_inline_map
##------------------------\u5206\u7247\u7B97\u6CD5\u914D\u7F6E
## \u884C\u8868\u8FBE\u5F0F\u5206\u7247\u7B97\u6CD5
## \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_map.type=INLINE
## \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_map.props.algorithm-expression=ds$->{map % 2}
##------------------------\u5206\u8868\u7B56\u7565
## \u5206\u7247\u5217\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.p_findcar.table-strategy.standard.sharding-column=timestamp
## \u5206\u7247\u7B97\u6CD5\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.p_findcar.table-strategy.standard.sharding-algorithm-name=alg_hash_mod
##------------------------\u5206\u7247\u7B97\u6CD5\u914D\u7F6E
## \u54C8\u5E0C\u53D6\u6A21\u5206\u7247\u7B97\u6CD5
### \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.type=CLASS_BASED
## \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.strategy=standard
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.algorithmClassName=com.tgy.rtls.web.config.MonthStrategyShardingAlgorithm
#
#
#spring.shardingsphere.rules.sharding.tables.map2d.actual-data-nodes=ds$->{0..1}.map2d$->{0..1}
#spring.shardingsphere.rules.sharding.tables.map2d.database-strategy.standard.sharding-column=map
#spring.shardingsphere.rules.sharding.tables.map2d.database-strategy.standard.sharding-algorithm-name=alg_inline_map2d
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_map2d.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_map2d.props.algorithm-expression=ds$->{map % 2}
#
#spring.shardingsphere.rules.sharding.tables.map2d.table-strategy.standard.sharding-column=map
#spring.shardingsphere.rules.sharding.tables.map2d.table-strategy.standard.sharding-algorithm-name=alg_hash_mod_map2d
#
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod_map2d.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod_map2d.props.algorithm-expression=map2d$->{map % 2}
#
#
#spring.shardingsphere.rules.sharding.tables.infrared_original.actual-data-nodes=ds$->{0..1}.infrared_original_$->{202308..202309}
#spring.shardingsphere.rules.sharding.tables.infrared_original.database-strategy.standard.sharding-column=gatewaynum
#spring.shardingsphere.rules.sharding.tables.infrared_original.database-strategy.standard.sharding-algorithm-name=alg_inline_infrared_original
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_infrared_original.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_infrared_original.props.algorithm-expression=ds$->{gatewaynum % 2}
#
#spring.shardingsphere.rules.sharding.tables.infrared_original.table-strategy.standard.sharding-column=timestamp
#spring.shardingsphere.rules.sharding.tables.infrared_original.table-strategy.standard.sharding-algorithm-name=alg_gateway
#
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_gateway.type=CLASS_BASED
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_gateway.props.strategy=standard
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_gateway.props.algorithmClassName=com.tgy.rtls.web.config.MonthStrategyShardingAlgorithm
##
#
##
##
###------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B56\u7565\u914D\u7F6E
### \u5206\u5E03\u5F0F\u5E8F\u5217\u5217\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.p_findcar.key-generate-strategy.column=id
### \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.p_findcar.key-generate-strategy.key-generator-name=alg-snowflake
##
### \u5206\u5E03\u5F0F\u5E8F\u5217\u5217\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.map2d.key-generate-strategy.column=id
### \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.map2d.key-generate-strategy.key-generator-name=alg-snowflake
##
##
###------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u914D\u7F6E
### \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u7C7B\u578B
##spring.shardingsphere.rules.sharding.key-generators.alg-snowflake.type=SNOWFLAKE
##
##
##spring.shardingsphere.rules.sharding.binding-tables=p_findcar,map2d
#
#
##spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.type=INLINE
### \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
##spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.algorithm-expression=p_findcar$->{map % 2}
##------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B56\u7565\u914D\u7F6E
######---------------
###//\u5F53\u914D\u7F6E\u4E86shardingsphere-jdbc\u7684\u5206\u5E03\u5F0F\u5E8F\u5217\u65F6\uFF0C\u81EA\u52A8\u4F7F\u7528shardingsphere-jdbc\u7684\u5206\u5E03\u5F0F\u5E8F\u5217
###//\u5F53\u6CA1\u6709\u914D\u7F6Eshardingsphere-jdbc\u7684\u5206\u5E03\u5F0F\u5E8F\u5217\u65F6\uFF0C\u81EA\u52A8\u4F9D\u8D56\u6570\u636E\u5E93\u7684\u4E3B\u952E\u81EA\u589E\u7B56\u7565
#####
## \u5206\u5E03\u5F0F\u5E8F\u5217\u5217\u540D\u79F0
####\u6307\u5B9Ap_findcar\u8868\u91CC\u9762\u4E3B\u952Emap\u4E3A\u751F\u6210\u7B56\u7565 SNOWFLAKE
##spring.shardingsphere.rules.sharding.tables.p_findcar.key-generate-strategy.column=id
### \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.p_findcar.key-generate-strategy.key-generator-name=alg_snowflake
##
###------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u914D\u7F6E
### \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u7C7B\u578B
##spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE
## \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
##spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.xxx=
#
#
#
#
#
##------------------------\u57FA\u672C\u914D\u7F6E
## \u5185\u5B58\u6A21\u5F0F
##spring.shardingsphere.mode.type=Memory
## \u6253\u5370SQl
##spring.shardingsphere.props.sql-show=true
##
##spring.shardingsphere.mode.type=Standalone
##spring.shardingsphere.mode.repository.type=File
##spring.shardingsphere.mode.overwrite=true
##
### \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90
##spring.shardingsphere.datasource.names=ds0,ds1
##
### \u914D\u7F6E\u7B2C 1 \u4E2A\u6570\u636E\u6E90
##spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
##spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
##spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/park0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true
##spring.shardingsphere.datasource.ds0.username=root
##spring.shardingsphere.datasource.ds0.password=123456
##
### \u914D\u7F6E\u7B2C 2 \u4E2A\u6570\u636E\u6E90
##spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
##spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
##spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/park1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true
##spring.shardingsphere.datasource.ds1.username=root
##spring.shardingsphere.datasource.ds1.password=123456
##
###------------------------\u6807\u51C6\u5206\u7247\u8868\u914D\u7F6E\uFF08\u6570\u636E\u8282\u70B9\u914D\u7F6E\uFF09
### \u7531\u6570\u636E\u6E90\u540D + \u8868\u540D\u7EC4\u6210\uFF0C\u4EE5\u5C0F\u6570\u70B9\u5206\u9694\u3002\u591A\u4E2A\u8868\u4EE5\u9017\u53F7\u5206\u9694\uFF0C\u652F\u6301 inline \u8868\u8FBE\u5F0F\u3002
### \u7F3A\u7701\u8868\u793A\u4F7F\u7528\u5DF2\u77E5\u6570\u636E\u6E90\u4E0E\u903B\u8F91\u8868\u540D\u79F0\u751F\u6210\u6570\u636E\u8282\u70B9\uFF0C\u7528\u4E8E\u5E7F\u64AD\u8868\uFF08\u5373\u6BCF\u4E2A\u5E93\u4E2D\u90FD\u9700\u8981\u4E00\u4E2A\u540C\u6837\u7684\u8868\u7528\u4E8E\u5173\u8054\u67E5\u8BE2\uFF0C\u591A\u4E3A\u5B57\u5178\u8868\uFF09\u6216\u53EA\u5206\u5E93\u4E0D\u5206\u8868\u4E14\u6240\u6709\u5E93\u7684\u8868\u7ED3\u6784\u5B8C\u5168\u4E00\u81F4\u7684\u60C5\u51B5
##spring.shardingsphere.rules.sharding.tables.p_findcar.actual-data-nodes=ds$->{0..1}.p_findcar$->{0..1}
###------------------------\u5206\u5E93\u7B56\u7565\uFF0C\u7F3A\u7701\u8868\u793A\u4F7F\u7528\u9ED8\u8BA4\u5206\u5E93\u7B56\u7565\uFF0C\u4EE5\u4E0B\u7684\u5206\u7247\u7B56\u7565\u53EA\u80FD\u9009\u5176\u4E00
### \u7528\u4E8E\u5355\u5206\u7247\u952E\u7684\u6807\u51C6\u5206\u7247\u573A\u666F
### \u5206\u7247\u5217\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.p_findcar.database-strategy.standard.sharding-column=map
### \u5206\u7247\u7B97\u6CD5\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.p_findcar.database-strategy.standard.sharding-algorithm-name=alg_mod
###------------------------\u5206\u8868\u7B56\u7565
### \u7528\u4E8E\u5355\u5206\u7247\u952E\u7684\u6807\u51C6\u5206\u7247\u573A\u666F
### \u5206\u7247\u5217\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.p_findcar.table-strategy.standard.sharding-column=map
### \u5206\u7247\u7B97\u6CD5\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.p_findcar.table-strategy.standard.sharding-algorithm-name=alg_mod
###------------------------\u5206\u7247\u7B97\u6CD5\u914D\u7F6E
### \u884C\u8868\u8FBE\u5F0F\u5206\u7247\u7B97\u6CD5
### \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
##spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_map.type=INLINE
### \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
##spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_map.props.algorithm-expression=ds$->{map % 2}
### \u53D6\u6A21\u5206\u7247\u7B97\u6CD5
### \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
##spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.type=MOD
### \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
##spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.props.sharding-count=2
#
#
### \u54C8\u5E0C\u53D6\u6A21\u5206\u7247\u7B97\u6CD5
### \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
##spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.type=HASH_MOD
### \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
##spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.sharding-count=2
#
##------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B56\u7565\u914D\u7F6E
## \u5206\u5E03\u5F0F\u5E8F\u5217\u5217\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id
### \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u540D\u79F0
##spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=alg_snowflake
##
###------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u914D\u7F6E
### \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u7C7B\u578B
##spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE
## \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
##spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.xxx=