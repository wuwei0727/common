/**Released Version v3.1.3,BUILD 653,Time 1691032744044. Fengmap Javascript SDK , see: https://www.fengmap.com for details**/
!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.fengmap=n():t.fengmap=n()}(this,function(){return e=[function(U,F,t){"use strict";t.r(F);for(var t={NONE:0,EXTRUDE_MARKER:2,IMAGE_MARKER:8,LOCATION_MARKER:16,POLYGON_MARKER:32,TEXT_MARKER:64,LINE_MARKER:128,LINE3D_MARKER:256,HEAT_MAP_MARKER:512,EXTENT:1024,EXTERNAL_MODEL:2048,MODEL:4096,FACILITY:8192,LABEL:16384,DYNAMIC_MODEL_MARKER:32768,DOM_MARKER:65536,SPHERE_MARKER:1<<17,EXTENT_LAYER:1<<20,EXTERNAL_MODEL_LAYER:1<<21,MODEL_LAYER:1<<22,FACILITY_LAYER:1<<23,LABEL_LAYER:1<<24,MARKER_GROUP:1<<25,FLOW_LINE_LAYER:1<<27,FLOW_LINE_MARKER:1<<27,FIRE_MARKER:1<<28,WALL_MARKER:1<<29,TUBE_MARKER:1<<30},H=(t.LAYER_NODE_TYPE=new Map,t.LAYER_NODE_TYPE.set(t.EXTENT_LAYER,t.EXTENT),t.LAYER_NODE_TYPE.set(t.EXTERNAL_MODEL_LAYER,t.EXTERNAL_MODEL),t.LAYER_NODE_TYPE.set(t.MODEL_LAYER,t.MODEL),t.LAYER_NODE_TYPE.set(t.FACILITY_LAYER,t.FACILITY),t.LAYER_NODE_TYPE.set(t.LABEL_LAYER,t.LABEL),t.LAYER_NODE_TYPE.set(t.DOM_MARKER,t.DOM_MARKER),t.LAYER_NODE_TYPE.set(t.DYNAMIC_MODEL_MARKER,t.DYNAMIC_MODEL_MARKER),t.LAYER_NODE_TYPE.set(t.EXTRUDE_MARKER,t.EXTRUDE_MARKER),t.LAYER_NODE_TYPE.set(t.HEAT_MAP_MARKER,t.HEAT_MAP_MARKER),t.LAYER_NODE_TYPE.set(t.LINE_MARKER,t.LINE_MARKER),t.LAYER_NODE_TYPE.set(t.LOCATION_MARKER,t.LOCATION_MARKER),t.LAYER_NODE_TYPE.set(t.POLYGON_MARKER,t.POLYGON_MARKER),t.LAYER_NODE_TYPE.set(t.TEXT_MARKER,t.TEXT_MARKER),t.LAYER_NODE_TYPE.set(t.IMAGE_MARKER,t.IMAGE_MARKER),t.LAYER_NODE_TYPE.set(t.FLOW_LINE_LAYER,t.FLOW_LINE_MARKER),t.LAYER_NODE_TYPE.set(t.FIRE_MARKER,t.FIRE_MARKER),t.LAYER_NODE_TYPE.set(t.WALL_MARKER,t.WALL_MARKER),t.LAYER_NODE_TYPE.set(t.TUBE_MARKER,t.TUBE_MARKER),t.LAYER_NODE_TYPE.set(t.LINE3D_MARKER,t.LINE3D_MARKER),t.LAYER_NODE_TYPE.set(t.SPHERE_MARKER,t.SPHERE_MARKER),t),r=[],k=0;k<256;k++)r[k]=(k<16?"0":"")+k.toString(16);var v={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(r[255&t]+r[t>>8&255]+r[t>>16&255]+r[t>>24&255]+"-"+r[255&n]+r[n>>8&255]+"-"+r[n>>16&15|64]+r[n>>24&255]+"-"+r[63&e|128]+r[e>>8&255]+"-"+r[e>>16&255]+r[e>>24&255]+r[255&i]+r[i>>8&255]+r[i>>16&255]+r[i>>24&255]).toUpperCase()},clamp:function(t,n,e){return Math.max(n,Math.min(e,t))},euclideanModulo:function(t,n){return(t%n+n)%n},mapLinear:function(t,n,e,i,r){return i+(t-n)*(r-i)/(e-n)},lerp:function(t,n,e){return(1-e)*t+e*n},smoothstep:function(t,n,e){return t<=n?0:e<=t?1:(t=(t-n)/(e-n))*t*(3-2*t)},smootherstep:function(t,n,e){return t<=n?0:e<=t?1:(t=(t-n)/(e-n))*t*t*(t*(6*t-15)+10)},randInt:function(t,n){return t+Math.floor(Math.random()*(n-t+1))},randFloat:function(t,n){return t+Math.random()*(n-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*v.DEG2RAD},radToDeg:function(t){return t*v.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,n,e,i,r){var o=Math.cos,s=Math.sin,a=o(e/2),e=s(e/2),h=o((n+i)/2),c=s((n+i)/2),u=o((n-i)/2),l=s((n-i)/2),o=o((i-n)/2),s=s((i-n)/2);"XYX"===r?t.set(a*c,e*u,e*l,a*h):"YZY"===r?t.set(e*l,a*c,e*u,a*h):"ZXZ"===r?t.set(e*u,e*l,a*c,a*h):"XZX"===r?t.set(a*c,e*s,e*o,a*h):"YXY"===r?t.set(e*o,a*c,e*s,a*h):"ZYZ"===r?t.set(e*s,e*o,a*c,a*h):console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.")}};function o(t,n,e,i){this.u=t||0,this.v=n||0,this._=e||0,this.M=void 0!==i?i:1}Object.assign(o,{slerp:function(t,n,e,i){return e.copy(t).slerp(n,i)},slerpFlat:function(t,n,e,i,r,o,s){var a,h,c,u=e[i+0],l=e[i+1],f=e[i+2],e=e[i+3],i=r[o+0],d=r[o+1],v=r[o+2],r=r[o+3];e===r&&u===i&&l===d&&f===v||(o=1-s,a=0<=(h=u*i+l*d+f*v+e*r)?1:-1,(c=1-h*h)>Number.EPSILON&&(c=Math.sqrt(c),h=Math.atan2(c,h*a),o=Math.sin(o*h)/c,s=Math.sin(s*h)/c),u=u*o+i*(h=s*a),l=l*o+d*h,f=f*o+v*h,e=e*o+r*h,o===1-s&&(u*=c=1/Math.sqrt(u*u+l*l+f*f+e*e),l*=c,f*=c,e*=c)),t[n]=u,t[n+1]=l,t[n+2]=f,t[n+3]=e}}),Object.defineProperties(o.prototype,{x:{get:function(){return this.u},set:function(t){this.u=t,this.S()}},y:{get:function(){return this.v},set:function(t){this.v=t,this.S()}},z:{get:function(){return this._},set:function(t){this._=t,this.S()}},w:{get:function(){return this.M},set:function(t){this.M=t,this.S()}}}),Object.assign(o.prototype,{isQuaternion:!0,set:function(t,n,e,i){return this.u=t,this.v=n,this._=e,this.M=i,this.S(),this},clone:function(){return new this.constructor(this.u,this.v,this._,this.M)},copy:function(t){return this.u=t.x,this.v=t.y,this._=t.z,this.M=t.w,this.S(),this},setFromEuler:function(t,n){var e,i,r,o,s,a,h;if(t&&t.isEuler)return s=t.u,a=t.v,e=t._,t=t.order,o=Math.cos,h=Math.sin,i=o(s/2),r=o(a/2),o=o(e/2),s=h(s/2),a=h(a/2),h=h(e/2),"XYZ"===t?(this.u=s*r*o+i*a*h,this.v=i*a*o-s*r*h,this._=i*r*h+s*a*o,this.M=i*r*o-s*a*h):"YXZ"===t?(this.u=s*r*o+i*a*h,this.v=i*a*o-s*r*h,this._=i*r*h-s*a*o,this.M=i*r*o+s*a*h):"ZXY"===t?(this.u=s*r*o-i*a*h,this.v=i*a*o+s*r*h,this._=i*r*h+s*a*o,this.M=i*r*o-s*a*h):"ZYX"===t?(this.u=s*r*o-i*a*h,this.v=i*a*o+s*r*h,this._=i*r*h-s*a*o,this.M=i*r*o+s*a*h):"YZX"===t?(this.u=s*r*o+i*a*h,this.v=i*a*o+s*r*h,this._=i*r*h-s*a*o,this.M=i*r*o-s*a*h):"XZY"===t&&(this.u=s*r*o-i*a*h,this.v=i*a*o-s*r*h,this._=i*r*h+s*a*o,this.M=i*r*o+s*a*h),!1!==n&&this.S(),this;throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.")},setFromAxisAngle:function(t,n){var n=n/2,e=Math.sin(n);return this.u=t.x*e,this.v=t.y*e,this._=t.z*e,this.M=Math.cos(n),this.S(),this},setFromRotationMatrix:function(t){var n,t=t.elements,e=t[0],i=t[4],r=t[8],o=t[1],s=t[5],a=t[9],h=t[2],c=t[6],t=t[10],u=e+s+t;return 0<u?(n=.5/Math.sqrt(u+1),this.M=.25/n,this.u=(c-a)*n,this.v=(r-h)*n,this._=(o-i)*n):s<e&&t<e?(n=2*Math.sqrt(1+e-s-t),this.M=(c-a)/n,this.u=.25*n,this.v=(i+o)/n,this._=(r+h)/n):t<s?(n=2*Math.sqrt(1+s-e-t),this.M=(r-h)/n,this.u=(i+o)/n,this.v=.25*n,this._=(a+c)/n):(n=2*Math.sqrt(1+t-e-s),this.M=(o-i)/n,this.u=(r+h)/n,this.v=(a+c)/n,this._=.25*n),this.S(),this},setFromUnitVectors:function(t,n){var e=t.dot(n)+1;return e<1e-6?(e=0,Math.abs(t.x)>Math.abs(t.z)?(this.u=-t.y,this.v=t.x,this._=0):(this.u=0,this.v=-t.z,this._=t.y)):(this.u=t.y*n.z-t.z*n.y,this.v=t.z*n.x-t.x*n.z,this._=t.x*n.y-t.y*n.x),this.M=e,this.normalize()},angleTo:function(t){return 2*Math.acos(Math.abs(v.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,n){var e=this.angleTo(t);return 0!==e&&(n=Math.min(1,n/e),this.slerp(t,n)),this},inverse:function(){return this.conjugate()},conjugate:function(){return this.u*=-1,this.v*=-1,this._*=-1,this.S(),this},dot:function(t){return this.u*t.u+this.v*t.v+this._*t._+this.M*t.M},lengthSq:function(){return this.u*this.u+this.v*this.v+this._*this._+this.M*this.M},length:function(){return Math.sqrt(this.u*this.u+this.v*this.v+this._*this._+this.M*this.M)},normalize:function(){var t=this.length();return 0===t?(this.u=0,this.v=0,this._=0,this.M=1):(this.u=this.u*(t=1/t),this.v=this.v*t,this._=this._*t,this.M=this.M*t),this.S(),this},multiply:function(t,n){return void 0!==n?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,n)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,n){var e=t.u,i=t.v,r=t._,t=t.M,o=n.u,s=n.v,a=n._,n=n.M;return this.u=e*n+t*o+i*a-r*s,this.v=i*n+t*s+r*o-e*a,this._=r*n+t*a+e*s-i*o,this.M=t*n-e*o-i*s-r*a,this.S(),this},slerp:function(t,n){if(0!==n){if(1===n)return this.copy(t);var e,i=this.u,r=this.v,o=this._,s=this.M,a=s*t.M+i*t.u+r*t.v+o*t._;a<0?(this.M=-t.M,this.u=-t.u,this.v=-t.v,this._=-t._,a=-a):this.copy(t),1<=a?(this.M=s,this.u=i,this.v=r,this._=o):((t=1-a*a)<=Number.EPSILON?(this.M=(e=1-n)*s+n*this.M,this.u=e*i+n*this.u,this.v=e*r+n*this.v,this._=e*o+n*this._,this.normalize()):(e=Math.sqrt(t),t=Math.atan2(e,a),a=Math.sin((1-n)*t)/e,n=Math.sin(n*t)/e,this.M=s*a+this.M*n,this.u=i*a+this.u*n,this.v=r*a+this.v*n,this._=o*a+this._*n),this.S())}return this},equals:function(t){return t.u===this.u&&t.v===this.v&&t._===this._&&t.M===this.M},fromArray:function(t,n){return this.u=t[n=void 0===n?0:n],this.v=t[n+1],this._=t[n+2],this.M=t[n+3],this.S(),this},toArray:function(t,n){return(t=void 0===t?[]:t)[n=void 0===n?0:n]=this.u,t[n+1]=this.v,t[n+2]=this._,t[n+3]=this.M,t},fromBufferAttribute:function(t,n){return this.u=t.getX(n),this.v=t.getY(n),this._=t.getZ(n),this.M=t.getW(n),this},L:function(t){return this.S=t,this},S:function(){}});var j=new E,G=new o;function E(t,n,e){this.x=t||0,this.y=n||0,this.z=e||0}function O(t,n){this.x=t||0,this.y=n||0}Object.assign(E.prototype,{isVector3:!0,set:function(t,n,e){return this.x=t,this.y=n,this.z=e,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,n){return void 0!==n?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,n)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this},addScaledVector:function(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this},sub:function(t,n){return void 0!==n?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,n)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this},multiply:function(t,n){return void 0!==n?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,n)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,n){return this.x=t.x*n.x,this.y=t.y*n.y,this.z=t.z*n.z,this},applyEuler:function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(G.setFromEuler(t))},applyAxisAngle:function(t,n){return this.applyQuaternion(G.setFromAxisAngle(t,n))},applyMatrix3:function(t){var n=this.x,e=this.y,i=this.z,t=t.elements;return this.x=t[0]*n+t[3]*e+t[6]*i,this.y=t[1]*n+t[4]*e+t[7]*i,this.z=t[2]*n+t[5]*e+t[8]*i,this},applyNormalMatrix:function(t){return this.applyMatrix3(t).normalize()},applyMatrix4:function(t){var n=this.x,e=this.y,i=this.z,t=t.elements,r=1/(t[3]*n+t[7]*e+t[11]*i+t[15]);return this.x=(t[0]*n+t[4]*e+t[8]*i+t[12])*r,this.y=(t[1]*n+t[5]*e+t[9]*i+t[13])*r,this.z=(t[2]*n+t[6]*e+t[10]*i+t[14])*r,this},applyQuaternion:function(t){var n=this.x,e=this.y,i=this.z,r=t.x,o=t.y,s=t.z,t=t.w,a=t*n+o*i-s*e,h=t*e+s*n-r*i,c=t*i+r*e-o*n,n=-r*n-o*e-s*i;return this.x=a*t+n*-r+h*-s-c*-o,this.y=h*t+n*-o+c*-r-a*-s,this.z=c*t+n*-s+a*-o-h*-r,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)},transformDirection:function(t){var n=this.x,e=this.y,i=this.z,t=t.elements;return this.x=t[0]*n+t[4]*e+t[8]*i,this.y=t[1]*n+t[5]*e+t[9]*i,this.z=t[2]*n+t[6]*e+t[10]*i,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this},clampScalar:function(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this},clampLength:function(t,n){var e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(n,e)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this},lerpVectors:function(t,n,e){return this.subVectors(n,t).multiplyScalar(e).add(t)},cross:function(t,n){return void 0!==n?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,n)):this.crossVectors(this,t)},crossVectors:function(t,n){var e=t.x,i=t.y,t=t.z,r=n.x,o=n.y,n=n.z;return this.x=i*n-t*o,this.y=t*r-e*n,this.z=e*o-i*r,this},projectOnVector:function(t){var n=t.lengthSq();return 0===n?this.set(0,0,0):(n=t.dot(this)/n,this.copy(t).multiplyScalar(n))},projectOnPlane:function(t){return j.copy(this).projectOnVector(t),this.sub(j)},reflect:function(t){return this.sub(j.copy(t).multiplyScalar(2*this.dot(t)))},angleTo:function(t){var n=Math.sqrt(this.lengthSq()*t.lengthSq());return 0===n?Math.PI/2:(t=this.dot(t)/n,Math.acos(v.clamp(t,-1,1)))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var n=this.x-t.x,e=this.y-t.y,t=this.z-t.z;return n*n+e*e+t*t},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,n,e){var i=Math.sin(n)*t;return this.x=i*Math.sin(e),this.y=Math.cos(n)*t,this.z=i*Math.cos(e),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,n,e){return this.x=t*Math.sin(n),this.y=e,this.z=t*Math.cos(n),this},setFromMatrixPosition:function(t){t=t.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(t){var n=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),t=this.setFromMatrixColumn(t,2).length();return this.x=n,this.y=e,this.z=t,this},setFromMatrixColumn:function(t,n){return this.fromArray(t.elements,4*n)},setFromMatrix3Column:function(t,n){return this.fromArray(t.elements,3*n)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,n){return this.x=t[n=void 0===n?0:n],this.y=t[n+1],this.z=t[n+2],this},toArray:function(t,n){return(t=void 0===t?[]:t)[n=void 0===n?0:n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t},fromBufferAttribute:function(t,n,e){return void 0!==e&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this}}),Object.defineProperties(O.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(O.prototype,{isVector2:!0,set:function(t,n){return this.x=t,this.y=n,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,n){return void 0!==n?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,n)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this},addScaledVector:function(t,n){return this.x+=t.x*n,this.y+=t.y*n,this},sub:function(t,n){return void 0!==n?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,n)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var n=this.x,e=this.y,t=t.elements;return this.x=t[0]*n+t[3]*e+t[6],this.y=t[1]*n+t[4]*e+t[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this},clampScalar:function(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this},clampLength:function(t,n){var e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(n,e)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){return Math.atan2(-this.y,-this.x)+Math.PI},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var n=this.x-t.x,t=this.y-t.y;return n*n+t*t},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this},lerpVectors:function(t,n,e){return this.subVectors(n,t).multiplyScalar(e).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,n){return this.x=t[n=void 0===n?0:n],this.y=t[n+1],this},toArray:function(t,n){return(t=void 0===t?[]:t)[n=void 0===n?0:n]=this.x,t[n+1]=this.y,t},fromBufferAttribute:function(t,n,e){return void 0!==e&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(n),this.y=t.getY(n),this},rotateAround:function(t,n){var e=Math.cos(n),n=Math.sin(n),i=this.x-t.x,r=this.y-t.y;return this.x=i*e-r*n+t.x,this.y=i*n+r*e+t.y,this}});var n=[new E,new E,new E,new E,new E,new E,new E,new E],z=new E,V=new tt,B=new E,W=new E,Y=new E,X=new E,Z=new E,q=new E,K=new E,Q=new E,J=new E,$=new E;function tt(t,n){this.min=void 0!==t?t:new E(1/0,1/0,1/0),this.max=void 0!==n?n:new E(-1/0,-1/0,-1/0)}function nt(t,n,e,i,r){for(var o=0,s=t.length-3;o<=s;o+=3){$.fromArray(t,o);var a=r.x*Math.abs($.x)+r.y*Math.abs($.y)+r.z*Math.abs($.z),h=n.dot($),c=e.dot($),u=i.dot($);if(Math.max(-Math.max(h,c,u),Math.min(h,c,u))>a)return!1}return!0}Object.assign(tt.prototype,{isBox3:!0,set:function(t,n){return this.min.copy(t),this.max.copy(n),this},setFromArray:function(t){for(var n=1/0,e=1/0,i=1/0,r=-1/0,o=-1/0,s=-1/0,a=0,h=t.length;a<h;a+=3){var c=t[a],u=t[a+1],l=t[a+2];c<n&&(n=c),u<e&&(e=u),l<i&&(i=l),r<c&&(r=c),o<u&&(o=u),s<l&&(s=l)}return this.min.set(n,e,i),this.max.set(r,o,s),this},setFromBufferAttribute:function(t){for(var n=1/0,e=1/0,i=1/0,r=-1/0,o=-1/0,s=-1/0,a=0,h=t.count;a<h;a++){var c=t.getX(a),u=t.getY(a),l=t.getZ(a);c<n&&(n=c),u<e&&(e=u),l<i&&(i=l),r<c&&(r=c),o<u&&(o=u),s<l&&(s=l)}return this.min.set(n,e,i),this.max.set(r,o,s),this},setFromPoints:function(t){this.makeEmpty();for(var n=0,e=t.length;n<e;n++)this.expandByPoint(t[n]);return this},setFromCenterAndSize:function(t,n){n=z.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this},setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new E),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new E),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(t){t.updateWorldMatrix(!1,!1);for(var n=t.geometry,e=(void 0!==n&&(null===n.boundingBox&&n.computeBoundingBox(),V.copy(n.boundingBox),V.applyMatrix4(t.matrixWorld),this.union(V)),t.children),i=0,r=e.length;i<r;i++)this.expandByObject(e[i]);return this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,n){return void 0===n&&(console.warn("THREE.Box3: .getParameter() target is now required"),n=new E),n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(t){return this.clampPoint(t.center,z),z.distanceToSquared(t.center)<=t.radius*t.radius},intersectsPlane:function(t){var n,e=0<t.normal.x?(n=t.normal.x*this.min.x,t.normal.x*this.max.x):(n=t.normal.x*this.max.x,t.normal.x*this.min.x);return 0<t.normal.y?(n+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(n+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),0<t.normal.z?(n+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(n+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),n<=-t.constant&&e>=-t.constant},intersectsTriangle:function(t){return!this.isEmpty()&&(this.getCenter(K),Q.subVectors(this.max,K),B.subVectors(t.a,K),W.subVectors(t.b,K),Y.subVectors(t.c,K),X.subVectors(W,B),Z.subVectors(Y,W),q.subVectors(B,Y),!!nt([0,-X.z,X.y,0,-Z.z,Z.y,0,-q.z,q.y,X.z,0,-X.x,Z.z,0,-Z.x,q.z,0,-q.x,-X.y,X.x,0,-Z.y,Z.x,0,-q.y,q.x,0],B,W,Y,Q))&&!!nt([1,0,0,0,1,0,0,0,1],B,W,Y,Q)&&(J.crossVectors(X,Z),nt([J.x,J.y,J.z],B,W,Y,Q))},clampPoint:function(t,n){return void 0===n&&(console.warn("THREE.Box3: .clampPoint() target is now required"),n=new E),n.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return z.copy(t).clamp(this.min,this.max).sub(t).length()},getBoundingSphere:function(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(z).length(),t},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(t){return this.isEmpty()||(n[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),n[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),n[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),n[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),n[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),n[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),n[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),n[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(n)),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});var et=new tt;function it(t,n){this.center=void 0!==t?t:new E,this.radius=void 0!==n?n:0}Object.assign(it.prototype,{set:function(t,n){return this.center.copy(t),this.radius=n,this},setFromPoints:function(t,n){for(var e=this.center,i=(void 0!==n?e.copy(n):et.setFromPoints(t).getCenter(e),0),r=0,o=t.length;r<o;r++)i=Math.max(i,e.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var n=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=n*n},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,n){var e=this.center.distanceToSquared(t);return void 0===n&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),n=new E),n.copy(t),e>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n},getBoundingBox:function(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new tt),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}});var s=new E,rt=new E,ot=new E,st=new E,at=new E,ht=new E,ct=new E;function ut(t,n){this.origin=void 0!==t?t:new E,this.direction=void 0!==n?n:new E(0,0,-1)}Object.assign(ut.prototype,{set:function(t,n){return this.origin.copy(t),this.direction.copy(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,n){return void 0===n&&(console.warn("THREE.Ray: .at() target is now required"),n=new E),n.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(t){return this.origin.copy(this.at(t,s)),this},closestPointToPoint:function(t,n){void 0===n&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),n=new E),n.subVectors(t,this.origin);t=n.dot(this.direction);return t<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(t).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(t){var n=s.subVectors(t,this.origin).dot(this.direction);return(n<0?this.origin:(s.copy(this.direction).multiplyScalar(n).add(this.origin),s)).distanceToSquared(t)},distanceSqToSegment:function(t,n,e,i){rt.copy(t).add(n).multiplyScalar(.5),ot.copy(n).sub(t).normalize(),st.copy(this.origin).sub(rt);var r,o,s,t=.5*t.distanceTo(n),n=-this.direction.dot(ot),a=st.dot(this.direction),h=-st.dot(ot),c=st.lengthSq(),u=Math.abs(1-n*n);return u=0<u?(o=n*a-h,s=t*u,0<=(r=n*h-a)?-s<=o?o<=s?(r*=u=1/u)*(r+n*(o*=u)+2*a)+o*(n*r+o+2*h)+c:(o=t,-(r=Math.max(0,-(n*o+a)))*r+o*(o+2*h)+c):(o=-t,-(r=Math.max(0,-(n*o+a)))*r+o*(o+2*h)+c):o<=-s?-(r=Math.max(0,-(-n*t+a)))*r+(o=0<r?-t:Math.min(Math.max(-t,-h),t))*(o+2*h)+c:o<=s?(r=0,(o=Math.min(Math.max(-t,-h),t))*(o+2*h)+c):-(r=Math.max(0,-(n*t+a)))*r+(o=0<r?t:Math.min(Math.max(-t,-h),t))*(o+2*h)+c):(o=0<n?-t:t,-(r=Math.max(0,-(n*o+a)))*r+o*(o+2*h)+c),e&&e.copy(this.direction).multiplyScalar(r).add(this.origin),i&&i.copy(ot).multiplyScalar(o).add(rt),u},intersectSphere:function(t,n){s.subVectors(t.center,this.origin);var e=s.dot(this.direction),i=s.dot(s)-e*e,t=t.radius*t.radius;return t<i||(i=e+(t=Math.sqrt(t-i)),(e=e-t)<0&&i<0)?null:e<0?this.at(i,n):this.at(e,n)},intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){var n=t.normal.dot(this.direction);return 0===n?0===t.distanceToPoint(this.origin)?0:null:0<=(t=-(this.origin.dot(t.normal)+t.constant)/n)?t:null},intersectPlane:function(t,n){t=this.distanceToPlane(t);return null===t?null:this.at(t,n)},intersectsPlane:function(t){var n=t.distanceToPoint(this.origin);return 0===n||t.normal.dot(this.direction)*n<0},intersectBox:function(t,n){var e,i,r,o=1/this.direction.x,s=1/this.direction.y,a=1/this.direction.z,h=this.origin,o=0<=o?(e=(t.min.x-h.x)*o,(t.max.x-h.x)*o):(e=(t.max.x-h.x)*o,(t.min.x-h.x)*o),s=0<=s?(r=(t.min.y-h.y)*s,(t.max.y-h.y)*s):(r=(t.max.y-h.y)*s,(t.min.y-h.y)*s);return s<e||o<r||((e<r||e!=e)&&(e=r),(s<o||o!=o)&&(o=s),(r=0<=a?(i=(t.min.z-h.z)*a,(t.max.z-h.z)*a):(i=(t.max.z-h.z)*a,(t.min.z-h.z)*a))<e)||o<i||((e<i||e!=e)&&(e=i),(o=r<o||o!=o?r:o)<0)?null:this.at(0<=e?e:o,n)},intersectsBox:function(t){return null!==this.intersectBox(t,s)},intersectTriangle:function(t,n,e,i,r){at.subVectors(n,t),ht.subVectors(e,t),ct.crossVectors(at,ht);var o,n=this.direction.dot(ct);if(0<n){if(i)return null;o=1}else{if(!(n<0))return null;o=-1,n=-n}st.subVectors(this.origin,t);e=o*this.direction.dot(ht.crossVectors(st,ht));return e<0||(i=o*this.direction.dot(at.cross(st)))<0||n<e+i||(t=-o*st.dot(ct))<0?null:this.at(t/n,r)},applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}});var lt=new E,h=new _,ft=new E(0,0,0),dt=new E(1,1,1),vt=new E,pt=new E,a=new E;function _(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function mt(){}Object.assign(_.prototype,{isMatrix4:!0,set:function(t,n,e,i,r,o,s,a,h,c,u,l,f,d,v,p){var m=this.elements;return m[0]=t,m[4]=n,m[8]=e,m[12]=i,m[1]=r,m[5]=o,m[9]=s,m[13]=a,m[2]=h,m[6]=c,m[10]=u,m[14]=l,m[3]=f,m[7]=d,m[11]=v,m[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new _).fromArray(this.elements)},copy:function(t){var n=this.elements,t=t.elements;return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],this},copyPosition:function(t){var n=this.elements,t=t.elements;return n[12]=t[12],n[13]=t[13],n[14]=t[14],this},extractBasis:function(t,n,e){return t.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this},makeBasis:function(t,n,e){return this.set(t.x,n.x,e.x,0,t.y,n.y,e.y,0,t.z,n.z,e.z,0,0,0,0,1),this},extractRotation:function(t){var n=this.elements,e=t.elements,i=1/lt.setFromMatrixColumn(t,0).length(),r=1/lt.setFromMatrixColumn(t,1).length(),t=1/lt.setFromMatrixColumn(t,2).length();return n[0]=e[0]*i,n[1]=e[1]*i,n[2]=e[2]*i,n[3]=0,n[4]=e[4]*r,n[5]=e[5]*r,n[6]=e[6]*r,n[7]=0,n[8]=e[8]*t,n[9]=e[9]*t,n[10]=e[10]*t,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var n,e,i,r,o,s,a,h,c,u,l,f,d=this.elements,v=t.x,p=t.y,m=t.z,g=Math.cos(v),v=Math.sin(v),_=Math.cos(p),p=Math.sin(p),y=Math.cos(m),m=Math.sin(m);return"XYZ"===t.order?(o=g*y,s=g*m,a=v*y,h=v*m,d[0]=_*y,d[4]=-_*m,d[8]=p,d[1]=s+a*p,d[5]=o-h*p,d[9]=-v*_,d[2]=h-o*p,d[6]=a+s*p,d[10]=g*_):"YXZ"===t.order?(e=_*m,i=p*y,d[0]=(n=_*y)+(r=p*m)*v,d[4]=i*v-e,d[8]=g*p,d[1]=g*m,d[5]=g*y,d[9]=-v,d[2]=e*v-i,d[6]=r+n*v,d[10]=g*_):"ZXY"===t.order?(e=_*m,i=p*y,d[0]=(n=_*y)-(r=p*m)*v,d[4]=-g*m,d[8]=i+e*v,d[1]=e+i*v,d[5]=g*y,d[9]=r-n*v,d[2]=-g*p,d[6]=v,d[10]=g*_):"ZYX"===t.order?(o=g*y,s=g*m,a=v*y,h=v*m,d[0]=_*y,d[4]=a*p-s,d[8]=o*p+h,d[1]=_*m,d[5]=h*p+o,d[9]=s*p-a,d[2]=-p,d[6]=v*_,d[10]=g*_):"YZX"===t.order?(c=g*_,u=g*p,l=v*_,f=v*p,d[0]=_*y,d[4]=f-c*m,d[8]=l*m+u,d[1]=m,d[5]=g*y,d[9]=-v*y,d[2]=-p*y,d[6]=u*m+l,d[10]=c-f*m):"XZY"===t.order&&(c=g*_,u=g*p,l=v*_,f=v*p,d[0]=_*y,d[4]=-m,d[8]=p*y,d[1]=c*m+f,d[5]=g*y,d[9]=u*m-l,d[2]=l*m-u,d[6]=v*y,d[10]=f*m+c),d[3]=0,d[7]=0,d[11]=0,d[12]=0,d[13]=0,d[14]=0,d[15]=1,this},makeRotationFromQuaternion:function(t){return this.compose(ft,t,dt)},lookAt:function(t,n,e){var i=this.elements;return a.subVectors(t,n),0===a.lengthSq()&&(a.z=1),a.normalize(),vt.crossVectors(e,a),0===vt.lengthSq()&&(1===Math.abs(e.z)?a.x+=1e-4:a.z+=1e-4,a.normalize(),vt.crossVectors(e,a)),vt.normalize(),pt.crossVectors(a,vt),i[0]=vt.x,i[4]=pt.x,i[8]=a.x,i[1]=vt.y,i[5]=pt.y,i[9]=a.y,i[2]=vt.z,i[6]=pt.z,i[10]=a.z,this},multiply:function(t,n){return void 0!==n?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,n)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,n){var t=t.elements,n=n.elements,e=this.elements,i=t[0],r=t[4],o=t[8],s=t[12],a=t[1],h=t[5],c=t[9],u=t[13],l=t[2],f=t[6],d=t[10],v=t[14],p=t[3],m=t[7],g=t[11],t=t[15],_=n[0],y=n[4],b=n[8],w=n[12],x=n[1],M=n[5],S=n[9],L=n[13],E=n[2],T=n[6],C=n[10],D=n[14],P=n[3],A=n[7],R=n[11],n=n[15];return e[0]=i*_+r*x+o*E+s*P,e[4]=i*y+r*M+o*T+s*A,e[8]=i*b+r*S+o*C+s*R,e[12]=i*w+r*L+o*D+s*n,e[1]=a*_+h*x+c*E+u*P,e[5]=a*y+h*M+c*T+u*A,e[9]=a*b+h*S+c*C+u*R,e[13]=a*w+h*L+c*D+u*n,e[2]=l*_+f*x+d*E+v*P,e[6]=l*y+f*M+d*T+v*A,e[10]=l*b+f*S+d*C+v*R,e[14]=l*w+f*L+d*D+v*n,e[3]=p*_+m*x+g*E+t*P,e[7]=p*y+m*M+g*T+t*A,e[11]=p*b+m*S+g*C+t*R,e[15]=p*w+m*L+g*D+t*n,this},multiplyScalar:function(t){var n=this.elements;return n[0]*=t,n[4]*=t,n[8]*=t,n[12]*=t,n[1]*=t,n[5]*=t,n[9]*=t,n[13]*=t,n[2]*=t,n[6]*=t,n[10]*=t,n[14]*=t,n[3]*=t,n[7]*=t,n[11]*=t,n[15]*=t,this},determinant:function(){var t=this.elements,n=t[0],e=t[4],i=t[8],r=t[12],o=t[1],s=t[5],a=t[9],h=t[13],c=t[2],u=t[6],l=t[10],f=t[14];return t[3]*(+r*a*u-i*h*u-r*s*l+e*h*l+i*s*f-e*a*f)+t[7]*(+n*a*f-n*h*l+r*o*l-i*o*f+i*h*c-r*a*c)+t[11]*(+n*h*u-n*s*f-r*o*u+e*o*f+r*s*c-e*h*c)+t[15]*(-i*s*c-n*a*u+n*s*l+i*o*u-e*o*l+e*a*c)},transpose:function(){var t=this.elements,n=t[1];return t[1]=t[4],t[4]=n,n=t[2],t[2]=t[8],t[8]=n,n=t[6],t[6]=t[9],t[9]=n,n=t[3],t[3]=t[12],t[12]=n,n=t[7],t[7]=t[13],t[13]=n,n=t[11],t[11]=t[14],t[14]=n,this},setPosition:function(t,n,e){var i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=n,i[14]=e),this},getInverse:function(t,n){void 0!==n&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");var n=this.elements,t=t.elements,e=t[0],i=t[1],r=t[2],o=t[3],s=t[4],a=t[5],h=t[6],c=t[7],u=t[8],l=t[9],f=t[10],d=t[11],v=t[12],p=t[13],m=t[14],t=t[15],g=l*m*c-p*f*c+p*h*d-a*m*d-l*h*t+a*f*t,_=v*f*c-u*m*c-v*h*d+s*m*d+u*h*t-s*f*t,y=u*p*c-v*l*c+v*a*d-s*p*d-u*a*t+s*l*t,b=v*l*h-u*p*h-v*a*f+s*p*f+u*a*m-s*l*m,w=e*g+i*_+r*y+o*b;return 0==w?this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0):(n[0]=g*(g=1/w),n[1]=(p*f*o-l*m*o-p*r*d+i*m*d+l*r*t-i*f*t)*g,n[2]=(a*m*o-p*h*o+p*r*c-i*m*c-a*r*t+i*h*t)*g,n[3]=(l*h*o-a*f*o-l*r*c+i*f*c+a*r*d-i*h*d)*g,n[4]=_*g,n[5]=(u*m*o-v*f*o+v*r*d-e*m*d-u*r*t+e*f*t)*g,n[6]=(v*h*o-s*m*o-v*r*c+e*m*c+s*r*t-e*h*t)*g,n[7]=(s*f*o-u*h*o+u*r*c-e*f*c-s*r*d+e*h*d)*g,n[8]=y*g,n[9]=(v*l*o-u*p*o-v*i*d+e*p*d+u*i*t-e*l*t)*g,n[10]=(s*p*o-v*a*o+v*i*c-e*p*c-s*i*t+e*a*t)*g,n[11]=(u*a*o-s*l*o-u*i*c+e*l*c+s*i*d-e*a*d)*g,n[12]=b*g,n[13]=(u*p*r-v*l*r+v*i*f-e*p*f-u*i*m+e*l*m)*g,n[14]=(v*a*r-s*p*r-v*i*h+e*p*h+s*i*m-e*a*m)*g,n[15]=(s*l*r-u*a*r+u*i*h-e*l*h-s*i*f+e*a*f)*g,this)},invert:function(){var t=this.elements,n=t[0],e=t[1],i=t[2],r=t[3],o=t[4],s=t[5],a=t[6],h=t[7],c=t[8],u=t[9],l=t[10],f=t[11],d=t[12],v=t[13],p=t[14],m=t[15],g=u*p*h-v*l*h+v*a*f-s*p*f-u*a*m+s*l*m,_=d*l*h-c*p*h-d*a*f+o*p*f+c*a*m-o*l*m,y=c*v*h-d*u*h+d*s*f-o*v*f-c*s*m+o*u*m,b=d*u*a-c*v*a-d*s*l+o*v*l+c*s*p-o*u*p,w=n*g+e*_+i*y+r*b;return 0==w?this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0):(t[0]=g*(g=1/w),t[1]=(v*l*r-u*p*r-v*i*f+e*p*f+u*i*m-e*l*m)*g,t[2]=(s*p*r-v*a*r+v*i*h-e*p*h-s*i*m+e*a*m)*g,t[3]=(u*a*r-s*l*r-u*i*h+e*l*h+s*i*f-e*a*f)*g,t[4]=_*g,t[5]=(c*p*r-d*l*r+d*i*f-n*p*f-c*i*m+n*l*m)*g,t[6]=(d*a*r-o*p*r-d*i*h+n*p*h+o*i*m-n*a*m)*g,t[7]=(o*l*r-c*a*r+c*i*h-n*l*h-o*i*f+n*a*f)*g,t[8]=y*g,t[9]=(d*u*r-c*v*r-d*e*f+n*v*f+c*e*m-n*u*m)*g,t[10]=(o*v*r-d*s*r+d*e*h-n*v*h-o*e*m+n*s*m)*g,t[11]=(c*s*r-o*u*r-c*e*h+n*u*h+o*e*f-n*s*f)*g,t[12]=b*g,t[13]=(c*v*i-d*u*i+d*e*l-n*v*l-c*e*p+n*u*p)*g,t[14]=(d*s*i-o*v*i-d*e*a+n*v*a+o*e*p-n*s*p)*g,t[15]=(o*u*i-c*s*i+c*e*a-n*u*a-o*e*l+n*s*l)*g,this)},scale:function(t){var n=this.elements,e=t.x,i=t.y,t=t.z;return n[0]*=e,n[4]*=i,n[8]*=t,n[1]*=e,n[5]*=i,n[9]*=t,n[2]*=e,n[6]*=i,n[10]*=t,n[3]*=e,n[7]*=i,n[11]*=t,this},getMaxScaleOnAxis:function(){var t=this.elements,n=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],t=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(n,e,t))},makeTranslation:function(t,n,e){return this.set(1,0,0,t,0,1,0,n,0,0,1,e,0,0,0,1),this},makeRotationX:function(t){var n=Math.cos(t),t=Math.sin(t);return this.set(1,0,0,0,0,n,-t,0,0,t,n,0,0,0,0,1),this},makeRotationY:function(t){var n=Math.cos(t),t=Math.sin(t);return this.set(n,0,t,0,0,1,0,0,-t,0,n,0,0,0,0,1),this},makeRotationZ:function(t){var n=Math.cos(t),t=Math.sin(t);return this.set(n,-t,0,0,t,n,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,n){var e=Math.cos(n),n=Math.sin(n),i=1-e,r=t.x,o=t.y,t=t.z,s=i*r,a=i*o;return this.set(s*r+e,s*o-n*t,s*t+n*o,0,s*o+n*t,a*o+e,a*t-n*r,0,s*t-n*o,a*t+n*r,i*t*t+e,0,0,0,0,1),this},makeScale:function(t,n,e){return this.set(t,0,0,0,0,n,0,0,0,0,e,0,0,0,0,1),this},makeShear:function(t,n,e){return this.set(1,n,e,0,t,1,e,0,t,n,1,0,0,0,0,1),this},compose:function(t,n,e){var i=this.elements,r=n.u,o=n.v,s=n._,n=n.M,a=r+r,h=o+o,c=s+s,u=r*a,l=r*h,r=r*c,f=o*h,o=o*c,s=s*c,a=n*a,h=n*h,n=n*c,c=e.x,d=e.y,e=e.z;return i[0]=(1-(f+s))*c,i[1]=(l+n)*c,i[2]=(r-h)*c,i[3]=0,i[4]=(l-n)*d,i[5]=(1-(u+s))*d,i[6]=(o+a)*d,i[7]=0,i[8]=(r+h)*e,i[9]=(o-a)*e,i[10]=(1-(u+f))*e,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this},decompose:function(t,n,e){var i=this.elements,r=lt.set(i[0],i[1],i[2]).length(),o=lt.set(i[4],i[5],i[6]).length(),s=lt.set(i[8],i[9],i[10]).length(),t=(this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],h.copy(this),1/r),i=1/o,a=1/s;return h.elements[0]*=t,h.elements[1]*=t,h.elements[2]*=t,h.elements[4]*=i,h.elements[5]*=i,h.elements[6]*=i,h.elements[8]*=a,h.elements[9]*=a,h.elements[10]*=a,n.setFromRotationMatrix(h),e.x=r,e.y=o,e.z=s,this},makePerspective:function(t,n,e,i,r,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var s=this.elements,a=2*r/(e-i),h=(n+t)/(n-t),e=(e+i)/(e-i),i=-(o+r)/(o-r),o=-2*o*r/(o-r);return s[0]=2*r/(n-t),s[4]=0,s[8]=h,s[12]=0,s[1]=0,s[5]=a,s[9]=e,s[13]=0,s[2]=0,s[6]=0,s[10]=i,s[14]=o,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this},makeOrthographic:function(t,n,e,i,r,o){var s=this.elements,a=1/(n-t),h=1/(e-i),c=1/(o-r),n=(n+t)*a,t=(e+i)*h,e=(o+r)*c;return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-n,s[1]=0,s[5]=2*h,s[9]=0,s[13]=-t,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-e,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this},equals:function(t){for(var n=this.elements,e=t.elements,i=0;i<16;i++)if(n[i]!==e[i])return!1;return!0},fromArray:function(t,n){void 0===n&&(n=0);for(var e=0;e<16;e++)this.elements[e]=t[e+n];return this},toArray:function(t,n){var e=this.elements;return(t=void 0===t?[]:t)[n=void 0===n?0:n]=e[0],t[n+1]=e[1],t[n+2]=e[2],t[n+3]=e[3],t[n+4]=e[4],t[n+5]=e[5],t[n+6]=e[6],t[n+7]=e[7],t[n+8]=e[8],t[n+9]=e[9],t[n+10]=e[10],t[n+11]=e[11],t[n+12]=e[12],t[n+13]=e[13],t[n+14]=e[14],t[n+15]=e[15],t}}),Object.assign(mt.prototype,{addEventListener:function(t,n){void 0===this.T&&(this.T={});var e=this.T;void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(n)&&e[t].push(n)},hasEventListener:function(t,n){var e;return void 0!==this.T&&void 0!==(e=this.T)[t]&&-1!==e[t].indexOf(n)},removeEventListener:function(t,n){var e;void 0!==this.T&&void 0!==(t=this.T[t])&&-1!==(e=t.indexOf(n))&&t.splice(e,1)},dispatchEvent:function(t){if(void 0!==this.T){var n=this.T[t.type];if(void 0!==n){t.target=this;for(var e=n.slice(0),i=0,r=e.length;i<r;i++)e[i].call(this,t)}}}});var gt=new _,_t=new o;function yt(t,n,e,i){this.u=t||0,this.v=n||0,this._=e||0,this.C=i||yt.DefaultOrder}function bt(){this.mask=1}function u(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}yt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],yt.DefaultOrder="XYZ",Object.defineProperties(yt.prototype,{x:{get:function(){return this.u},set:function(t){this.u=t,this.S()}},y:{get:function(){return this.v},set:function(t){this.v=t,this.S()}},z:{get:function(){return this._},set:function(t){this._=t,this.S()}},order:{get:function(){return this.C},set:function(t){this.C=t,this.S()}}}),Object.assign(yt.prototype,{isEuler:!0,set:function(t,n,e,i){return this.u=t,this.v=n,this._=e,this.C=i||this.C,this.S(),this},clone:function(){return new this.constructor(this.u,this.v,this._,this.C)},copy:function(t){return this.u=t.u,this.v=t.v,this._=t._,this.C=t.C,this.S(),this},setFromRotationMatrix:function(t,n,e){var i=v.clamp,t=t.elements,r=t[0],o=t[4],s=t[8],a=t[1],h=t[5],c=t[9],u=t[2],l=t[6],t=t[10];return"XYZ"===(n=n||this.C)?(this.v=Math.asin(i(s,-1,1)),Math.abs(s)<.9999999?(this.u=Math.atan2(-c,t),this._=Math.atan2(-o,r)):(this.u=Math.atan2(l,h),this._=0)):"YXZ"===n?(this.u=Math.asin(-i(c,-1,1)),Math.abs(c)<.9999999?(this.v=Math.atan2(s,t),this._=Math.atan2(a,h)):(this.v=Math.atan2(-u,r),this._=0)):"ZXY"===n?(this.u=Math.asin(i(l,-1,1)),Math.abs(l)<.9999999?(this.v=Math.atan2(-u,t),this._=Math.atan2(-o,h)):(this.v=0,this._=Math.atan2(a,r))):"ZYX"===n?(this.v=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this.u=Math.atan2(l,t),this._=Math.atan2(a,r)):(this.u=0,this._=Math.atan2(-o,h))):"YZX"===n?(this._=Math.asin(i(a,-1,1)),Math.abs(a)<.9999999?(this.u=Math.atan2(-c,h),this.v=Math.atan2(-u,r)):(this.u=0,this.v=Math.atan2(s,t))):"XZY"===n?(this._=Math.asin(-i(o,-1,1)),Math.abs(o)<.9999999?(this.u=Math.atan2(l,h),this.v=Math.atan2(s,r)):(this.u=Math.atan2(-c,t),this.v=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+n),this.C=n,!1!==e&&this.S(),this},setFromQuaternion:function(t,n,e){return gt.makeRotationFromQuaternion(t),this.setFromRotationMatrix(gt,n,e)},setFromVector3:function(t,n){return this.set(t.x,t.y,t.z,n||this.C)},reorder:function(t){return _t.setFromEuler(this),this.setFromQuaternion(_t,t)},equals:function(t){return t.u===this.u&&t.v===this.v&&t._===this._&&t.C===this.C},fromArray:function(t){return this.u=t[0],this.v=t[1],this._=t[2],void 0!==t[3]&&(this.C=t[3]),this.S(),this},toArray:function(t,n){return(t=void 0===t?[]:t)[n=void 0===n?0:n]=this.u,t[n+1]=this.v,t[n+2]=this._,t[n+3]=this.C,t},toVector3:function(t){return t?t.set(this.u,this.v,this._):new E(this.u,this.v,this._)},L:function(t){return this.S=t,this},S:function(){}}),Object.assign(bt.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},enableAll:function(){this.mask=-1},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},disableAll:function(){this.mask=0},test:function(t){return 0!=(this.mask&t.mask)}}),Object.assign(u.prototype,{isMatrix3:!0,set:function(t,n,e,i,r,o,s,a,h){var c=this.elements;return c[0]=t,c[1]=i,c[2]=s,c[3]=n,c[4]=r,c[5]=a,c[6]=e,c[7]=o,c[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var n=this.elements,t=t.elements;return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],this},extractBasis:function(t,n,e){return t.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this},setFromMatrix4:function(t){t=t.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,n){var t=t.elements,n=n.elements,e=this.elements,i=t[0],r=t[3],o=t[6],s=t[1],a=t[4],h=t[7],c=t[2],u=t[5],t=t[8],l=n[0],f=n[3],d=n[6],v=n[1],p=n[4],m=n[7],g=n[2],_=n[5],n=n[8];return e[0]=i*l+r*v+o*g,e[3]=i*f+r*p+o*_,e[6]=i*d+r*m+o*n,e[1]=s*l+a*v+h*g,e[4]=s*f+a*p+h*_,e[7]=s*d+a*m+h*n,e[2]=c*l+u*v+t*g,e[5]=c*f+u*p+t*_,e[8]=c*d+u*m+t*n,this},multiplyScalar:function(t){var n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=t,n[4]*=t,n[7]*=t,n[2]*=t,n[5]*=t,n[8]*=t,this},determinant:function(){var t=this.elements,n=t[0],e=t[1],i=t[2],r=t[3],o=t[4],s=t[5],a=t[6],h=t[7],t=t[8];return n*o*t-n*s*h-e*r*t+e*s*a+i*r*h-i*o*a},getInverse:function(t,n){void 0!==n&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");var n=t.elements,t=this.elements,e=n[0],i=n[1],r=n[2],o=n[3],s=n[4],a=n[5],h=n[6],c=n[7],n=n[8],u=n*s-a*c,l=a*h-n*o,f=c*o-s*h,d=e*u+i*l+r*f;return 0==d?this.set(0,0,0,0,0,0,0,0,0):(t[0]=u*(u=1/d),t[1]=(r*c-n*i)*u,t[2]=(a*i-r*s)*u,t[3]=l*u,t[4]=(n*e-r*h)*u,t[5]=(r*o-a*e)*u,t[6]=f*u,t[7]=(i*h-c*e)*u,t[8]=(s*e-i*o)*u,this)},transpose:function(){var t=this.elements,n=t[1];return t[1]=t[3],t[3]=n,n=t[2],t[2]=t[6],t[6]=n,n=t[5],t[5]=t[7],t[7]=n,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var n=this.elements;return t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8],this},setUvTransform:function(t,n,e,i,r,o,s){var a=Math.cos(r),r=Math.sin(r);this.set(e*a,e*r,-e*(a*o+r*s)+o+t,-i*r,i*a,-i*(-r*o+a*s)+s+n,0,0,1)},scale:function(t,n){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=n,e[4]*=n,e[7]*=n,this},rotate:function(t){var n=Math.cos(t),t=Math.sin(t),e=this.elements,i=e[0],r=e[3],o=e[6],s=e[1],a=e[4],h=e[7];return e[0]=n*i+t*s,e[3]=n*r+t*a,e[6]=n*o+t*h,e[1]=-t*i+n*s,e[4]=-t*r+n*a,e[7]=-t*o+n*h,this},translate:function(t,n){var e=this.elements;return e[0]+=t*e[2],e[3]+=t*e[5],e[6]+=t*e[8],e[1]+=n*e[2],e[4]+=n*e[5],e[7]+=n*e[8],this},equals:function(t){for(var n=this.elements,e=t.elements,i=0;i<9;i++)if(n[i]!==e[i])return!1;return!0},fromArray:function(t,n){void 0===n&&(n=0);for(var e=0;e<9;e++)this.elements[e]=t[e+n];return this},toArray:function(t,n){var e=this.elements;return(t=void 0===t?[]:t)[n=void 0===n?0:n]=e[0],t[n+1]=e[1],t[n+2]=e[2],t[n+3]=e[3],t[n+4]=e[4],t[n+5]=e[5],t[n+6]=e[6],t[n+7]=e[7],t[n+8]=e[8],t}});var wt=0,xt=new E,Mt=new o,i=new _,St=new E,Lt=new E,Et=new E,Tt=new o,Ct=new E(1,0,0),Dt=new E(0,1,0),Pt=new E(0,0,1),At={type:"added"},Rt={type:"removed"};function c(){Object.defineProperty(this,"id",{value:wt++}),this.uuid=v.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=c.DefaultUp.clone();var t=new E,n=new yt,e=new o,i=new E(1,1,1);n.L(function(){e.setFromEuler(n,!1)}),e.L(function(){n.setFromQuaternion(e,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new _},normalMatrix:{value:new u}}),this.matrix=new _,this.matrixWorld=new _,this.matrixAutoUpdate=c.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new bt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}c.DefaultUp=new E(0,1,0),c.DefaultMatrixAutoUpdate=!0,c.prototype=Object.assign(Object.create(mt.prototype),{constructor:c,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,n){this.quaternion.setFromAxisAngle(t,n)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,n){return Mt.setFromAxisAngle(t,n),this.quaternion.multiply(Mt),this},rotateOnWorldAxis:function(t,n){return Mt.setFromAxisAngle(t,n),this.quaternion.premultiply(Mt),this},rotateX:function(t){return this.rotateOnAxis(Ct,t)},rotateY:function(t){return this.rotateOnAxis(Dt,t)},rotateZ:function(t){return this.rotateOnAxis(Pt,t)},translateOnAxis:function(t,n){return xt.copy(t).applyQuaternion(this.quaternion),this.position.add(xt.multiplyScalar(n)),this},translateX:function(t){return this.translateOnAxis(Ct,t)},translateY:function(t){return this.translateOnAxis(Dt,t)},translateZ:function(t){return this.translateOnAxis(Pt,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(i.getInverse(this.matrixWorld))},lookAt:function(t,n,e){t.isVector3?St.copy(t):St.set(t,n,e);t=this.parent;this.updateWorldMatrix(!0,!1),Lt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?i.lookAt(Lt,St,this.up):i.lookAt(St,Lt,this.up),this.quaternion.setFromRotationMatrix(i),t&&(i.extractRotation(t.matrixWorld),Mt.setFromRotationMatrix(i),this.quaternion.premultiply(Mt.inverse()))},add:function(t){if(1<arguments.length)for(var n=0;n<arguments.length;n++)this.add(arguments[n]);else t===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",t):t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),(t.parent=this).children.push(t),t.dispatchEvent(At)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t);return this},remove:function(t){if(1<arguments.length)for(var n=0;n<arguments.length;n++)this.remove(arguments[n]);else{var e=this.children.indexOf(t);-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Rt))}return this},attach:function(t){return this.updateWorldMatrix(!0,!1),i.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),i.multiply(t.parent.matrixWorld)),t.applyMatrix4(i),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,n){if(this[t]===n)return this;for(var e=0,i=this.children.length;e<i;e++){var r=this.children[e].getObjectByProperty(t,n);if(void 0!==r)return r}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new E),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new o),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Lt,t,Et),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new E),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Lt,Tt,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new E),this.updateMatrixWorld(!0);var n=this.matrixWorld.elements;return t.set(n[8],n[9],n[10]).normalize()},raycast:function(){},traverse:function(t){t(this);for(var n=this.children,e=0,i=n.length;e<i;e++)n[e].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var n=this.children,e=0,i=n.length;e<i;e++)n[e].traverseVisible(t)}},traverseAncestors:function(t){var n=this.parent;null!==n&&(t(n),n.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t=!(this.matrixWorldNeedsUpdate=!1));for(var n=this.children,e=0,i=n.length;e<i;e++)n[e].updateMatrixWorld(t)},updateWorldMatrix:function(t,n){var e=this.parent;if(!0===t&&null!==e&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===n)for(var i=this.children,r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,n){if(void 0===n&&(n=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===n)for(var e=0;e<t.children.length;e++){var i=t.children[e];this.add(i.clone())}return this}});var Nt=new E,Ot=new E,It=new u;function Ut(t,n){this.normal=void 0!==t?t:new E(1,0,0),this.constant=void 0!==n?n:0}Object.assign(Ut.prototype,{isPlane:!0,set:function(t,n){return this.normal.copy(t),this.constant=n,this},setComponents:function(t,n,e,i){return this.normal.set(t,n,e),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,n){return this.normal.copy(t),this.constant=-n.dot(this.normal),this},setFromCoplanarPoints:function(t,n,e){e=Nt.subVectors(e,n).cross(Ot.subVectors(t,n)).normalize();return this.setFromNormalAndCoplanarPoint(e,t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,n){return void 0===n&&(console.warn("THREE.Plane: .projectPoint() target is now required"),n=new E),n.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(t,n){void 0===n&&(console.warn("THREE.Plane: .intersectLine() target is now required"),n=new E);var e=t.delta(Nt),i=this.normal.dot(e);return 0===i?0===this.distanceToPoint(t.start)?n.copy(t.start):void 0:(i=-(t.start.dot(this.normal)+this.constant)/i)<0||1<i?void 0:n.copy(e).multiplyScalar(i).add(t.start)},intersectsLine:function(t){var n=this.distanceToPoint(t.start),t=this.distanceToPoint(t.end);return n<0&&0<t||t<0&&0<n},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new E),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(t,n){n=n||It.getNormalMatrix(t),t=this.coplanarPoint(Nt).applyMatrix4(t),n=this.normal.applyMatrix3(n).normalize();return this.constant=-t.dot(n),this},translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}});var l=new E,f=new E,Ft=new E,d=new E,Ht=new E,kt=new E,jt=new E,Gt=new E,zt=new E,Vt=new E;function I(t,n,e){this.a=void 0!==t?t:new E,this.b=void 0!==n?n:new E,this.c=void 0!==e?e:new E}Object.assign(I,{getNormal:function(t,n,e,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new E),i.subVectors(e,n),l.subVectors(t,n),i.cross(l);e=i.lengthSq();return 0<e?i.multiplyScalar(1/Math.sqrt(e)):i.set(0,0,0)},getBarycoord:function(t,n,e,i,r){l.subVectors(i,n),f.subVectors(e,n),Ft.subVectors(t,n);var i=l.dot(l),e=l.dot(f),t=l.dot(Ft),n=f.dot(f),o=f.dot(Ft),s=i*n-e*e;return void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new E),0==s?r.set(-2,-1,-1):r.set(1-(n=(n*t-e*o)*(r=1/s))-(s=(i*o-e*t)*r),s,n)},containsPoint:function(t,n,e,i){return I.getBarycoord(t,n,e,i,d),0<=d.x&&0<=d.y&&d.x+d.y<=1},getUV:function(t,n,e,i,r,o,s,a){return this.getBarycoord(t,n,e,i,d),a.set(0,0),a.addScaledVector(r,d.x),a.addScaledVector(o,d.y),a.addScaledVector(s,d.z),a},isFrontFacing:function(t,n,e,i){return l.subVectors(e,n),f.subVectors(t,n),l.cross(f).dot(i)<0}}),Object.assign(I.prototype,{set:function(t,n,e){return this.a.copy(t),this.b.copy(n),this.c.copy(e),this},setFromPointsAndIndices:function(t,n,e,i){return this.a.copy(t[n]),this.b.copy(t[e]),this.c.copy(t[i]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){return l.subVectors(this.c,this.b),f.subVectors(this.a,this.b),.5*l.cross(f).length()},getMidpoint:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new E),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return I.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Ut),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,n){return I.getBarycoord(t,this.a,this.b,this.c,n)},getUV:function(t,n,e,i,r){return I.getUV(t,this.a,this.b,this.c,n,e,i,r)},containsPoint:function(t){return I.containsPoint(t,this.a,this.b,this.c)},isFrontFacing:function(t){return I.isFrontFacing(this.a,this.b,this.c,t)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(t,n){void 0===n&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),n=new E);var e=this.a,i=this.b,r=this.c,o=(Ht.subVectors(i,e),kt.subVectors(r,e),Gt.subVectors(t,e),Ht.dot(Gt)),s=kt.dot(Gt);if(o<=0&&s<=0)return n.copy(e);zt.subVectors(t,i);var a=Ht.dot(zt),h=kt.dot(zt);if(0<=a&&h<=a)return n.copy(i);var c=o*h-a*s;if(c<=0&&0<=o&&a<=0)return u=o/(o-a),n.copy(e).addScaledVector(Ht,u);Vt.subVectors(t,r);var u,l,t=Ht.dot(Vt),f=kt.dot(Vt);return 0<=f&&t<=f?n.copy(r):(o=t*s-o*f)<=0&&0<=s&&f<=0?(l=s/(s-f),n.copy(e).addScaledVector(kt,l)):(s=a*f-t*h)<=0&&0<=h-a&&0<=t-f?(jt.subVectors(r,i),l=(h-a)/(h-a+(t-f)),n.copy(i).addScaledVector(jt,l)):(u=o*(r=1/(s+o+c)),l=c*r,n.copy(e).addScaledVector(Ht,u).addScaledVector(kt,l))},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}});var Bt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},p={h:0,s:0,l:0},Wt={h:0,s:0,l:0};function m(t,n,e){return void 0===n&&void 0===e?this.set(t):this.setRGB(t,n,e)}function Yt(t,n,e){return e<0&&(e+=1),1<e&&--e,e<1/6?t+6*(n-t)*e:e<.5?n:e<2/3?t+6*(n-t)*(2/3-e):t}function Xt(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Zt(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}function qt(t,n,e,i,r,o){this.a=t,this.b=n,this.c=e,this.normal=i&&i.isVector3?i:new E,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new m,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==o?o:0}Object.assign(m.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,n,e){return this.r=t,this.g=n,this.b=e,this},setHSL:function(t,n,e){return t=v.euclideanModulo(t,1),n=v.clamp(n,0,1),e=v.clamp(e,0,1),0===n?this.r=this.g=this.b=e:(this.r=Yt(n=2*e-(e=e<=.5?e*(1+n):e+n-e*n),e,t+1/3),this.g=Yt(n,e,t),this.b=Yt(n,e,t-1/3)),this},setStyle:function(n){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+n+" will be ignored.")}if(h=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(n)){var e,i,r,o,s=h[1],a=h[2];switch(s){case"rgb":case"rgba":if(e=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[5]),this;if(e=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[5]),this;break;case"hsl":case"hsla":if(e=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return i=parseFloat(e[1])/360,r=parseInt(e[2],10)/100,o=parseInt(e[3],10)/100,t(e[5]),this.setHSL(i,r,o)}}else if(h=/^\#([A-Fa-f0-9]+)$/.exec(n)){var s=h[1],h=s.length;if(3===h)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,this;if(6===h)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,this}return n&&0<n.length?this.setColorName(n):this},setColorName:function(t){var n=Bt[t];return void 0!==n?this.setHex(n):console.warn("THREE.Color: Unknown color "+t),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,n){return void 0===n&&(n=2),this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this},copyLinearToGamma:function(t,n){n=0<(n=void 0===n?2:n)?1/n:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(t){return this.r=Xt(t.r),this.g=Xt(t.g),this.b=Xt(t.b),this},copyLinearToSRGB:function(t){return this.r=Zt(t.r),this.g=Zt(t.g),this.b=Zt(t.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});var n,e=this.r,i=this.g,r=this.b,o=Math.max(e,i,r),s=Math.min(e,i,r),a=(s+o)/2;if(s===o)c=n=0;else{var h=o-s,c=a<=.5?h/(o+s):h/(2-o-s);switch(o){case e:n=(i-r)/h+(i<r?6:0);break;case i:n=(r-e)/h+2;break;case r:n=(e-i)/h+4}n/=6}return t.h=n,t.s=c,t.l=a,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,n,e){return this.getHSL(p),p.h+=t,p.s+=n,p.l+=e,this.setHSL(p.h,p.s,p.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,n){return this.r=t.r+n.r,this.g=t.g+n.g,this.b=t.b+n.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,n){return this.r+=(t.r-this.r)*n,this.g+=(t.g-this.g)*n,this.b+=(t.b-this.b)*n,this},lerpHSL:function(t,n){this.getHSL(p),t.getHSL(Wt);var t=v.lerp(p.h,Wt.h,n),e=v.lerp(p.s,Wt.s,n),n=v.lerp(p.l,Wt.l,n);return this.setHSL(t,e,n),this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,n){return this.r=t[n=void 0===n?0:n],this.g=t[n+1],this.b=t[n+2],this},toArray:function(t,n){return(t=void 0===t?[]:t)[n=void 0===n?0:n]=this.r,t[n+1]=this.g,t[n+2]=this.b,t}}),m.NAMES=Bt,Object.assign(qt.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var n=0,e=t.vertexNormals.length;n<e;n++)this.vertexNormals[n]=t.vertexNormals[n].clone();for(n=0,e=t.vertexColors.length;n<e;n++)this.vertexColors[n]=t.vertexColors[n].clone();return this}});var Kt=1,Qt=2,g=1e3,Jt=0;function e(){Object.defineProperty(this,"id",{value:Jt++}),this.uuid=v.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function y(t){e.call(this),this.type="MeshBasicMaterial",this.color=new m(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}function $t(t,n,e,i){this.x=t||0,this.y=n||0,this.z=e||0,this.w=void 0!==i?i:1}e.prototype=Object.assign(Object.create(mt.prototype),{constructor:e,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var n in t){var e,i=t[n];void 0===i?console.warn("THREE.Material: '"+n+"' parameter is undefined."):"shading"===n?(console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i):void 0===(e=this[n])?console.warn("THREE."+this.type+": '"+n+"' is not a property of this material."):e&&e.isColor?e.set(i):e&&e.isVector3&&i&&i.isVector3?e.copy(i):this[n]=i}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;var n=t.clippingPlanes,e=null;if(null!==n)for(var i=n.length,e=new Array(i),r=0;r!==i;++r)e[r]=n[r].clone();return this.clippingPlanes=e,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(e.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),((y.prototype=Object.create(e.prototype)).constructor=y).prototype.isMeshBasicMaterial=!0,y.prototype.copy=function(t){return e.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},Object.defineProperties($t.prototype,{width:{get:function(){return this.z},set:function(t){this.z=t}},height:{get:function(){return this.w},set:function(t){this.w=t}}}),Object.assign($t.prototype,{isVector4:!0,set:function(t,n,e,i){return this.x=t,this.y=n,this.z=e,this.w=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,n){return void 0!==n?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,n)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this.w=t.w+n.w,this},addScaledVector:function(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this.w+=t.w*n,this},sub:function(t,n){return void 0!==n?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,n)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this.w=t.w-n.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var n=this.x,e=this.y,i=this.z,r=this.w,t=t.elements;return this.x=t[0]*n+t[4]*e+t[8]*i+t[12]*r,this.y=t[1]*n+t[5]*e+t[9]*i+t[13]*r,this.z=t[2]*n+t[6]*e+t[10]*i+t[14]*r,this.w=t[3]*n+t[7]*e+t[11]*i+t[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var n=Math.sqrt(1-t.w*t.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/n,this.y=t.y/n,this.z=t.z/n),this},setAxisAngleFromRotationMatrix:function(t){var n,e,i,r,o,s,a,h,c,u,t=t.elements,l=t[0],f=t[4],d=t[8],v=t[1],p=t[5],m=t[9],g=t[2],_=t[6],t=t[10];return Math.abs(f-v)<.01&&Math.abs(d-g)<.01&&Math.abs(m-_)<.01?Math.abs(f+v)<.1&&Math.abs(d+g)<.1&&Math.abs(m+_)<.1&&Math.abs(l+p+t-3)<.1?this.set(1,0,0,0):(r=Math.PI,s=(t+1)/2,a=(f+v)/4,h=(d+g)/4,c=(m+_)/4,(o=(p+1)/2)<(u=(l+1)/2)&&s<u?i=u<.01?(n=0,e=.707106781):(e=a/(n=Math.sqrt(u)),h/n):s<o?i=o<.01?(e=0,n=.707106781):(n=a/(e=Math.sqrt(o)),c/e):s<.01?(e=n=.707106781,i=0):(n=h/(i=Math.sqrt(s)),e=c/i),this.set(n,e,i,r)):(u=Math.sqrt((_-m)*(_-m)+(d-g)*(d-g)+(v-f)*(v-f)),Math.abs(u)<.001&&(u=1),this.x=(_-m)/u,this.y=(d-g)/u,this.z=(v-f)/u,this.w=Math.acos((l+p+t-1)/2)),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this.w=Math.max(t.w,Math.min(n.w,this.w)),this},clampScalar:function(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this.w=Math.max(t,Math.min(n,this.w)),this},clampLength:function(t,n){var e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(n,e)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this.w+=(t.w-this.w)*n,this},lerpVectors:function(t,n,e){return this.subVectors(n,t).multiplyScalar(e).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,n){return this.x=t[n=void 0===n?0:n],this.y=t[n+1],this.z=t[n+2],this.w=t[n+3],this},toArray:function(t,n){return(t=void 0===t?[]:t)[n=void 0===n?0:n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t[n+3]=this.w,t},fromBufferAttribute:function(t,n,e){return void 0!==e&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this.w=t.getW(n),this}});var b=new E;function w(t,n,e){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=n,this.count=void 0!==t?t.length/n:0,this.normalized=!0===e,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function tn(t,n,e){w.call(this,new Int8Array(t),n,e)}function nn(t,n,e){w.call(this,new Uint8Array(t),n,e)}function en(t,n,e){w.call(this,new Uint8ClampedArray(t),n,e)}function rn(t,n,e){w.call(this,new Int16Array(t),n,e)}function on(t,n,e){w.call(this,new Uint16Array(t),n,e)}function sn(t,n,e){w.call(this,new Int32Array(t),n,e)}function an(t,n,e){w.call(this,new Uint32Array(t),n,e)}function T(t,n,e){w.call(this,new Float32Array(t),n,e)}function hn(t,n,e){w.call(this,new Float64Array(t),n,e)}function cn(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.defineProperty(w.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(w.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,n,e){t*=this.itemSize,e*=n.itemSize;for(var i=0,r=this.itemSize;i<r;i++)this.array[t+i]=n.array[e+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var n=this.array,e=0,i=0,r=t.length;i<r;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new m),n[e++]=o.r,n[e++]=o.g,n[e++]=o.b}return this},copyVector2sArray:function(t){for(var n=this.array,e=0,i=0,r=t.length;i<r;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new O),n[e++]=o.x,n[e++]=o.y}return this},copyVector3sArray:function(t){for(var n=this.array,e=0,i=0,r=t.length;i<r;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new E),n[e++]=o.x,n[e++]=o.y,n[e++]=o.z}return this},copyVector4sArray:function(t){for(var n=this.array,e=0,i=0,r=t.length;i<r;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new $t),n[e++]=o.x,n[e++]=o.y,n[e++]=o.z,n[e++]=o.w}return this},applyMatrix3:function(t){for(var n=0,e=this.count;n<e;n++)b.x=this.getX(n),b.y=this.getY(n),b.z=this.getZ(n),b.applyMatrix3(t),this.setXYZ(n,b.x,b.y,b.z);return this},applyMatrix4:function(t){for(var n=0,e=this.count;n<e;n++)b.x=this.getX(n),b.y=this.getY(n),b.z=this.getZ(n),b.applyMatrix4(t),this.setXYZ(n,b.x,b.y,b.z);return this},applyNormalMatrix:function(t){for(var n=0,e=this.count;n<e;n++)b.x=this.getX(n),b.y=this.getY(n),b.z=this.getZ(n),b.applyNormalMatrix(t),this.setXYZ(n,b.x,b.y,b.z);return this},transformDirection:function(t){for(var n=0,e=this.count;n<e;n++)b.x=this.getX(n),b.y=this.getY(n),b.z=this.getZ(n),b.transformDirection(t),this.setXYZ(n,b.x,b.y,b.z);return this},set:function(t,n){return this.array.set(t,n=void 0===n?0:n),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,n){return this.array[t*this.itemSize]=n,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,n){return this.array[t*this.itemSize+1]=n,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,n){return this.array[t*this.itemSize+2]=n,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,n){return this.array[t*this.itemSize+3]=n,this},setXY:function(t,n,e){return t*=this.itemSize,this.array[t+0]=n,this.array[t+1]=e,this},setXYZ:function(t,n,e,i){return t*=this.itemSize,this.array[t+0]=n,this.array[t+1]=e,this.array[t+2]=i,this},setXYZW:function(t,n,e,i,r){return t*=this.itemSize,this.array[t+0]=n,this.array[t+1]=e,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),(tn.prototype=Object.create(w.prototype)).constructor=tn,(nn.prototype=Object.create(w.prototype)).constructor=nn,(en.prototype=Object.create(w.prototype)).constructor=en,(rn.prototype=Object.create(w.prototype)).constructor=rn,on.prototype=Object.create(w.prototype),on.prototype.constructor=on,(sn.prototype=Object.create(w.prototype)).constructor=sn,an.prototype=Object.create(w.prototype),an.prototype.constructor=an,(T.prototype=Object.create(w.prototype)).constructor=T,(hn.prototype=Object.create(w.prototype)).constructor=hn,Object.assign(cn.prototype,{computeGroups:function(t){for(var n,e=[],i=void 0,r=t.faces,o=0;o<r.length;o++){var s=r[o];s.materialIndex!==i&&(i=s.materialIndex,void 0!==n&&(n.count=3*o-n.start,e.push(n)),n={start:3*o,materialIndex:i})}void 0!==n&&(n.count=3*o-n.start,e.push(n)),this.groups=e},fromGeometry:function(t){var n=t.faces,e=t.vertices,i=t.faceVertexUvs,r=i[0]&&0<i[0].length,o=i[1]&&0<i[1].length,s=t.morphTargets,a=s.length;if(0<a){for(var h=[],c=0;c<a;c++)h[c]={name:s[c].name,data:[]};this.morphTargets.position=h}var u=t.morphNormals,l=u.length;if(0<l){for(var f=[],c=0;c<l;c++)f[c]={name:u[c].name,data:[]};this.morphTargets.normal=f}var d=t.skinIndices,v=t.skinWeights,p=d.length===e.length,m=v.length===e.length;0<e.length&&0===n.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(c=0;c<n.length;c++){var g,_=n[c],y=(this.vertices.push(e[_.a],e[_.b],e[_.c]),_.vertexNormals),y=(3===y.length?this.normals.push(y[0],y[1],y[2]):(y=_.normal,this.normals.push(y,y,y)),_.vertexColors);3===y.length?this.colors.push(y[0],y[1],y[2]):(y=_.color,this.colors.push(y,y,y)),!0===r&&(void 0!==(g=i[0][c])?this.uvs.push(g[0],g[1],g[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new O,new O,new O))),!0===o&&(void 0!==(g=i[1][c])?this.uvs2.push(g[0],g[1],g[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new O,new O,new O)));for(var b=0;b<a;b++){var w=s[b].vertices;h[b].data.push(w[_.a],w[_.b],w[_.c])}for(b=0;b<l;b++){var x=u[b].vertexNormals[c];f[b].data.push(x.a,x.b,x.c)}p&&this.skinIndices.push(d[_.a],d[_.b],d[_.c]),m&&this.skinWeights.push(v[_.a],v[_.b],v[_.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}});var un=1,x=new _,ln=new c,fn=new E,M=new tt,dn=new tt,S=new E;function C(){Object.defineProperty(this,"id",{value:un+=2}),this.uuid=v.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}C.prototype=Object.assign(Object.create(mt.prototype),{constructor:C,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(65535<function(t){if(0===t.length)return-1/0;for(var n=t[0],e=1,i=t.length;e<i;++e)t[e]>n&&(n=t[e]);return n}(t)?an:on)(t,1):this.index=t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,n){return this.attributes[t]=n,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,n,e){this.groups.push({start:t,count:n,materialIndex:void 0!==e?e:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,n){this.drawRange.start=t,this.drawRange.count=n},applyMatrix4:function(t){var n=this.attributes.position,n=(void 0!==n&&(n.applyMatrix4(t),n.needsUpdate=!0),this.attributes.normal),e=(void 0!==n&&(e=(new u).getNormalMatrix(t),n.applyNormalMatrix(e),n.needsUpdate=!0),this.attributes.tangent);return void 0!==e&&(e.transformDirection(t),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return x.makeRotationX(t),this.applyMatrix4(x),this},rotateY:function(t){return x.makeRotationY(t),this.applyMatrix4(x),this},rotateZ:function(t){return x.makeRotationZ(t),this.applyMatrix4(x),this},translate:function(t,n,e){return x.makeTranslation(t,n,e),this.applyMatrix4(x),this},scale:function(t,n,e){return x.makeScale(t,n,e),this.applyMatrix4(x),this},lookAt:function(t){return ln.lookAt(t),ln.updateMatrix(),this.applyMatrix4(ln.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(fn).negate(),this.translate(fn.x,fn.y,fn.z),this},setFromObject:function(t){var n,e,i=t.geometry;return t.isPoints||t.isLine?(e=new T(3*i.vertices.length,3),n=new T(3*i.colors.length,3),this.setAttribute("position",e.copyVector3sArray(i.vertices)),this.setAttribute("color",n.copyColorsArray(i.colors)),i.lineDistances&&i.lineDistances.length===i.vertices.length&&(e=new T(i.lineDistances.length,1),this.setAttribute("lineDistance",e.copyArray(i.lineDistances))),null!==i.boundingSphere&&(this.boundingSphere=i.boundingSphere.clone()),null!==i.boundingBox&&(this.boundingBox=i.boundingBox.clone())):t.isMesh&&i&&i.isGeometry&&this.fromGeometry(i),this},setFromPoints:function(t){for(var n=[],e=0,i=t.length;e<i;e++){var r=t[e];n.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new T(n,3)),this},updateFromObject:function(t){var n,e=t.geometry;if(t.isMesh){var i=e.D;if(!0===e.elementsNeedUpdate&&(i=void 0,e.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(e);i.verticesNeedUpdate=e.verticesNeedUpdate,i.normalsNeedUpdate=e.normalsNeedUpdate,i.colorsNeedUpdate=e.colorsNeedUpdate,i.uvsNeedUpdate=e.uvsNeedUpdate,i.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=i}return!0===e.verticesNeedUpdate&&(void 0!==(n=this.attributes.position)&&(n.copyVector3sArray(e.vertices),n.needsUpdate=!0),e.verticesNeedUpdate=!1),!0===e.normalsNeedUpdate&&(void 0!==(n=this.attributes.normal)&&(n.copyVector3sArray(e.normals),n.needsUpdate=!0),e.normalsNeedUpdate=!1),!0===e.colorsNeedUpdate&&(void 0!==(n=this.attributes.color)&&(n.copyColorsArray(e.colors),n.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(void 0!==(n=this.attributes.uv)&&(n.copyVector2sArray(e.uvs),n.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(void 0!==(n=this.attributes.lineDistance)&&(n.copyArray(e.lineDistances),n.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.D=(new cn).fromGeometry(t),this.fromDirectGeometry(t.D)},fromDirectGeometry:function(t){var n,e=new Float32Array(3*t.vertices.length);for(n in this.setAttribute("position",new w(e,3).copyVector3sArray(t.vertices)),0<t.normals.length&&(e=new Float32Array(3*t.normals.length),this.setAttribute("normal",new w(e,3).copyVector3sArray(t.normals))),0<t.colors.length&&(e=new Float32Array(3*t.colors.length),this.setAttribute("color",new w(e,3).copyColorsArray(t.colors))),0<t.uvs.length&&(e=new Float32Array(2*t.uvs.length),this.setAttribute("uv",new w(e,2).copyVector2sArray(t.uvs))),0<t.uvs2.length&&(e=new Float32Array(2*t.uvs2.length),this.setAttribute("uv2",new w(e,2).copyVector2sArray(t.uvs2))),this.groups=t.groups,t.morphTargets){for(var i=[],r=t.morphTargets[n],o=0,s=r.length;o<s;o++){var a=r[o],h=new T(3*a.data.length,3);h.name=a.name,i.push(h.copyVector3sArray(a.data))}this.morphAttributes[n]=i}return 0<t.skinIndices.length&&(e=new T(4*t.skinIndices.length,4),this.setAttribute("skinIndex",e.copyVector4sArray(t.skinIndices))),0<t.skinWeights.length&&(e=new T(4*t.skinWeights.length,4),this.setAttribute("skinWeight",e.copyVector4sArray(t.skinWeights))),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new tt);var t=this.attributes.position,n=this.morphAttributes.position;if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),n)for(var e=0,i=n.length;e<i;e++){var r=n[e];M.setFromBufferAttribute(r),this.morphTargetsRelative?(S.addVectors(this.boundingBox.min,M.min),this.boundingBox.expandByPoint(S),S.addVectors(this.boundingBox.max,M.max),this.boundingBox.expandByPoint(S)):(this.boundingBox.expandByPoint(M.min),this.boundingBox.expandByPoint(M.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new it);var t=this.attributes.position,n=this.morphAttributes.position;if(t){var e=this.boundingSphere.center;if(M.setFromBufferAttribute(t),n)for(var i=0,r=n.length;i<r;i++){var o=n[i];dn.setFromBufferAttribute(o),this.morphTargetsRelative?(S.addVectors(M.min,dn.min),M.expandByPoint(S),S.addVectors(M.max,dn.max),M.expandByPoint(S)):(M.expandByPoint(dn.min),M.expandByPoint(dn.max))}M.getCenter(e);for(var s=0,i=0,r=t.count;i<r;i++)S.fromBufferAttribute(t,i),s=Math.max(s,e.distanceToSquared(S));if(n)for(i=0,r=n.length;i<r;i++)for(var o=n[i],a=this.morphTargetsRelative,h=0,c=o.count;h<c;h++)S.fromBufferAttribute(o,h),a&&(fn.fromBufferAttribute(t,h),S.add(fn)),s=Math.max(s,e.distanceToSquared(S));this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,n=this.attributes;if(n.position){var e=n.position.array;if(void 0===n.normal)this.setAttribute("normal",new w(new Float32Array(e.length),3));else for(var i=n.normal.array,r=0,o=i.length;r<o;r++)i[r]=0;var s,a,h,c=n.normal.array,u=new E,l=new E,f=new E,d=new E,v=new E;if(t)for(var p=t.array,r=0,o=t.count;r<o;r+=3)s=3*p[r+0],a=3*p[r+1],h=3*p[r+2],u.fromArray(e,s),l.fromArray(e,a),f.fromArray(e,h),d.subVectors(f,l),v.subVectors(u,l),d.cross(v),c[s]+=d.x,c[1+s]+=d.y,c[2+s]+=d.z,c[a]+=d.x,c[1+a]+=d.y,c[2+a]+=d.z,c[h]+=d.x,c[1+h]+=d.y,c[2+h]+=d.z;else for(r=0,o=e.length;r<o;r+=9)u.fromArray(e,r),l.fromArray(e,r+3),f.fromArray(e,r+6),d.subVectors(f,l),v.subVectors(u,l),d.cross(v),c[r]=d.x,c[r+1]=d.y,c[r+2]=d.z,c[r+3]=d.x,c[r+4]=d.y,c[r+5]=d.z,c[r+6]=d.x,c[r+7]=d.y,c[r+8]=d.z;this.normalizeNormals(),n.normal.needsUpdate=!0}},normalizeNormals:function(){for(var t=this.attributes.normal,n=0,e=t.count;n<e;n++)S.x=t.getX(n),S.y=t.getY(n),S.z=t.getZ(n),S.normalize(),t.setXYZ(n,S.x,S.y,S.z)},dispose:function(){this.dispatchEvent({type:"dispose"})}});var vn=new _,pn=new ut,mn=new it,gn=new E,_n=new E,yn=new E,bn=new E,wn=new E,xn=new E,Mn=new E,Sn=new E,Ln=new E,En=new O,Tn=new O,Cn=new O,Dn=new E,Pn=new E;function An(t,n){c.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new C,this.material=void 0!==n?n:new y,this.updateMorphTargets()}function Rn(t,n,e,i,r,o,s,a){i=n.side===Kt?i.intersectTriangle(s,o,r,!0,a):i.intersectTriangle(r,o,s,n.side!==Qt,a);if(null===i)return null;Pn.copy(a),Pn.applyMatrix4(t.matrixWorld);r=e.ray.origin.distanceTo(Pn);return r<e.near||r>e.far?null:{distance:r,point:Pn.clone(),object:t}}function Nn(t,n,e,i,r,o,s,a,h,c,u,l){gn.fromBufferAttribute(r,c),_n.fromBufferAttribute(r,u),yn.fromBufferAttribute(r,l);var f=t.morphTargetInfluences;if(n.morphTargets&&o&&f){Mn.set(0,0,0),Sn.set(0,0,0),Ln.set(0,0,0);for(var d=0,v=o.length;d<v;d++){var p=f[d],m=o[d];0!==p&&(bn.fromBufferAttribute(m,c),wn.fromBufferAttribute(m,u),xn.fromBufferAttribute(m,l),s?(Mn.addScaledVector(bn,p),Sn.addScaledVector(wn,p),Ln.addScaledVector(xn,p)):(Mn.addScaledVector(bn.sub(gn),p),Sn.addScaledVector(wn.sub(_n),p),Ln.addScaledVector(xn.sub(yn),p)))}gn.add(Mn),_n.add(Sn),yn.add(Ln)}r=Rn(t,n,e,i,gn,_n,yn,Dn);return r&&(a&&(En.fromBufferAttribute(a,c),Tn.fromBufferAttribute(a,u),Cn.fromBufferAttribute(a,l),r.uv=I.getUV(Dn,gn,_n,yn,En,Tn,Cn,new O)),h&&(En.fromBufferAttribute(h,c),Tn.fromBufferAttribute(h,u),Cn.fromBufferAttribute(h,l),r.uv2=I.getUV(Dn,gn,_n,yn,En,Tn,Cn,new O)),t=new qt(c,u,l),I.getNormal(gn,_n,yn,t.normal),r.face=t),r}function L(){this.type="Curve",this.arcLengthDivisions=200}function On(t,n){L.call(this),this.type="LineCurve3",this.v1=t||new E,this.v2=n||new E}function In(t,n,e,i,r,o,s,a){L.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=n||0,this.xRadius=e||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=s||!1,this.aRotation=a||0}function Un(t,n,e,i,r,o){In.call(this,t,n,e,e,i,r,o),this.type="ArcCurve"}function Fn(){var r=0,o=0,s=0,a=0;function h(t,n,e,i){s=-3*(r=t)+3*n-2*(o=e)-i,a=2*t-2*n+e+i}return{initCatmullRom:function(t,n,e,i,r){h(n,e,r*(e-t),r*(i-n))},initNonuniformCatmullRom:function(t,n,e,i,r,o,s){t=(n-t)/r-(e-t)/(r+o)+(e-n)/o,r=(e-n)/o-(i-n)/(o+s)+(i-e)/s;h(n,e,t*=o,r*=o)},calc:function(t){var n=t*t;return r+o*t+s*n+a*(n*t)}}}An.prototype=Object.assign(Object.create(c.prototype),{constructor:An,isMesh:!0,copy:function(t){return c.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,n,e,i=this.geometry;if(i.isBufferGeometry){var r=i.morphAttributes,o=Object.keys(r);if(0<o.length){var s=r[o[0]];if(void 0!==s)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,n=s.length;t<n;t++)e=s[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}else{r=i.morphTargets;void 0!==r&&0<r.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,n){var e=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i&&(null===e.boundingSphere&&e.computeBoundingSphere(),mn.copy(e.boundingSphere),mn.applyMatrix4(r),!1!==t.ray.intersectsSphere(mn)&&(vn.getInverse(r),pn.copy(t.ray).applyMatrix4(vn),null===e.boundingBox||!1!==pn.intersectsBox(e.boundingBox))))if(e.isBufferGeometry){var o,s,a,h,c,u,l,f,d,v=e.index,p=e.attributes.position,m=e.morphAttributes.position,g=e.morphTargetsRelative,_=e.attributes.uv,y=e.attributes.uv2,b=e.groups,w=e.drawRange;if(null!==v)if(Array.isArray(i))for(h=0,u=b.length;h<u;h++)for(d=i[(f=b[h]).materialIndex],c=Math.max(f.start,w.start),l=Math.min(f.start+f.count,w.start+w.count);c<l;c+=3)o=v.getX(c),s=v.getX(c+1),a=v.getX(c+2),(A=Nn(this,d,t,pn,p,m,g,_,y,o,s,a))&&(A.faceIndex=Math.floor(c/3),A.face.materialIndex=f.materialIndex,n.push(A));else for(h=Math.max(0,w.start),u=Math.min(v.count,w.start+w.count);h<u;h+=3)o=v.getX(h),s=v.getX(h+1),a=v.getX(h+2),(A=Nn(this,i,t,pn,p,m,g,_,y,o,s,a))&&(A.faceIndex=Math.floor(h/3),n.push(A));else if(void 0!==p)if(Array.isArray(i))for(h=0,u=b.length;h<u;h++)for(d=i[(f=b[h]).materialIndex],c=Math.max(f.start,w.start),l=Math.min(f.start+f.count,w.start+w.count);c<l;c+=3)(A=Nn(this,d,t,pn,p,m,g,_,y,o=c,s=c+1,a=c+2))&&(A.faceIndex=Math.floor(c/3),A.face.materialIndex=f.materialIndex,n.push(A));else for(h=Math.max(0,w.start),u=Math.min(p.count,w.start+w.count);h<u;h+=3)(A=Nn(this,i,t,pn,p,m,g,_,y,o=h,s=h+1,a=h+2))&&(A.faceIndex=Math.floor(h/3),n.push(A))}else if(e.isGeometry){var x,M=Array.isArray(i),S=e.vertices,L=e.faces,r=e.faceVertexUvs[0];0<r.length&&(x=r);for(var E=0,T=L.length;E<T;E++){var C,D,P,A,R=L[E],N=M?i[R.materialIndex]:i;void 0!==N&&(C=S[R.a],D=S[R.b],P=S[R.c],A=Rn(this,N,t,pn,C,D,P,Dn))&&(x&&x[E]&&(N=x[E],En.copy(N[0]),Tn.copy(N[1]),Cn.copy(N[2]),A.uv=I.getUV(Dn,C,D,P,En,Tn,Cn,new O)),A.face=R,A.faceIndex=E,n.push(A))}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Object.assign(L.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,n){t=this.getUtoTmapping(t);return this.getPoint(t,n)},getPoints:function(t){void 0===t&&(t=5);for(var n=[],e=0;e<=t;e++)n.push(this.getPoint(e/t));return n},getSpacedPoints:function(t){void 0===t&&(t=5);for(var n=[],e=0;e<=t;e++)n.push(this.getPointAt(e/t));return n},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var n,e,i=[],r=this.getPoint(0),o=0;for(i.push(0),e=1;e<=t;e++)o+=(n=this.getPoint(e/t)).distanceTo(r),i.push(o),r=n;return this.cacheArcLengths=i},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,n){for(var e,i=this.getLengths(),r=0,o=i.length,s=n||t*i[o-1],a=0,h=o-1;a<=h;)if((e=i[r=Math.floor(a+(h-a)/2)]-s)<0)a=r+1;else{if(!(0<e)){h=r;break}h=r-1}return i[r=h]===s?r/(o-1):(r+(s-(n=i[r]))/(i[r+1]-n))/(o-1)},getTangent:function(t){var n=t-1e-4,t=t+1e-4,n=(1<t&&(t=1),this.getPoint(n=n<0?0:n));return this.getPoint(t).clone().sub(n).normalize()},getTangentAt:function(t){t=this.getUtoTmapping(t);return this.getTangent(t)},computeFrenetFrames:function(t,n){for(var e,i=new E,r=[],o=[],s=[],a=new E,h=new _,c=0;c<=t;c++)r[c]=this.getTangentAt(c/t),r[c].normalize();o[0]=new E,s[0]=new E;var u=Number.MAX_VALUE,l=Math.abs(r[0].x),f=Math.abs(r[0].y),d=Math.abs(r[0].z);for(l<=u&&(u=l,i.set(1,0,0)),f<=u&&(u=f,i.set(0,1,0)),d<=u&&i.set(0,0,1),a.crossVectors(r[0],i).normalize(),o[0].crossVectors(r[0],a),s[0].crossVectors(r[0],o[0]),c=1;c<=t;c++)o[c]=o[c-1].clone(),s[c]=s[c-1].clone(),a.crossVectors(r[c-1],r[c]),a.length()>Number.EPSILON&&(a.normalize(),e=Math.acos(v.clamp(r[c-1].dot(r[c]),-1,1)),o[c].applyMatrix4(h.makeRotationAxis(a,e))),s[c].crossVectors(r[c],o[c]);if(!0===n)for(e=Math.acos(v.clamp(o[0].dot(o[t]),-1,1)),e/=t,0<r[0].dot(a.crossVectors(o[0],o[t]))&&(e=-e),c=1;c<=t;c++)o[c].applyMatrix4(h.makeRotationAxis(r[c],e*c)),s[c].crossVectors(r[c],o[c]);return{tangents:r,normals:o,binormals:s}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),((On.prototype=Object.create(L.prototype)).constructor=On).prototype.isLineCurve3=!0,On.prototype.getPoint=function(t,n){n=n||new E;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},On.prototype.getPointAt=function(t,n){return this.getPoint(t,n)},On.prototype.copy=function(t){return L.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},((In.prototype=Object.create(L.prototype)).constructor=In).prototype.isEllipseCurve=!0,In.prototype.getPoint=function(t,n){for(var n=n||new O,e=2*Math.PI,i=this.aEndAngle-this.aStartAngle,r=Math.abs(i)<Number.EPSILON;i<0;)i+=e;for(;e<i;)i-=e;i<Number.EPSILON&&(i=r?0:e),!0!==this.aClockwise||r||(i===e?i=-e:i-=e);var o,s,a,h,r=this.aStartAngle+t*i,t=this.aX+this.xRadius*Math.cos(r),r=this.aY+this.yRadius*Math.sin(r);return 0!==this.aRotation&&(o=Math.cos(this.aRotation),s=Math.sin(this.aRotation),t=(a=t-this.aX)*o-(h=r-this.aY)*s+this.aX,r=a*s+h*o+this.aY),n.set(t,r)},In.prototype.copy=function(t){return L.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},((Un.prototype=Object.create(In.prototype)).constructor=Un).prototype.isArcCurve=!0;var Hn=new E,kn=new Fn,jn=new Fn,Gn=new Fn;function zn(t,n,e,i){L.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=n||!1,this.curveType=e||"centripetal",this.tension=i||.5}function Vn(t,n,e,i,r){var n=.5*(i-n),r=.5*(r-e),o=t*t;return(2*e-2*i+n+r)*(t*o)+(-3*e+3*i-2*n-r)*o+n*t+e}function Bn(t,n,e,i){return(r=1-(r=t))*r*n+2*(1-t)*t*e+t*t*i;var r}function Wn(t,n,e,i,r){return(o=1-(o=t))*o*o*n+3*(o=1-t)*o*t*e+3*(1-t)*t*t*i+t*t*t*r;var o}function Yn(t,n,e,i){L.call(this),this.type="CubicBezierCurve",this.v0=t||new O,this.v1=n||new O,this.v2=e||new O,this.v3=i||new O}function Xn(t,n,e,i){L.call(this),this.type="CubicBezierCurve3",this.v0=t||new E,this.v1=n||new E,this.v2=e||new E,this.v3=i||new E}function Zn(t,n){L.call(this),this.type="LineCurve",this.v1=t||new O,this.v2=n||new O}function qn(t,n,e){L.call(this),this.type="QuadraticBezierCurve",this.v0=t||new O,this.v1=n||new O,this.v2=e||new O}function Kn(t){L.call(this),this.type="SplineCurve",this.points=t||[]}function Qn(){L.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}((zn.prototype=Object.create(L.prototype)).constructor=zn).prototype.isCatmullRomCurve3=!0,zn.prototype.getPoint=function(t,n){var e,i,r,o,n=n||new E,s=this.points,a=s.length,t=(a-(this.closed?0:1))*t,h=Math.floor(t),t=t-h;return this.closed?h+=0<h?0:(Math.floor(Math.abs(h)/a)+1)*a:0===t&&h===a-1&&(h=a-2,t=1),e=this.closed||0<h?s[(h-1)%a]:(Hn.subVectors(s[0],s[1]).add(s[0]),Hn),i=s[h%a],r=s[(h+1)%a],h=this.closed||h+2<a?s[(h+2)%a]:(Hn.subVectors(s[a-1],s[a-2]).add(s[a-1]),Hn),"centripetal"===this.curveType||"chordal"===this.curveType?(s="chordal"===this.curveType?.5:.25,a=Math.pow(e.distanceToSquared(i),s),(o=Math.pow(i.distanceToSquared(r),s))<1e-4&&(o=1),a<1e-4&&(a=o),(s=Math.pow(r.distanceToSquared(h),s))<1e-4&&(s=o),kn.initNonuniformCatmullRom(e.x,i.x,r.x,h.x,a,o,s),jn.initNonuniformCatmullRom(e.y,i.y,r.y,h.y,a,o,s),Gn.initNonuniformCatmullRom(e.z,i.z,r.z,h.z,a,o,s)):"catmullrom"===this.curveType&&(kn.initCatmullRom(e.x,i.x,r.x,h.x,this.tension),jn.initCatmullRom(e.y,i.y,r.y,h.y,this.tension),Gn.initCatmullRom(e.z,i.z,r.z,h.z,this.tension)),n.set(kn.calc(t),jn.calc(t),Gn.calc(t)),n},zn.prototype.copy=function(t){L.prototype.copy.call(this,t),this.points=[];for(var n=0,e=t.points.length;n<e;n++){var i=t.points[n];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},((Yn.prototype=Object.create(L.prototype)).constructor=Yn).prototype.isCubicBezierCurve=!0,Yn.prototype.getPoint=function(t,n){var n=n||new O,e=this.v0,i=this.v1,r=this.v2,o=this.v3;return n.set(Wn(t,e.x,i.x,r.x,o.x),Wn(t,e.y,i.y,r.y,o.y)),n},Yn.prototype.copy=function(t){return L.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},((Xn.prototype=Object.create(L.prototype)).constructor=Xn).prototype.isCubicBezierCurve3=!0,Xn.prototype.getPoint=function(t,n){var n=n||new E,e=this.v0,i=this.v1,r=this.v2,o=this.v3;return n.set(Wn(t,e.x,i.x,r.x,o.x),Wn(t,e.y,i.y,r.y,o.y),Wn(t,e.z,i.z,r.z,o.z)),n},Xn.prototype.copy=function(t){return L.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},((Zn.prototype=Object.create(L.prototype)).constructor=Zn).prototype.isLineCurve=!0,Zn.prototype.getPoint=function(t,n){n=n||new O;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},Zn.prototype.getPointAt=function(t,n){return this.getPoint(t,n)},Zn.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},Zn.prototype.copy=function(t){return L.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},((qn.prototype=Object.create(L.prototype)).constructor=qn).prototype.isQuadraticBezierCurve=!0,qn.prototype.getPoint=function(t,n){var n=n||new O,e=this.v0,i=this.v1,r=this.v2;return n.set(Bn(t,e.x,i.x,r.x),Bn(t,e.y,i.y,r.y)),n},qn.prototype.copy=function(t){return L.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},((Kn.prototype=Object.create(L.prototype)).constructor=Kn).prototype.isSplineCurve=!0,Kn.prototype.getPoint=function(t,n){var n=n||new O,e=this.points,t=(e.length-1)*t,i=Math.floor(t),t=t-i,r=e[0===i?i:i-1],o=e[i],s=e[i>e.length-2?e.length-1:i+1],e=e[i>e.length-3?e.length-1:i+2];return n.set(Vn(t,r.x,o.x,s.x,e.x),Vn(t,r.y,o.y,s.y,e.y)),n},Kn.prototype.copy=function(t){L.prototype.copy.call(this,t),this.points=[];for(var n=0,e=t.points.length;n<e;n++){var i=t.points[n];this.points.push(i.clone())}return this},Qn.prototype=Object.assign(Object.create(L.prototype),{constructor:Qn,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),n=this.curves[this.curves.length-1].getPoint(1);t.equals(n)||this.curves.push(new Zn(n,t))},getPoint:function(t){for(var n,e,i,r=t*this.getLength(),o=this.getCurveLengths(),s=0;s<o.length;){if(o[s]>=r)return n=o[s]-r,i=(e=this.curves[s]).getLength(),e.getPointAt(0===i?0:1-n/i);s++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],n=0,e=0,i=this.curves.length;e<i;e++)n+=this.curves[e].getLength(),t.push(n);return this.cacheLengths=t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var n=[],e=0;e<=t;e++)n.push(this.getPoint(e/t));return this.autoClose&&n.push(n[0]),n},getPoints:function(t){t=t||12;for(var n,e=[],i=0,r=this.curves;i<r.length;i++)for(var o=r[i],s=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,a=o.getPoints(s),h=0;h<a.length;h++){var c=a[h];n&&n.equals(c)||(e.push(c),n=c)}return this.autoClose&&1<e.length&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){L.prototype.copy.call(this,t),this.curves=[];for(var n=0,e=t.curves.length;n<e;n++){var i=t.curves[n];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}});var Jn=0,D=new _,$n=new c,te=new E;function ne(){Object.defineProperty(this,"id",{value:Jn+=2}),this.uuid=v.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function ee(t,n,e,i,r,o){ne.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:n,radius:e,radialSegments:i,closed:r},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");o=new ie(t,n,e,i,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function ie(o,s,a,h,t){C.call(this),this.type="TubeBufferGeometry",this.parameters={path:o,tubularSegments:s,radius:a,radialSegments:h,closed:t},s=s||64,a=a||1,h=h||8,t=t||!1;var n,c,u=o.computeFrenetFrames(s,t),l=(this.tangents=u.tangents,this.normals=u.normals,this.binormals=u.binormals,new E),f=new E,e=new O,d=new E,v=[],p=[],i=[],r=[];for(n=0;n<s;n++)b(n);for(b(!1===t?s:0),n=0;n<=s;n++)for(c=0;c<=h;c++)e.x=n/s,e.y=c/h,i.push(e.x,e.y);for(c=1;c<=s;c++)for(n=1;n<=h;n++){var m=(h+1)*(c-1)+(n-1),g=(h+1)*c+(n-1),_=(h+1)*c+n,y=(h+1)*(c-1)+n;r.push(m,g,y),r.push(g,_,y)}function b(t){d=o.getPointAt(t/s,d);var n=u.normals[t],e=u.binormals[t];for(c=0;c<=h;c++){var i=c/h*Math.PI*2,r=Math.sin(i),i=-Math.cos(i);f.x=i*n.x+r*e.x,f.y=i*n.y+r*e.y,f.z=i*n.z+r*e.z,f.normalize(),p.push(f.x,f.y,f.z),l.x=d.x+a*f.x,l.y=d.y+a*f.y,l.z=d.z+a*f.z,v.push(l.x,l.y,l.z)}}this.setIndex(r),this.setAttribute("position",new T(v,3)),this.setAttribute("normal",new T(p,3)),this.setAttribute("uv",new T(i,2))}ne.prototype=Object.assign(Object.create(mt.prototype),{constructor:ne,isGeometry:!0,applyMatrix4:function(t){for(var n=(new u).getNormalMatrix(t),e=0,i=this.vertices.length;e<i;e++)this.vertices[e].applyMatrix4(t);for(e=0,i=this.faces.length;e<i;e++){var r=this.faces[e];r.normal.applyMatrix3(n).normalize();for(var o=0,s=r.vertexNormals.length;o<s;o++)r.vertexNormals[o].applyMatrix3(n).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return D.makeRotationX(t),this.applyMatrix4(D),this},rotateY:function(t){return D.makeRotationY(t),this.applyMatrix4(D),this},rotateZ:function(t){return D.makeRotationZ(t),this.applyMatrix4(D),this},translate:function(t,n,e){return D.makeTranslation(t,n,e),this.applyMatrix4(D),this},scale:function(t,n,e){return D.makeScale(t,n,e),this.applyMatrix4(D),this},lookAt:function(t){return $n.lookAt(t),$n.updateMatrix(),this.applyMatrix4($n.matrix),this},fromBufferGeometry:function(t){var o=this,n=null!==t.index?t.index.array:void 0,e=t.attributes;if(void 0===e.position)console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.");else{var i=e.position.array,s=void 0!==e.normal?e.normal.array:void 0,a=void 0!==e.color?e.color.array:void 0,h=void 0!==e.uv?e.uv.array:void 0,c=void 0!==e.uv2?e.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var r=0;r<i.length;r+=3)o.vertices.push((new E).fromArray(i,r)),void 0!==a&&o.colors.push((new m).fromArray(a,r));var u=t.groups;if(0<u.length)for(r=0;r<u.length;r++)for(var l=u[r],f=l.start,d=f,v=f+l.count;d<v;d+=3)void 0!==n?p(n[d],n[d+1],n[d+2],l.materialIndex):p(d,d+1,d+2,l.materialIndex);else if(void 0!==n)for(r=0;r<n.length;r+=3)p(n[r],n[r+1],n[r+2]);else for(r=0;r<i.length/3;r+=3)p(r,r+1,r+2);this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone())}return this;function p(t,n,e,i){var r=void 0===a?[]:[o.colors[t].clone(),o.colors[n].clone(),o.colors[e].clone()],r=new qt(t,n,e,void 0===s?[]:[(new E).fromArray(s,3*t),(new E).fromArray(s,3*n),(new E).fromArray(s,3*e)],r,i);o.faces.push(r),void 0!==h&&o.faceVertexUvs[0].push([(new O).fromArray(h,2*t),(new O).fromArray(h,2*n),(new O).fromArray(h,2*e)]),void 0!==c&&o.faceVertexUvs[1].push([(new O).fromArray(c,2*t),(new O).fromArray(c,2*n),(new O).fromArray(c,2*e)])}},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(te).negate(),this.translate(te.x,te.y,te.z),this},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,n=this.boundingSphere.radius,n=0===n?1:1/n,e=new _;return e.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(e),this},computeFaceNormals:function(){for(var t=new E,n=new E,e=0,i=this.faces.length;e<i;e++){var r=this.faces[e],o=this.vertices[r.a],s=this.vertices[r.b],a=this.vertices[r.c];t.subVectors(a,s),n.subVectors(o,s),t.cross(n),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){var n,e,i;for(void 0===t&&(t=!0),i=new Array(this.vertices.length),n=0,e=this.vertices.length;n<e;n++)i[n]=new E;if(t)for(var r,o,s,a=new E,h=new E,c=0,u=this.faces.length;c<u;c++)l=this.faces[c],r=this.vertices[l.a],o=this.vertices[l.b],s=this.vertices[l.c],a.subVectors(s,o),h.subVectors(r,o),a.cross(h),i[l.a].add(a),i[l.b].add(a),i[l.c].add(a);else for(this.computeFaceNormals(),c=0,u=this.faces.length;c<u;c++)i[(l=this.faces[c]).a].add(l.normal),i[l.b].add(l.normal),i[l.c].add(l.normal);for(n=0,e=this.vertices.length;n<e;n++)i[n].normalize();for(c=0,u=this.faces.length;c<u;c++){var l,f=(l=this.faces[c]).vertexNormals;3===f.length?(f[0].copy(i[l.a]),f[1].copy(i[l.b]),f[2].copy(i[l.c])):(f[0]=i[l.a].clone(),f[1]=i[l.b].clone(),f[2]=i[l.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,n;for(this.computeFaceNormals(),t=0,n=this.faces.length;t<n;t++){var e,i=(e=this.faces[t]).vertexNormals;3===i.length?(i[0].copy(e.normal),i[1].copy(e.normal),i[2].copy(e.normal)):(i[0]=e.normal.clone(),i[1]=e.normal.clone(),i[2]=e.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,n,e;for(s=0,a=this.faces.length;s<a;s++)for((e=this.faces[s]).P?e.P.copy(e.normal):e.P=e.normal.clone(),e.A||(e.A=[]),t=0,n=e.vertexNormals.length;t<n;t++)e.A[t]?e.A[t].copy(e.vertexNormals[t]):e.A[t]=e.vertexNormals[t].clone();var i=new ne;for(i.faces=this.faces,t=0,n=this.morphTargets.length;t<n;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];for(var r=this.morphNormals[t].faceNormals,o=this.morphNormals[t].vertexNormals,s=0,a=this.faces.length;s<a;s++)h=new E,c={a:new E,b:new E,c:new E},r.push(h),o.push(c)}var h,c,u=this.morphNormals[t];for(i.vertices=this.morphTargets[t].vertices,i.computeFaceNormals(),i.computeVertexNormals(),s=0,a=this.faces.length;s<a;s++)e=this.faces[s],h=u.faceNormals[s],c=u.vertexNormals[s],h.copy(e.normal),c.a.copy(e.vertexNormals[0]),c.b.copy(e.vertexNormals[1]),c.c.copy(e.vertexNormals[2])}for(s=0,a=this.faces.length;s<a;s++)(e=this.faces[s]).normal=e.P,e.vertexNormals=e.A},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new tt),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new it),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){for(var t,n,e,i,r={},o=[],s=[],a=Math.pow(10,4),h=0,c=this.vertices.length;h<c;h++)t=this.vertices[h],void 0===r[t=Math.round(t.x*a)+"_"+Math.round(t.y*a)+"_"+Math.round(t.z*a)]?(r[t]=h,o.push(this.vertices[h]),s[h]=o.length-1):s[h]=s[r[t]];var u=[];for(h=0,c=this.faces.length;h<c;h++){(n=this.faces[h]).a=s[n.a],n.b=s[n.b],n.c=s[n.c];for(var l=[n.a,n.b,n.c],f=0;f<3;f++)if(l[f]===l[(f+1)%3]){u.push(h);break}}for(h=u.length-1;0<=h;h--){var d=u[h];for(this.faces.splice(d,1),e=0,i=this.faceVertexUvs.length;e<i;e++)this.faceVertexUvs[e].splice(d,1)}var v=this.vertices.length-o.length;return this.vertices=o,v},setFromPoints:function(t){this.vertices=[];for(var n=0,e=t.length;n<e;n++){var i=t[n];this.vertices.push(new E(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,n=t.length,e=0;e<n;e++)t[e].R=e;t.sort(function(t,n){return t.materialIndex-n.materialIndex});var i,r,o=this.faceVertexUvs[0],s=this.faceVertexUvs[1];o&&o.length===n&&(i=[]),s&&s.length===n&&(r=[]);for(e=0;e<n;e++){var a=t[e].R;i&&i.push(o[a]),r&&r.push(s[a])}i&&(this.faceVertexUvs[0]=i),r&&(this.faceVertexUvs[1]=r)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(ee.prototype=Object.create(ne.prototype)).constructor=ee,(ie.prototype=Object.create(C.prototype)).constructor=ie;var re=0;function oe(t,n,e,i,r,o,s,a,h,c){Object.defineProperty(this,"id",{value:re++}),this.uuid=v.generateUUID(),this.name="",this.image=void 0!==t?t:oe.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==n?n:oe.DEFAULT_MAPPING,this.wrapS=void 0!==e?e:1001,this.wrapT=void 0!==i?i:1001,this.magFilter=void 0!==r?r:1006,this.minFilter=void 0!==o?o:1008,this.anisotropy=void 0!==h?h:1,this.format=void 0!==s?s:1023,this.internalFormat=null,this.type=void 0!==a?a:1009,this.offset=new O(0,0),this.repeat=new O(1,1),this.center=new O(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new u,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==c?c:3e3,this.version=0,this.onUpdate=null}function P(t,n,e,i,r,o,s,a,h){oe.call(this,t,n,e,i,r,o,s,a,h),this.needsUpdate=!0}function se(t){return(se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ae(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==se(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==se(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===se(t)?t:String(t)}(i.key),i)}}function he(t,n,e){return n&&ae(t.prototype,n),e&&ae(t,e),Object.defineProperty(t,"prototype",{writable:!1}),t}oe.DEFAULT_IMAGE=void 0,oe.DEFAULT_MAPPING=300,oe.prototype=Object.assign(Object.create(mt.prototype),{constructor:oe,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300===this.mapping){if(t.applyMatrix3(this.matrix),t.x<0||1<t.x)switch(this.wrapS){case g:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||1<t.y)switch(this.wrapT){case g:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}return t}}),Object.defineProperty(oe.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),((P.prototype=Object.create(oe.prototype)).constructor=P).prototype.isCanvasTexture=!0;var t=he(function t(n,e){if(!(this instanceof t))throw new TypeError("Cannot call a class as a function");this.N=n.points,this.O=n.color,this.I=n.opacity,void 0===this.I&&(this.I=1),this.U=n.height,void 0===this.U&&(this.U=0),this.F=n.extrudeHeight,void 0===this.F&&(this.F=1),this.H=n.url,this.k=n.count,this.j=null,this.G=90,this.V=null,this.B=!1,this.W=!1,this.Y=null,this.X=null,this.Z=new fengmap.FMBound,this.q=e}),ce=(Object.assign(t.prototype,{K:function(){var t=this.X;if(!t)return!1;t.enableUpdateRender()},J:function(){for(var r=this,t=new Qn,n=this.$(this.N,this.F),e=0;e<n.length-1;e++){n[e].x===n[e+1].x&&(n[e+1].x=n[e+1].x+.01),n[e].z===n[e+1].z&&(n[e+1].z=n[e+1].z+.01);var i=new On(n[e],n[e+1]);t.curves.push(i)}var o=new ie(t,this.G*(n.length-1),this.F/2,2),s=new y({color:new m(this.O),opacity:this.I,transparent:!0});return void 0!==this.H&&(s.visible=!1),this.j=new An(o,s),this.j.mapNode=this.q,void 0!==this.H?this.tt(this.H,function(t,n,e){void 0===r.k&&(r.k=r.nt(n,e));var n=r.et(t),e=document.createElement("canvas"),i=(e.width=512,e.height=1024,e.getContext("2d")),t=(i.drawImage(t,0,0,512,512),i.drawImage(n,0,512,512,512),new P(r.it(e)));t.repeat.set(r.k,1),t.wrapS=t.wrapT=g,r.j.material.color=null,r.j.material.map=t,r.j.material.needsUpdate=!0,r.j.material.visible=!0,r.K()}):((o=document.createElement("canvas")).width=512,o.height=512,this.K()),!0},tt:function(t,n){var e=new Image;e.crossOrigin="Anonymous",e.onload=function(){var t=document.createElement("canvas");t.width=512,t.height=512,t.getContext("2d").drawImage(e,0,0,512,512),n&&n(t,e.width,e.height)},e.src=t},nt:function(t,n){for(var e=0,i=0;i<this.N.length-1;i++){var r=this.N[i],o=this.N[i+1];e+=Math.sqrt((r.x-o.x)*(r.x-o.x)+(r.y-o.y)*(r.y-o.y))}n=this.F/n;return Math.floor(e/(t*n))},it:function(t){var n=document.createElement("canvas"),e=(n.width=t.width,n.height=t.height,n.getContext("2d"));return e.translate(n.width,0),e.scale(-1,1),e.drawImage(t,0,0,n.width,n.height),n},et:function(t){var n=document.createElement("canvas"),e=(n.width=512,n.height=512,n.getContext("2d"));return e.translate(256,256),e.rotate(Math.PI),e.drawImage(t,-256,-256),this.it(n)},$:function(t,n){var e=this.X;if(!e)return!1;for(var i=[],r=0;r<t.length;r++){var o=new E(t[r].x-e.x,t[r].z+n/2+this.U,-t[r].y+e.y);i.push(o)}return i}}),t);function ue(t){return(ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function le(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,de(i.key),i)}}function fe(t,n,e,i){return(fe="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(t,n,e,i){var r,t=_e(t,n);if(t){if((r=Object.getOwnPropertyDescriptor(t,n)).set)return r.set.call(i,e),!0;if(!r.writable)return!1}if(r=Object.getOwnPropertyDescriptor(i,n)){if(!r.writable)return!1;r.value=e,Object.defineProperty(i,n,r)}else t=i,r=e,!((i=de(i=n))in t?Object.defineProperty(t,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[i]=r);return!0})(t,n,e,i)}function de(t){t=function(t,n){if("object"!==ue(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==ue(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===ue(t)?t:String(t)}function ve(t,n){return(ve=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t})(t,n)}function pe(e){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,n=ye(e),n=(t=i?(t=ye(this).constructor,Reflect.construct(n,arguments,t)):n.apply(this,arguments),this);if(t&&("object"===ue(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return me(n)}}function me(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function ge(){return(ge="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,n,e){var i=_e(t,n);if(i)return(i=Object.getOwnPropertyDescriptor(i,n)).get?i.get.call(arguments.length<3?t:e):i.value}).apply(this,arguments)}function _e(t,n){for(;!Object.prototype.hasOwnProperty.call(t,n)&&null!==(t=ye(t)););return t}function ye(t){return(ye=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}t=function(t){var n=r;if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&ve(n,t);var e,i=pe(r);function r(t){var n,e;if(this instanceof r)return ge((n=me(e=i.call(this,t)),ye(r.prototype)),"setType",n).call(n,H.WALL_MARKER),e.tool=new ce(t,me(e)),e.update=e.update.bind(me(e)),e;throw new TypeError("Cannot call a class as a function")}return n=r,(t=[{key:"opacity",get:function(){return this.tool.I},set:function(t){this.tool.I=t,this.tool.j&&(this.tool.j.material.opacity=this.tool.I,this.tool.K())}},{key:"color",get:function(){return this.tool.O},set:function(t){this.tool.O=t,this.tool.j.material.color=new m(t),this.tool.K()}},{key:"points",get:function(){return this.tool.N},set:function(t){this.tool.N=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"url",get:function(){return this.tool.H},set:function(t){var r=this;this.tool.H=t,"ShaderMaterial"===this.tool.j.material.type?this.tool.V.getMaterial(this,function(t){r.tool.j.material.dispose(),r.tool.j.material=t}):this.tool.H&&this.tool.tt(this.tool.H,function(t){var n=r.tool.et(t),e=document.createElement("canvas"),i=(e.width=512,e.height=1024,e.getContext("2d")),t=(i.drawImage(t,0,0,512,512),i.drawImage(n,0,512,512,512),new P(e));t.repeat.set(r.tool.k,1),t.wrapS=t.wrapT=g,r.tool.j.material.color=null,r.tool.j.material.map=t,r.tool.j.material.needsUpdate=!0,r.tool.K()})}},{key:"count",get:function(){return this.tool.k},set:function(t){this.tool.k=t,this.tool.j.material.map&&(this.tool.j.material.map.repeat.set(this.tool.k,1),this.tool.j.material.needsUpdate=!0),this.tool.K()}},{key:"height",get:function(){return this.tool.U},set:function(t){this.tool.U=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"extrudeHeight",get:function(){return this.tool.F},set:function(t){this.tool.F=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"bound",get:function(){if(!0===ge(ye(r.prototype),"needUpdateBound",this)){this.tool.Z.reset(),this.tool.Z.expandByCoords(this.tool.N);var t=ye(r.prototype),n=!1,e=!0;if(!fe(t,"needUpdateBound",n,this||t)&&e)throw new TypeError("failed to set property")}return this.tool.Z.clone()}},{key:"x",get:function(){return this.bound.center.x}},{key:"y",get:function(){return this.bound.center.y}},{key:"addTo",value:function(t){ge(ye(r.prototype),"addTo",this).call(this,t),this.tool.X=t.parent.parent,this.tool.J(),this.parent.scene.add(this.tool.j)}},{key:"remove",value:function(){var t,n=this.tool.X;n&&((t=this.tool.j.parent)&&t.remove(this.tool.j),this.parent&&this.parent.remove(this),n)&&(n.enableUpdateRender(),this.tool.B)&&n.off("update",this.update)}},{key:"getRenderNode",value:function(){return this.tool.j}},{key:"removeEffect",value:function(t){var r=this;"FMFlowEffect"===t.type?this.tool.V=null:"FMBreath"===t.type&&(this.tool.Y=null),null===this.tool.V&&null===this.tool.Y&&(t=this.tool.X)&&(t.off("update",this.update),this.tool.j.material.dispose(),this.tool.B=!1,t=new y({color:new m(this.tool.O),opacity:this.tool.I,transparent:!0}),this.tool.j.material=t,void 0!==this.tool.H?this.tool.tt(this.tool.H,function(t){var n=r.tool.et(t),e=document.createElement("canvas"),i=(e.width=512,e.height=1024,e.getContext("2d")),t=(i.drawImage(t,0,0,512,512),i.drawImage(n,0,512,512,512),new P(r.tool.it(e)));t.repeat.set(r.tool.k,1),t.wrapS=t.wrapT=g,r.tool.j.material.map=t,r.tool.j.material.needsUpdate=!0,r.tool.j.material.color=null,r.tool.K()}):this.tool.K())}},{key:"addEffect",value:function(t){var n,e,i=this,r=this,o=this.tool.X;o&&("FMFlowEffect"===t.type?void 0===this.tool.H?console.error("没有图片不能加特效"):(this.tool.V=t,this.tool.V.getMaterial(this,function(t){i.tool.B||(i.tool.j.material.dispose(),i.tool.j.material=t,i.tool.W=!0,o.on("update",i.update),i.tool.B=!0)})):"FMBreath"===t.type&&(void 0===this.tool.H?console.error("没有图片不能加特效"):(this.tool.Y=t,null!==this.tool.V?(n=function(){i.tool.j.material.uniforms.luminance.value=i.tool.Y.strength/4},e=null,function t(){r.tool.j.material.uniforms&&r.tool.j.material.uniforms.luminance?(n(),clearTimeout(e)):e=setTimeout(t,0)}()):this.tool.Y.getMaterial(this,function(t){i.tool.B||(i.tool.j.material.dispose(),i.tool.j.material=t,i.tool.j.material.uniforms.luminance.value=i.tool.Y.strength/4,o.on("update",i.update),i.tool.B=!0)}))))}},{key:"update",value:function(){var n=this;null!==this.tool.V&&("ShaderMaterial"!==this.tool.j.material.type&&this.tool.V.getMaterial(this,function(t){n.tool.j.material.dispose(),n.tool.j.material=t}),this.tool.j.material.uniforms)&&(this.tool.V.update(this),this.tool.K())}}])&&le(n.prototype,t),e&&le(n,e),Object.defineProperty(n,"prototype",{writable:!1}),r}(fengmap.FMMarker);function be(t){e.call(this),this.type="MeshPhongMaterial",this.color=new m(16777215),this.specular=new m(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new m(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new O(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function we(o,s,a,h,t){C.call(this),this.type="TubeBufferGeometry",this.parameters={path:o,tubularSegments:s,radius:a,radialSegments:h,closed:t},s=s||64,a=a||1,h=h||8,t=t||!1;var n,c,u=o.computeFrenetFrames(s,t),l=(this.tangents=u.tangents,this.normals=u.normals,this.binormals=u.binormals,new E),f=new E,e=new O,d=new E,v=[],p=[],i=[],r=[];for(n=0;n<s;n++)b(n);for(b(!1===t?s:0),n=0;n<=s;n++)for(c=0;c<=h;c++)e.x=n/s,e.y=c/h,i.push(e.x,e.y);for(c=1;c<=s;c++)for(n=1;n<=h;n++){var m=(h+1)*(c-1)+(n-1),g=(h+1)*c+(n-1),_=(h+1)*c+n,y=(h+1)*(c-1)+n;r.push(m,g,y),r.push(g,_,y)}function b(t){d=o.getPointAt(t/s,d);var n=u.normals[t],e=u.binormals[t];for(c=0;c<=h;c++){var i=c/h*Math.PI*2,r=(4===h&&(i=c*Math.PI/2+Math.PI/4),Math.sin(i)),i=-Math.cos(i);f.x=i*n.x+r*e.x,f.y=i*n.y+r*e.y,f.z=i*n.z+r*e.z,f.normalize(),p.push(f.x,f.y,f.z),l.x=d.x+a*f.x,l.y=d.y+a*f.y,l.z=d.z+a*f.z,v.push(l.x,l.y,l.z)}}this.setIndex(r),this.setAttribute("position",new T(v,3)),this.setAttribute("normal",new T(p,3)),this.setAttribute("uv",new T(i,2))}function xe(t){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Me(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==xe(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==xe(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===xe(t)?t:String(t)}(i.key),i)}}function Se(t,n,e){return n&&Me(t.prototype,n),e&&Me(t,e),Object.defineProperty(t,"prototype",{writable:!1}),t}((be.prototype=Object.create(e.prototype)).constructor=be).prototype.isMeshPhongMaterial=!0,be.prototype.copy=function(t){return e.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(we.prototype=Object.create(C.prototype)).constructor=we;var Le=Se(function t(n,e){if(!(this instanceof t))throw new TypeError("Cannot call a class as a function");this.N=n.points,this.O=n.color,this.I=n.opacity,void 0===this.I&&(this.I=1),this.rt=n.radius,void 0===this.rt&&(this.rt=2),this.ot=n.tubularSegments,void 0===this.ot&&(this.ot=64),this.st=n.radialSegments,void 0===this.st&&(this.st=8),this.U=n.height,void 0===this.U&&(this.U=0),this.H=n.url,this.k=n.count,void 0===this.k&&(this.k=1),this.j=null,this.V=null,this.Y=null,this.B=!1,this.W=!1,this.q=e,this.Z=new fengmap.FMBound,this.X=null}),Ee=(Object.assign(Le.prototype,{K:function(){var t=this.X;if(!t)return!1;t.enableUpdateRender()},J:function(){for(var n=this,t=new Qn,e=this.$(this.N,this.rt),i=0;i<e.length-1;i++){var r=new On(e[i],e[i+1]);t.curves.push(r)}var o=new we(t,this.ot,this.rt,this.st,!1),s=new be({color:new m(this.O),opacity:this.I,side:Qt,transparent:!0});return void 0!==this.H&&(s.visible=!1),this.j=new An(o,s),this.j.mapNode=this.q,void 0!==this.H&&this.tt(this.H,function(t){t=new P(t);t.repeat.set(n.k,1),t.wrapS=t.wrapT=g,n.j.material.map=t,n.j.material.color=null,n.j.material.needsUpdate=!0,n.j.material.visible=!0,n.K()}),this.K(),!0},$:function(t,n){var e=this.X;if(!e)return!1;for(var i=[],r=0;r<t.length;r++){var o=new E(t[r].x-e.x,t[r].z+n+this.U,-t[r].y+e.y);i.push(o)}return i},tt:function(t,e){var i=new Image;i.crossOrigin="Anonymous",i.onload=function(){var t=document.createElement("canvas"),n=(t.width=512,t.height=512,t.getContext("2d"));n.drawImage(i,0,0,i.width,i.height/2,0,256,512,256),n.drawImage(i,0,i.height/2,i.width,i.height/2,0,0,512,256),e&&e(t)},i.src=t}}),Le);function Te(t){return(Te="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ce(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,Pe(i.key),i)}}function De(t,n,e,i){return(De="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(t,n,e,i){var r,t=Ie(t,n);if(t){if((r=Object.getOwnPropertyDescriptor(t,n)).set)return r.set.call(i,e),!0;if(!r.writable)return!1}if(r=Object.getOwnPropertyDescriptor(i,n)){if(!r.writable)return!1;r.value=e,Object.defineProperty(i,n,r)}else t=i,r=e,!((i=Pe(i=n))in t?Object.defineProperty(t,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[i]=r);return!0})(t,n,e,i)}function Pe(t){t=function(t,n){if("object"!==Te(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==Te(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===Te(t)?t:String(t)}function Ae(t,n){return(Ae=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t})(t,n)}function Re(e){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,n=Ue(e),n=(t=i?(t=Ue(this).constructor,Reflect.construct(n,arguments,t)):n.apply(this,arguments),this);if(t&&("object"===Te(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Ne(n)}}function Ne(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Oe(){return(Oe="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,n,e){var i=Ie(t,n);if(i)return(i=Object.getOwnPropertyDescriptor(i,n)).get?i.get.call(arguments.length<3?t:e):i.value}).apply(this,arguments)}function Ie(t,n){for(;!Object.prototype.hasOwnProperty.call(t,n)&&null!==(t=Ue(t)););return t}function Ue(t){return(Ue=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Le=function(t){var n=r;if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&Ae(n,t);var e,i=Re(r);function r(t){var n,e;if(this instanceof r)return Oe((n=Ne(e=i.call(this,t)),Ue(r.prototype)),"setType",n).call(n,H.TUBE_MARKER),e.tool=new Ee(t,Ne(e)),e.update=e.update.bind(Ne(e)),e;throw new TypeError("Cannot call a class as a function")}return n=r,(t=[{key:"opacity",get:function(){return this.tool.I},set:function(t){this.tool.I=t,this.tool.j&&(this.tool.j.material.opacity=this.tool.I,this.tool.K())}},{key:"color",get:function(){return this.tool.O},set:function(t){this.tool.O=t,this.tool.j.material.color=new m(t),this.tool.K()}},{key:"url",get:function(){return this.tool.H},set:function(t){var n=this;this.tool.H=t,"ShaderMaterial"===this.tool.j.material.type?this.tool.V.getMaterial(this,function(t){n.tool.j.material.dispose(),n.tool.j.material=t}):this.tool.H&&this.tool.tt(this.tool.H,function(t){t=new P(t);t.repeat.set(n.tool.k,1),t.wrapS=t.wrapT=g,n.tool.j.material.color=null,n.tool.j.material.map=t,n.tool.j.material.needsUpdate=!0,n.tool.K()})}},{key:"count",get:function(){return this.tool.k},set:function(t){this.tool.k=t,this.tool.j.material.map&&(this.tool.j.material.map.repeat.set(this.tool.k,1),this.tool.j.material.needsUpdate=!0),this.tool.K()}},{key:"points",get:function(){return this.tool.N},set:function(t){this.tool.N=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"height",get:function(){return this.tool.U},set:function(t){this.tool.U=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"radius",get:function(){return this.tool.rt},set:function(t){this.tool.rt=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"tubularSegments",get:function(){return this.tool.ot},set:function(t){this.tool.ot=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"radialSegments",get:function(){return this.tool.st},set:function(t){this.tool.st=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"bound",get:function(){if(!0===Oe(Ue(r.prototype),"needUpdateBound",this)){this.tool.Z.reset(),this.tool.Z.expandByCoords(this.tool.N);var t=Ue(r.prototype),n=!1,e=!0;if(!De(t,"needUpdateBound",n,this||t)&&e)throw new TypeError("failed to set property")}return this.tool.Z.clone()}},{key:"x",get:function(){return this.bound.center.x}},{key:"y",get:function(){return this.bound.center.y}},{key:"addTo",value:function(t){Oe(Ue(r.prototype),"addTo",this).call(this,t),this.tool.X=t.parent.parent,this.tool.J(),this.parent.scene.add(this.tool.j)}},{key:"remove",value:function(){var t=this.tool.X,n=this.tool.j.parent;n&&n.remove(this.tool.j),this.parent&&this.parent.remove(this),t&&(t.enableUpdateRender(),this.tool.B)&&t.off("update",this.update)}},{key:"getRenderNode",value:function(){return this.tool.j}},{key:"addEffect",value:function(t){var n,e,i=this,r=this,o=this.tool.X;o&&("FMFlowEffect"===t.type?void 0===this.tool.H?console.error("没有图片不能加特效"):(this.tool.V=t,this.tool.V.getMaterial(this,function(t){i.tool.B||(i.tool.j.material.dispose(),i.tool.j.material=t,i.tool.W=!0,o.on("update",i.update),i.tool.B=!0)})):"FMBreath"===t.type&&(void 0===this.tool.H?console.error("没有图片不能加特效"):(this.tool.Y=t,null!==this.tool.V?(n=function(){i.tool.j.material.uniforms.luminance.value=i.tool.Y.strength/4},e=null,function t(){r.tool.j.material.uniforms&&r.tool.j.material.uniforms.luminance?(n(),clearTimeout(e)):e=setTimeout(t,0)}()):this.tool.Y.getMaterial(this,function(t){i.tool.B||(i.tool.j.material.dispose(),i.tool.j.material=t,i.tool.j.material.uniforms.luminance.value=i.tool.Y.strength/4,o.on("update",i.ht),i.tool.B=!0)}))))}},{key:"removeEffect",value:function(t){var n=this;"FMFlowEffect"===t.type?this.tool.V=null:"FMBreath"===t.type&&(this.tool.Y=null),this.tool.B=!1,null===this.tool.V&&null===this.tool.Y&&(t=this.tool.X)&&(t.off("update",this.ht),this.tool.j.material.dispose(),t=new be({color:new m(this.tool.O),opacity:this.tool.I,side:Qt,transparent:!0}),this.tool.j.material=t,void 0!==this.tool.H&&this.tool.tt(this.tool.H,function(t){t=new P(t);t.repeat.set(n.tool.k,1),n.tool.j.material.color=null,t.wrapS=t.wrapT=g,n.tool.j.material.map=t,n.tool.j.material.needsUpdate=!0,n.tool.K()}),this.tool.K())}},{key:"update",value:function(){var n=this;null!==this.tool.V&&("ShaderMaterial"!==this.tool.j.material.type&&this.tool.V.getMaterial(this,function(t){n.tool.j.material.dispose(),n.tool.j.material=t}),this.tool.j.material.uniforms)&&(this.tool.V.update(this),this.tool.K())}}])&&Ce(n.prototype,t),e&&Ce(n,e),Object.defineProperty(n,"prototype",{writable:!1}),r}(fengmap.FMMarker);function Fe(t){e.call(this),this.type="LineBasicMaterial",this.color=new m(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}((Fe.prototype=Object.create(e.prototype)).constructor=Fe).prototype.isLineBasicMaterial=!0,Fe.prototype.copy=function(t){return e.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this};var He=new E,ke=new E,je=new _,Ge=new ut,ze=new it;function Ve(t,n,e){1===e&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),c.call(this),this.type="Line",this.geometry=void 0!==t?t:new C,this.material=void 0!==n?n:new Fe}Ve.prototype=Object.assign(Object.create(c.prototype),{constructor:Ve,isLine:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var n=t.attributes.position,e=[0],i=1,r=n.count;i<r;i++)He.fromBufferAttribute(n,i-1),ke.fromBufferAttribute(n,i),e[i]=e[i-1],e[i]+=He.distanceTo(ke);t.setAttribute("lineDistance",new T(e,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var o=t.vertices;(e=t.lineDistances)[0]=0;for(i=1,r=o.length;i<r;i++)e[i]=e[i-1],e[i]+=o[i-1].distanceTo(o[i])}return this},raycast:function(t,n){var e=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold;if(null===e.boundingSphere&&e.computeBoundingSphere(),ze.copy(e.boundingSphere),ze.applyMatrix4(i),ze.radius+=r,!1!==t.ray.intersectsSphere(ze)){je.getInverse(i),Ge.copy(t.ray).applyMatrix4(je);var i=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=i*i,s=new E,a=new E,h=new E,c=new E,u=this&&this.isLineSegments?2:1;if(e.isBufferGeometry){var r=e.index,l=e.attributes.position.array;if(null!==r)for(var f=r.array,d=0,v=f.length-1;d<v;d+=u){var p=f[d],m=f[d+1];s.fromArray(l,3*p),a.fromArray(l,3*m),o<Ge.distanceSqToSegment(s,a,c,h)||(c.applyMatrix4(this.matrixWorld),(g=t.ray.origin.distanceTo(c))<t.near)||g>t.far||n.push({distance:g,point:h.clone().applyMatrix4(this.matrixWorld),index:d,face:null,faceIndex:null,object:this})}else for(d=0,v=l.length/3-1;d<v;d+=u)s.fromArray(l,3*d),a.fromArray(l,3*d+3),o<Ge.distanceSqToSegment(s,a,c,h)||(c.applyMatrix4(this.matrixWorld),(g=t.ray.origin.distanceTo(c))<t.near)||g>t.far||n.push({distance:g,point:h.clone().applyMatrix4(this.matrixWorld),index:d,face:null,faceIndex:null,object:this})}else if(e.isGeometry)for(var g,_=e.vertices,y=_.length,d=0;d<y-1;d+=u)o<Ge.distanceSqToSegment(_[d],_[d+1],c,h)||(c.applyMatrix4(this.matrixWorld),(g=t.ray.origin.distanceTo(c))<t.near)||g>t.far||n.push({distance:g,point:h.clone().applyMatrix4(this.matrixWorld),index:d,face:null,faceIndex:null,object:this})}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var Be=new E,We=new E;function Ye(t,n){Ve.call(this,t,n),this.type="LineSegments"}Ye.prototype=Object.assign(Object.create(Ve.prototype),{constructor:Ye,isLineSegments:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var n=t.attributes.position,e=[],i=0,r=n.count;i<r;i+=2)Be.fromBufferAttribute(n,i),We.fromBufferAttribute(n,i+1),e[i]=0===i?0:e[i-1],e[i+1]=e[i]+Be.distanceTo(We);t.setAttribute("lineDistance",new T(e,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry)for(var o=t.vertices,e=t.lineDistances,i=0,r=o.length;i<r;i+=2)Be.copy(o[i]),We.copy(o[i+1]),e[i]=0===i?0:e[i-1],e[i+1]=e[i]+Be.distanceTo(We);return this}});var A={alphamap_fragment:"\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",alphamap_pars_fragment:"\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",alphatest_fragment:"\n#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",aomap_fragment:"\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n\t#endif\n\n#endif\n",aomap_pars_fragment:"\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n",bsdfs:'\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via \'environmentBRDF\' from "Physically Based Shading on Mobile"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n}\n\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t// this is intended to be used on spot and point lights who are represented as luminous intensity\n\t// but who must be converted to luminous irradiance for surface lighting calculation\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\tif( cutoffDistance > 0.0 ) {\n\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t}\n\n\treturn distanceFalloff;\n\n#else\n\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick \'94\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\n\t// See F_Schlick\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\n\treturn Fr * fresnel + F0;\n\n}\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\t// also see #12151\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4\'s roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\n\treturn specularColor * brdf.x + brdf.y;\n\n} // validated\n\n// Fdez-Agüera\'s "Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L94\nfloat D_Charlie(float roughness, float NoH) {\n\t// Estevez and Kulla 2017, "Production Friendly Microfacet Sheen BRDF"\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136\nfloat V_Neubelt(float NoV, float NoL) {\n\t// Neubelt and Pettineo 2013, "Crafting a Next-gen Material Pipeline for The Order: 1886"\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\n\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n\n}\n\n#endif\n',bumpmap_pars_fragment:"\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n",clipping_planes_fragment:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n",clipping_planes_pars_fragment:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n",clipping_planes_pars_vertex:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n#endif\n",clipping_planes_vertex:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvClipPosition = - mvPosition.xyz;\n\n#endif\n",color_fragment:"\n#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n",color_pars_fragment:"\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",color_pars_vertex:"\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",color_vertex:"\n#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif\n",common:"\n#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#ifndef saturate\n// <tonemapping_pars_fragment> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t// dir can be either a direction vector or a normal vector\n\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n\nbool isPerspectiveMatrix( mat4 m ) {\n\n  return m[ 2 ][ 3 ] == - 1.0;\n\n}\n",cube_uv_reflection_fragment:"\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\n\n// These shader functions convert between the UV coordinates of a single face of\n// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n// sampling a textureCube (not generally normalized).\n\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\n\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\n\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n\n// These defines must match with PMREMGenerator\n\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\n\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);// 1.16 = 1.79^0.25\n  }\n  return mip;\n}\n\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif\n",defaultnormal_vertex:"\nvec3 transformedNormal = objectNormal;\n\n#ifdef USE_INSTANCING\n\n\t// this is in lieu of a per-instance normal-matrix\n\t// shear transforms in the instance matrix are not supported\n\n\tmat3 m = mat3( instanceMatrix );\n\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\n\ttransformedNormal = m * transformedNormal;\n\n#endif\n\ntransformedNormal = normalMatrix * transformedNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n",displacementmap_pars_vertex:"\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n",displacementmap_vertex:"\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n\n#endif\n",emissivemap_fragment:"\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n",emissivemap_pars_fragment:"\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n",encodings_fragment:"\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\t// NOTE: The implementation with min causes the shader to not compile on\n\t// a common Alcatel A502DL in Chrome 78/Android 8.1. Some research suggests \n\t// that the chipset is Mediatek MT6739 w/ IMG PowerVR GE8100 GPU.\n\t// D = min( floor( D ) / 255.0, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n",envmap_fragment:"\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t}  else {\n\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\n\t\t}\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\tvec2 sampleUV;\n\n\t\treflectVec = normalize( reflectVec );\n\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\treflectVec = normalize( reflectVec );\n\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\n\t\tenvColor = envMapTexelToLinear( envColor );\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n",envmap_common_pars_fragment:"\n#ifdef USE_ENVMAP\n\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif\n",envmap_pars_fragment:"\n#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n",envmap_pars_vertex:"\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n",envmap_physical_pars_fragment:"\n#if defined( USE_ENVMAP )\n\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\n\t\t#else\n\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\n\t\t#endif\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// Trowbridge-Reitz distribution to Mip level, following the logic of http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\n\t\t  // Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n\t\t#else\n\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#endif\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n",envmap_vertex:"\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex;\n\n\t\tif ( isOrthographic ) { \n\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\t}\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\n\n\tfogDepth = -mvPosition.z;\n\n#endif\n",fog_pars_vertex:"\n#ifdef USE_FOG\n\n\tvarying float fogDepth;\n\n#endif\n",fog_fragment:"\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n",fog_pars_fragment:"\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n",gradientmap_pars_fragment:"\n\n#ifdef USE_GRADIENTMAP\n\n\tuniform sampler2D gradientMap;\n\n#endif\n\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t// dotNL will be from -1.0 to 1.0\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t#ifdef USE_GRADIENTMAP\n\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t#else\n\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t#endif\n\n}\n\n",lightmap_fragment:"\n#ifdef USE_LIGHTMAP\n\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n",lightmap_pars_fragment:"\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n",lights_lambert_vertex:"\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\t// TODO (abelnation): implement\n\n\t}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n",lights_pars_begin:"\nuniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t// normal is assumed to have unit length\n\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t// band 0\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t// band 1\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t// band 2\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n\treturn result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n\treturn irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI;\n\n\t#endif\n\n\treturn irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( angleCos > spotLight.coneCos ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n",lights_toon_fragment:"\nToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_toon_pars_fragment:"\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct ToonMaterial {\n\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n\n};\n\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n\n#define Material_LightProbeLOD( material )\t(0)\n",lights_phong_fragment:"\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n\n#ifdef REFLECTIVITY\n\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\n#endif\n\n#ifdef CLEARCOAT\n\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\n\t#ifdef USE_CLEARCOATMAP\n\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\n\t#endif\n\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheen;\n\n#endif\n",lights_physical_pars_fragment:"\nstruct PhysicalMaterial {\n\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tccIrradiance *= PI; // punctual light\n\n\t\t#endif\n\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n",lights_fragment_begin:"\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n",lights_fragment_maps:"\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\n\t#ifdef CLEARCOAT\n\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\n\t#endif\n\n#endif\n",lights_fragment_end:"\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n",logdepthbuf_fragment:"\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\n\t// on some platforms. See issue #17623.\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n",logdepthbuf_pars_fragment:"\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n\n#endif\n",logdepthbuf_pars_vertex:"\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n",logdepthbuf_vertex:"\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\n\t#else\n\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\t\tgl_Position.z *= gl_Position.w;\n\n\t\t}\n\n\t#endif\n\n#endif\n",map_fragment:"\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n",map_fragment_1:"\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\t\n\tif(mapMixColor){\n\t    diffuseColor = texelColor*texelColor.a + diffuseColor*(1.0-texelColor.a);\n\t}else {\n\t    diffuseColor *= texelColor;\n\t}\n\n#endif\n",map_pars_fragment:"\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n",map_particle_fragment:"\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\n#endif\n\n#ifdef USE_MAP\n\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n\n#endif\n",map_particle_pars_fragment:"\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tuniform mat3 uvTransform;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",metalnessmap_fragment:"\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n",metalnessmap_pars_fragment:"\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n",morphnormal_vertex:"\n#ifdef USE_MORPHNORMALS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\n#endif\n",morphtarget_pars_vertex:"\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif\n",morphtarget_vertex:"\n#ifdef USE_MORPHTARGETS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n",normal_fragment_begin:"\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n",normal_fragment_maps:"\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t#ifdef FLIP_SIDED\n\n\t\tnormal = - normal;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\tnormal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tnormal = normalize( vTBN * mapN );\n\n\t#else\n\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n",normalmap_pars_fragment:"\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tuniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tmat3 tsn = mat3( S, T, N );\n\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",clearcoat_normal_fragment_begin:"\n#ifdef CLEARCOAT\n\n\tvec3 clearcoatNormal = geometryNormal;\n\n#endif\n",clearcoat_normal_fragment_maps:"\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\n\t#else\n\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\n\t#endif\n\n#endif\n",clearcoat_pars_fragment:"\n\n#ifdef USE_CLEARCOATMAP\n\n\tuniform sampler2D clearcoatMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\tuniform sampler2D clearcoatRoughnessMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n\n#endif\n",packing:"\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n",project_vertex:"\nvec4 mvPosition = vec4( transformed, 1.0 );\n\n#ifdef USE_INSTANCING\n\n\tmvPosition = instanceMatrix * mvPosition;\n\n#endif\n\nmvPosition = modelViewMatrix * mvPosition;\n\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"\n#ifdef DITHERING\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n",dithering_pars_fragment:"\n#ifdef DITHERING\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n",roughnessmap_fragment:"\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n",roughnessmap_pars_fragment:"\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n",shadowmap_pars_fragment:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\n\t}\n\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n\t\tfloat occlusion = 1.0;\n\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\n\t\tfloat hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n\t\tif (hard_shadow != 1.0 ) {\n\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n\t\t}\n\t\treturn occlusion;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n",shadowmap_pars_vertex:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n",shadowmap_vertex:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n",shadowmask_pars_fragment:"\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\tDirectionalLightShadow directionalLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\tSpotLightShadow spotLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\tPointLightShadow pointLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n",skinbase_vertex:"\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n",skinning_pars_vertex:"\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",skinning_vertex:"\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n",skinnormal_vertex:"\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n",specularmap_fragment:"\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n",specularmap_pars_fragment:"\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n",tonemapping_fragment:"\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n",tonemapping_pars_fragment:"\n#ifndef saturate\n// <common> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\n\t// John Hable's filmic operator from Uncharted 2 video game\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n\n}\n",uv_pars_fragment:"\n#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\n\tvarying vec2 vUv;\n\n#endif\n",uv_pars_vertex:"\n#ifdef USE_UV\n\n\t#ifdef UVS_VERTEX_ONLY\n\n\t\tvec2 vUv;\n\n\t#else\n\n\t\tvarying vec2 vUv;\n\n\t#endif\n\n\tuniform mat3 uvTransform;\n\n#endif\n",uv_vertex:"\n#ifdef USE_UV\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n",uv2_pars_fragment:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n",uv2_pars_vertex:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n\tuniform mat3 uv2Transform;\n\n#endif\n",uv2_vertex:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n\n#endif\n",worldpos_vertex:"\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\n#endif\n",background_frag:"\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",background_vert:"\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n",cube_frag:"\n\n#include <envmap_common_pars_fragment>\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",cube_vert:"\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n",depth_frag:"\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n",depth_vert:"\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n",distanceRGBA_frag:"\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n",distanceRGBA_vert:"\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n",equirect_frag:"\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV;\n\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",equirect_vert:"\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n",linedashed_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n",linedashed_vert:"\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n",meshbasic_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n",meshbasic_vert:"\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshlambert_frag:"\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshmatcap_frag:"\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n",meshmatcap_vert:"\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\t\tvNormal = normalize( transformedNormal );\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n",meshtoon_frag:"\n#define TOON\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshtoon_vert:"\n#define TOON\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshphong_frag:"\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshphong_vert:"\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshphysical_frag:"\n#define STANDARD\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t// this is a stub for the transparency model\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshphysical_vert:"\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",normal_frag:"\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n",normal_vert:"\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n",points_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n",points_vert:"\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n",shadow_frag:"\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",shadow_vert:"\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",sprite_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",sprite_vert:"\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n"};function Xe(t){var n,e={};for(n in t)for(var i in e[n]={},t[n]){var r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}return e}function Ze(t){e.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",this.fragmentShader="\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}((Ze.prototype=Object.create(e.prototype)).constructor=Ze).prototype.isShaderMaterial=!0,Ze.prototype.copy=function(t){return e.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Xe(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this};var qe={common:{diffuse:{value:new m(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new u},uv2Transform:{value:new u},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new O(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new m(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new m(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new u}},sprite:{diffuse:{value:new m(15658734)},opacity:{value:1},center:{value:new O(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new u}}};function Ke(t){return(Ke="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Qe(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==Ke(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==Ke(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===Ke(t)?t:String(t)}(i.key),i)}}function Je(t,n,e){return n&&Qe(t.prototype,n),e&&Qe(t,e),Object.defineProperty(t,"prototype",{writable:!1}),t}function $e(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}function ti(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(n&&n.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),n&&ni(t,n)}function ni(t,n){return(ni=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t})(t,n)}function ei(e){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,n=ri(e),n=(t=i?(t=ri(this).constructor,Reflect.construct(n,arguments,t)):n.apply(this,arguments),this);if(t&&("object"===Ke(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return ii(n)}}function ii(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function ri(t){return(ri=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var oi=function(){ti(e,C);var n=ei(e);function e(){var t;return $e(this,e),(t=n.call(this)).isMeshLine=!0,t.type="MeshLine",t.positions=[],t.previous=[],t.next=[],t.side=[],t.width=[],t.indices_array=[],t.uvs=[],t.counters=[],t.N=[],t.ct=null,t.widthCallback=null,t.matrixWorld=new _,Object.defineProperties(ii(t),{geometry:{enumerable:!0,get:function(){return this}},geom:{enumerable:!0,get:function(){return this.ct},set:function(t){this.setGeometry(t,this.widthCallback)}},points:{enumerable:!0,get:function(){return this.N},set:function(t){this.setPoints(t,this.widthCallback)}}}),t}return Je(e)}();function si(t,n,e,i,r){var o;if(t=t.subarray||t.slice?t:t.buffer,e=e.subarray||e.slice?e:e.buffer,t=n?t.subarray?t.subarray(n,r&&n+r):t.slice(n,r&&n+r):t,e.set)e.set(t,i);else for(o=0;o<t.length;o++)e[o+i]=t[o]}oi.prototype.setMatrixWorld=function(t){this.matrixWorld=t},oi.prototype.setGeometry=function(t,n){this.ut=t,this.setPoints(t.getAttribute("position").array,n)},oi.prototype.setPoints=function(t,n){if(t instanceof Float32Array||t instanceof Array){if(this.N=t,this.widthCallback=n,this.positions=[],this.counters=[],t.length&&t[0]instanceof E)for(var e=0;e<t.length;e++){var i=t[e],r=e/t.length;this.positions.push(i.x,i.y,i.z),this.positions.push(i.x,i.y,i.z),this.counters.push(r),this.counters.push(r)}else for(e=0;e<t.length;e+=3){r=e/t.length;this.positions.push(t[e],t[e+1],t[e+2]),this.positions.push(t[e],t[e+1],t[e+2]),this.counters.push(r),this.counters.push(r)}this.process()}else console.error("ERROR: The BufferArray of points is not instancied correctly.")},oi.prototype.raycast=function(t,n){var e=new _,i=new ut,r=new it,o=new E,s=this.geometry;if(s.boundingSphere||s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(this.matrixWorld),!1!==t.ray.intersectSphere(r,o)){e.copy(this.matrixWorld).invert(),i.copy(t.ray).applyMatrix4(e);var a=new E,h=new E,c=new E,u=this instanceof Ye?2:1,r=s.index,e=s.attributes;if(null!==r)for(var l=r.array,f=e.position.array,d=e.width.array,v=0,p=l.length-1;v<p;v+=u){var m=l[v],g=l[v+1],m=(a.fromArray(f,3*m),h.fromArray(f,3*g),void 0!==d[Math.floor(v/3)]?d[Math.floor(v/3)]:1),g=t.params.Line.threshold+this.material.lineWidth*m/2;g*g<i.distanceSqToSegment(a,h,o,c)||(o.applyMatrix4(this.matrixWorld),(m=t.ray.origin.distanceTo(o))<t.near)||m>t.far||(n.push({distance:m,point:c.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this}),v=p)}}},oi.prototype.compareV3=function(t,n){t*=6,n*=6;return this.positions[t]===this.positions[n]&&this.positions[1+t]===this.positions[1+n]&&this.positions[2+t]===this.positions[2+n]},oi.prototype.copyV3=function(t){t*=6;return[this.positions[t],this.positions[1+t],this.positions[2+t]]},oi.prototype.process=function(){var t,n=this.positions.length/6;this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],t=this.compareV3(0,n-1)?this.copyV3(n-2):this.copyV3(0),this.previous.push(t[0],t[1],t[2]),this.previous.push(t[0],t[1],t[2]);for(var e,i=0;i<n;i++)this.side.push(1),this.side.push(-1),e=this.widthCallback?this.widthCallback(i/(n-1)):1,this.width.push(e),this.width.push(e),this.uvs.push(i/(n-1),0),this.uvs.push(i/(n-1),1),i<n-1&&(t=this.copyV3(i),this.previous.push(t[0],t[1],t[2]),this.previous.push(t[0],t[1],t[2]),this.indices_array.push(e=2*i,1+e,2+e),this.indices_array.push(2+e,1+e,3+e)),0<i&&(t=this.copyV3(i),this.next.push(t[0],t[1],t[2]),this.next.push(t[0],t[1],t[2]));t=this.compareV3(n-1,0)?this.copyV3(1):this.copyV3(n-1),this.next.push(t[0],t[1],t[2]),this.next.push(t[0],t[1],t[2]),this.lt&&this.lt.position.count===this.positions.length?(this.lt.position.copyArray(new Float32Array(this.positions)),this.lt.position.needsUpdate=!0,this.lt.previous.copyArray(new Float32Array(this.previous)),this.lt.previous.needsUpdate=!0,this.lt.next.copyArray(new Float32Array(this.next)),this.lt.next.needsUpdate=!0,this.lt.side.copyArray(new Float32Array(this.side)),this.lt.side.needsUpdate=!0,this.lt.width.copyArray(new Float32Array(this.width)),this.lt.width.needsUpdate=!0,this.lt.uv.copyArray(new Float32Array(this.uvs)),this.lt.uv.needsUpdate=!0,this.lt.index.copyArray(new Uint16Array(this.indices_array)),this.lt.index.needsUpdate=!0):this.lt={position:new w(new Float32Array(this.positions),3),previous:new w(new Float32Array(this.previous),3),next:new w(new Float32Array(this.next),3),side:new w(new Float32Array(this.side),1),width:new w(new Float32Array(this.width),1),uv:new w(new Float32Array(this.uvs),2),index:new w(new Uint16Array(this.indices_array),1),counters:new w(new Float32Array(this.counters),1)},this.setAttribute("position",this.lt.position),this.setAttribute("previous",this.lt.previous),this.setAttribute("next",this.lt.next),this.setAttribute("side",this.lt.side),this.setAttribute("width",this.lt.width),this.setAttribute("uv",this.lt.uv),this.setAttribute("counters",this.lt.counters),this.setIndex(this.lt.index),this.computeBoundingSphere(),this.computeBoundingBox()},oi.prototype.advance=function(t){var n=this.lt.position.array,e=this.lt.previous.array,i=this.lt.next.array,r=n.length;si(n,0,e,0,r),si(n,6,n,0,r-6),n[r-6]=t.x,n[r-5]=t.y,n[r-4]=t.z,n[r-3]=t.x,n[r-2]=t.y,n[r-1]=t.z,si(n,6,i,0,r-6),i[r-6]=t.x,i[r-5]=t.y,i[r-4]=t.z,i[r-3]=t.x,i[r-2]=t.y,i[r-1]=t.z,this.lt.position.needsUpdate=!0,this.lt.previous.needsUpdate=!0,this.lt.next.needsUpdate=!0},A.meshline_vert=["",A.common,A.logdepthbuf_pars_vertex,A.fog_pars_vertex,"","attribute vec3 previous;","attribute vec3 next;","attribute float side;","attribute float width;","attribute float counters;","","uniform vec2 resolution;","uniform float lineWidth;","uniform vec3 color;","uniform float opacity;","uniform float sizeAttenuation;","uniform vec2 offset;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","vec2 fix( vec4 i, float aspect ) {","","    vec2 res = i.xy / i.w;","    res.x *= aspect;","\t vCounters = counters;","    return res;","","}","","void main() {","","    float aspect = resolution.x / resolution.y;","","    vColor = vec4( color, opacity );","    vUV = uv + offset;","","    mat4 m = projectionMatrix * modelViewMatrix;","    vec4 finalPosition = m * vec4( position, 1.0 );","    vec4 prevPos = m * vec4( previous, 1.0 );","    vec4 nextPos = m * vec4( next, 1.0 );","","    vec2 currentP = fix( finalPosition, aspect );","    vec2 prevP = fix( prevPos, aspect );","    vec2 nextP = fix( nextPos, aspect );","","    float w = lineWidth * width;","","    vec2 dir;","    if( nextP == currentP ) dir = normalize( currentP - prevP );","    else if( prevP == currentP ) dir = normalize( nextP - currentP );","    else {","        vec2 dir1 = normalize( currentP - prevP );","        vec2 dir2 = normalize( nextP - currentP );","        dir = normalize( dir1 + dir2 );","","        vec2 perp = vec2( -dir1.y, dir1.x );","        vec2 miter = vec2( -dir.y, dir.x );","        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );","","    }","","    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;","    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );","    normal.xy *= .5 * w;","    normal *= projectionMatrix;","    if( sizeAttenuation == 0. ) {","        normal.xy *= finalPosition.w;","        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;","    }","","    finalPosition.xy += normal.xy * side;","","    gl_Position = finalPosition;","",A.logdepthbuf_vertex,A.fog_vertex&&"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",A.fog_vertex,"}"].join("\n"),A.meshline_frag=["",A.fog_pars_fragment,A.logdepthbuf_pars_fragment,"","uniform sampler2D map;","uniform sampler2D alphaMap;","uniform float useMap;","uniform float useAlphaMap;","uniform float useDash;","uniform float dashArray;","uniform float dashOffset;","uniform float dashRatio;","uniform float visibility;","uniform float alphaTest;","uniform vec2 repeat;","uniform float luminance;","uniform bool isbackground;","uniform vec3 bgcolor;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","void main() {","",A.logdepthbuf_fragment,"","    vec4 c = vColor;","    if( useMap == 1. ) {","\t \tc = texture2D( map, vUV * repeat );","\t } else {","       c = vColor;","\t }","\t c.r = c.r * c.a * luminance;","    c.g = c.g * c.a * luminance;","    c.b = c.b * c.a * luminance;","    if(isbackground){","\t\tc=vec4(vec3(mix(c,vec4(bgcolor,1.0),1.0-c.a)),1.0);","    }","\t c.a = c.a * vColor.a;","    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;","    if( c.a < alphaTest ) discard;","    if( useDash == 1. ){","        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));","    }","    gl_FragColor = c;","    gl_FragColor.a *= step(vCounters, visibility);","",A.fog_fragment,"}"].join("\n");var ai=function(){ti(i,Ze);var e=ei(i);function i(t){var n;return $e(this,i),(n=e.call(this,{uniforms:Object.assign({},qe.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:0},alphaMap:{value:null},useAlphaMap:{value:0},color:{value:new m(16777215)},opacity:{value:1},resolution:{value:new O(1,1)},sizeAttenuation:{value:1},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:0},visibility:{value:1},alphaTest:{value:0},repeat:{value:new O(1,1)},offset:{value:new O(1,1)},luminance:{value:1},isbackground:{value:!1},bgcolor:{value:new m(16777215)}}),vertexShader:A.meshline_vert,fragmentShader:A.meshline_frag})).isMeshLineMaterial=!0,n.type="MeshLineMaterial",Object.defineProperties(ii(n),{lineWidth:{enumerable:!0,get:function(){return this.uniforms.lineWidth.value},set:function(t){this.uniforms.lineWidth.value=t}},map:{enumerable:!0,get:function(){return this.uniforms.map.value},set:function(t){this.uniforms.map.value=t}},useMap:{enumerable:!0,get:function(){return this.uniforms.useMap.value},set:function(t){this.uniforms.useMap.value=t}},alphaMap:{enumerable:!0,get:function(){return this.uniforms.alphaMap.value},set:function(t){this.uniforms.alphaMap.value=t}},useAlphaMap:{enumerable:!0,get:function(){return this.uniforms.useAlphaMap.value},set:function(t){this.uniforms.useAlphaMap.value=t}},color:{enumerable:!0,get:function(){return this.uniforms.color.value},set:function(t){this.uniforms.color.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},sizeAttenuation:{enumerable:!0,get:function(){return this.uniforms.sizeAttenuation.value},set:function(t){this.uniforms.sizeAttenuation.value=t}},dashArray:{enumerable:!0,get:function(){return this.uniforms.dashArray.value},set:function(t){this.uniforms.dashArray.value=t,this.useDash=0!==t?1:0}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},dashRatio:{enumerable:!0,get:function(){return this.uniforms.dashRatio.value},set:function(t){this.uniforms.dashRatio.value=t}},useDash:{enumerable:!0,get:function(){return this.uniforms.useDash.value},set:function(t){this.uniforms.useDash.value=t}},visibility:{enumerable:!0,get:function(){return this.uniforms.visibility.value},set:function(t){this.uniforms.visibility.value=t}},alphaTest:{enumerable:!0,get:function(){return this.uniforms.alphaTest.value},set:function(t){this.uniforms.alphaTest.value=t}},repeat:{enumerable:!0,get:function(){return this.uniforms.repeat.value},set:function(t){this.uniforms.repeat.value.copy(t)}},offset:{enumerable:!0,get:function(){return this.uniforms.offset.value},set:function(t){this.uniforms.offset.value.copy(t)}},luminance:{enumerable:!0,get:function(){return this.uniforms.luminance.value},set:function(t){this.uniforms.luminance.value=t}},isbackground:{enumerable:!0,get:function(){return this.uniforms.isbackground.value},set:function(t){this.uniforms.isbackground.value=t}},bgcolor:{enumerable:!0,get:function(){return this.uniforms.bgcolor.value},set:function(t){this.uniforms.bgcolor.value=t}}}),n.setValues(t),n}return Je(i)}();function hi(t){return(hi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ci(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==hi(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==hi(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===hi(t)?t:String(t)}(i.key),i)}}function ui(t,n,e){return n&&ci(t.prototype,n),e&&ci(t,e),Object.defineProperty(t,"prototype",{writable:!1}),t}ai.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.lineWidth=t.lineWidth,this.map=t.map,this.useMap=t.useMap,this.alphaMap=t.alphaMap,this.useAlphaMap=t.useAlphaMap,this.color.copy(t.color),this.opacity=t.opacity,this.resolution.copy(t.resolution),this.sizeAttenuation=t.sizeAttenuation,this.dashArray.copy(t.dashArray),this.dashOffset.copy(t.dashOffset),this.dashRatio.copy(t.dashRatio),this.useDash=t.useDash,this.visibility=t.visibility,this.alphaTest=t.alphaTest,this.repeat.copy(t.repeat),this};var li=ui(function t(n,e){if(!(this instanceof t))throw new TypeError("Cannot call a class as a function");this.N=n.points,this.O=n.color,this.H=n.url,this.I=n.opacity,void 0===this.I&&(this.I=1),this.U=n.height,void 0===this.U&&(this.U=0),this.rt=n.radius,void 0===this.rt&&(this.rt=1),this.ft=n.isFlat,void 0===this.ft&&(this.ft=!1),this.dt=n.isBezier,this.j=null,this.G=n.smoothparam,void 0===this.G&&(this.G=35),this.V=null,this.Y=null,this.B=!1,this.W=!1,this.k=n.count,void 0===this.k&&(this.k=1),this.vt=n.sizeAttenuation,void 0===this.vt&&(this.vt=0),this.gt=n.depthTest,void 0===this.gt&&(this.gt=!0),this._t=n.issmooth,this.yt=n.isautocount,this.bt=void 0,this.wt=void 0,this.q=e,this.Z=new fengmap.FMBound,this.X=null}),fi=(Object.assign(li.prototype,{K:function(){var t=this.X;if(!t)return!1;t.enableUpdateRender()},J:function(){var i=this,t=this.$(this.N,this.rt),n=new Qn;if(this.dt)n=new Xn(t[0],t[1],t[2],t[3]);else for(var e=0;e<t.length-1;e++){var r=new On(t[e],t[e+1]);n.curves.push(r)}var o=window.innerWidth,s=window.innerHeight,a=this.X,a=(a&&(o=a.getContainer().clientWidth,s=a.getContainer().clientHeight,a.on("resize",this.q.resize)),new ai({useMap:0,color:new m(this.O),opacity:this.I,resolution:new O(o,s),sizeAttenuation:this.vt,lineWidth:2*this.rt,transparent:!0,depthTest:this.gt})),o=(a.polygonOffset=!0,a.polygonOffsetFactor=-1,a.polygonOffsetUnits=-4,void 0!==this.H&&(a.visible=!1),new oi);return this._t?o.setPoints(this.xt(t,n)):o.setPoints(n.getPoints(this.G)),this.j=new An(o.geometry,a),this.j.mapNode=this.q,void 0!==this.H&&this.tt(this.H,function(t,n,e){t=new P(t);i.yt&&(i.k=i.nt(n,e)),t.wrapS=t.wrapT=g,i.j.material.color=new m("#FFFFFF"),i.j.material.useMap=1,i.j.material.map=t,i.j.material.repeat=new O(i.k,1),i.j.material.visible=!0,i.K()}),this.K(),!0},nt:function(t,n){for(var e=0,i=0;i<this.N.length-1;i++){var r=this.N[i],o=this.N[i+1];e+=Math.sqrt((r.x-o.x)*(r.x-o.x)+(r.y-o.y)*(r.y-o.y))}n=2*this.rt/n;return Math.floor(e/(t*n))},xt:function(t,n){for(var e=[],i=new E,r=t.length*this.G,o=0;o<r;o++)i=n.getPointAt(o/r,i),e.push(i);return e},$:function(t,n){var e=this.X;if(!e)return!1;for(var i,r=[],o=0;o<t.length;o++)this.dt?(i=new E(t[o].x-e.x,t[o].z+this.U,-t[o].y+e.y),r.push(i)):(i=new E(t[o].x-e.x,t[o].z+n+this.U,-t[o].y+e.y),r.push(i));return r},tt:function(t,n){var e=new Image;e.crossOrigin="Anonymous",e.onload=function(){var t=document.createElement("canvas");t.width=512,t.height=512,t.getContext("2d").drawImage(e,0,0,t.width,t.height),n&&n(t,e.width,e.height)},e.src=t}}),li);function di(t){return(di="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function vi(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,mi(i.key),i)}}function pi(t,n,e,i){return(pi="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(t,n,e,i){var r,t=wi(t,n);if(t){if((r=Object.getOwnPropertyDescriptor(t,n)).set)return r.set.call(i,e),!0;if(!r.writable)return!1}if(r=Object.getOwnPropertyDescriptor(i,n)){if(!r.writable)return!1;r.value=e,Object.defineProperty(i,n,r)}else t=i,r=e,!((i=mi(i=n))in t?Object.defineProperty(t,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[i]=r);return!0})(t,n,e,i)}function mi(t){t=function(t,n){if("object"!==di(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==di(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===di(t)?t:String(t)}function gi(t,n){return(gi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t})(t,n)}function _i(e){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,n=xi(e),n=(t=i?(t=xi(this).constructor,Reflect.construct(n,arguments,t)):n.apply(this,arguments),this);if(t&&("object"===di(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return yi(n)}}function yi(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function bi(){return(bi="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,n,e){var i=wi(t,n);if(i)return(i=Object.getOwnPropertyDescriptor(i,n)).get?i.get.call(arguments.length<3?t:e):i.value}).apply(this,arguments)}function wi(t,n){for(;!Object.prototype.hasOwnProperty.call(t,n)&&null!==(t=xi(t)););return t}function xi(t){return(xi=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var li=function(t){var n=r;if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&gi(n,t);var e,i=_i(r);function r(t){var n,e;if(this instanceof r)return bi((n=yi(e=i.call(this,t)),xi(r.prototype)),"setType",n).call(n,H.LINE3D_MARKER),e.tool=new fi(t,yi(e)),e.update=e.update.bind(yi(e)),e.resize=e.resize.bind(yi(e)),e;throw new TypeError("Cannot call a class as a function")}return n=r,(t=[{key:"opacity",get:function(){return this.tool.I},set:function(t){this.tool.I=t,this.tool.j&&(this.tool.j.material.opacity=this.tool.I,this.tool.K())}},{key:"url",get:function(){return this.tool.H},set:function(t){var i=this;this.tool.H=t,void 0!==this.tool.H&&this.tool.tt(this.tool.H,function(t,n,e){i.tool.yt&&(i.tool.k=i.tool.nt(n,e));n=new P(t);n.wrapS=n.wrapT=g,i.tool.j.material.color=new m("#FFFFFF"),i.tool.j.material.useMap=1,i.tool.j.material.map=n,i.tool.j.material.repeat=new O(i.tool.k,1),i.tool.K()})}},{key:"count",get:function(){return this.tool.k},set:function(t){this.tool.k=t,this.tool.j.material.map&&(this.tool.j.material.repeat=new O(this.tool.k,1)),this.tool.K()}},{key:"isBezier",get:function(){return this.tool.dt},set:function(t){t&&4!==this.tool.N.length?console.error("贝塞尔需要四个坐标点"):(this.tool.dt=t,(t=this.tool.j.parent).remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K())}},{key:"color",get:function(){return this.tool.O},set:function(t){this.tool.O=t,this.tool.j.material.color=new m(t),this.tool.K()}},{key:"points",get:function(){return this.tool.N},set:function(t){this.tool.N=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"height",get:function(){return this.tool.U},set:function(t){this.tool.U=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),void 0!==this.tool.bt&&(this.tool.j.material.isbackground=!0,this.tool.j.material.bgcolor=new m(this.tool.bt)),void 0!==this.tool.wt&&(this.tool.j.material.luminance=this.tool.wt),this.tool.K()}},{key:"radius",get:function(){return this.tool.rt},set:function(t){this.tool.rt=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),void 0!==this.tool.bt&&(this.tool.j.material.isbackground=!0,this.tool.j.material.bgcolor=new m(this.tool.bt)),void 0!==this.tool.wt&&(this.tool.j.material.luminance=this.tool.wt),this.tool.K()}},{key:"bound",get:function(){if(!0===bi(xi(r.prototype),"needUpdateBound",this)){this.tool.Z.reset(),this.tool.Z.expandByCoords(this.tool.N);var t=xi(r.prototype),n=!1,e=!0;if(!pi(t,"needUpdateBound",n,this||t)&&e)throw new TypeError("failed to set property")}return this.tool.Z.clone()}},{key:"x",get:function(){return this.bound.center.x}},{key:"y",get:function(){return this.bound.center.y}},{key:"addTo",value:function(t){bi(xi(r.prototype),"addTo",this).call(this,t),this.tool.X=t.parent.parent,this.tool.J(),this.parent.scene.add(this.tool.j)}},{key:"remove",value:function(){var t=this.tool.X,n=this.tool.j.parent;n&&n.remove(this.tool.j),this.parent&&this.parent.remove(this),t&&(t.enableUpdateRender(),this.tool.B&&t.off("update",this.update),t.off("resize",this.resize))}},{key:"getRenderNode",value:function(){return this.tool.j}},{key:"addEffect",value:function(t,n,e){var i=this.tool.X;i&&"FMFlowEffect"===t.type&&(void 0===this.tool.H?console.error("没有图片不能加特效"):(void 0!==e&&(this.tool.j.material.isbackground=!0,this.tool.j.material.bgcolor=new m(e)),void 0!==n&&(this.tool.j.material.luminance=n),this.tool.bt=e,this.tool.wt=n,this.tool.V=t,i.on("update",this.update),this.tool.B=!0))}},{key:"removeEffect",value:function(t){"FMFlowEffect"===t.type?this.tool.V=null:"FMBreath"===t.type&&(this.tool.Y=null),this.tool.B=!1,null===this.tool.V&&null===this.tool.Y&&(t=this.tool.X)&&(t.off("update",this.update),this.tool.j.material.offset=new O(1,1),this.tool.j.material.isbackground=!1,this.tool.j.material.luminance=1)}},{key:"update",value:function(){var t,n;null!==this.tool.V&&(t=this.tool.V.speed/this.tool.k,(n=this.tool.j.material.offset).x=n.x+t/1e3,this.tool.j.material.offset=n),this.tool.K()}},{key:"resize",value:function(){var t=window.innerWidth,n=window.innerHeight,e=this.tool.X;e&&(t=e.getContainer().clientWidth,n=e.getContainer().clientHeight),this.tool.j.material.resolution=new O(t,n),this.tool.K()}}])&&vi(n.prototype,t),e&&vi(n,e),Object.defineProperty(n,"prototype",{writable:!1}),r}(fengmap.FMMarker),Mi={FOV:35,CAMERA_NEAR:1,CAMERA_FAR:1e5,ZOOM_UPPER_BOUND:30,TILT_UPPER_BOUND:90,THOUSAND:1e3,DEG2RAD:.0174532,RAD2DEG:57.2957795,DRAW_TIME:500,EPS:.001},Si=(Object.freeze(Mi),Mi);function Li(t){return(Li="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ei(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==Li(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==Li(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===Li(t)?t:String(t)}(i.key),i)}}var Ti=function(){function t(){if(!(this instanceof t))throw new TypeError("Cannot call a class as a function")}var n,e,i;return n=t,i=[{key:"round",value:function(t){return 0<t.toFixed(2)?Math.ceil(t.toFixed(2)):Math.floor(t.toFixed(2))}},{key:"generateUUID",value:function(){for(var t=[],n=0;n<256;n++)t[n]=(n<16?"0":"")+n.toString(16);var e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0,o=4294967295*Math.random()|0,e=t[255&e]+t[e>>8&255]+t[e>>16&255]+t[e>>24&255]+"-"+t[255&i]+t[i>>8&255]+"-"+t[i>>16&15|64]+t[i>>24&255]+"-"+t[63&r|128]+t[r>>8&255]+"-"+t[r>>16&255]+t[r>>24&255]+t[255&o]+t[o>>8&255]+t[o>>16&255]+t[o>>24&255];return t.length=0,e.toUpperCase()}},{key:"findNearNthPowerOfTwo",value:function(t){t-=1;return(t=(t=(t=(t=(t|=t>>1)|t>>2)|t>>4)|t>>8)|t>>16)<0?1:1+t}},{key:"rgbToArray",value:function(t){var n=new m;return n.setStyle(t),[n.r,n.g,n.b]}},{key:"toRgba",value:function(t){var n;return void 0===t?t:"number"!=typeof t?3<=(n=t.split(",")).length?"rgba("+parseInt(n[0])+","+parseInt(n[1])+","+parseInt(n[2])+",1)":t:"rgba("+parseInt(255*new m(t).r)+","+parseInt(255*new m(t).g)+","+parseInt(255*new m(t).b)+",1)"}},{key:"toColor",value:function(t){var n;return"number"==typeof t?t:3<=(n=t.split(",")).length?parseInt(n[0])<<16|parseInt(n[1])<<8|parseInt(n[2]):(console.error("color format error",t),0)}}],(e=null)&&Ei(n.prototype,e),i&&Ei(n,i),Object.defineProperty(n,"prototype",{writable:!1}),t}();function Ci(t){return(Ci="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Di(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==Ci(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==Ci(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===Ci(t)?t:String(t)}(i.key),i)}}var Mi=function(){function n(t){if(!(this instanceof n))throw new TypeError("Cannot call a class as a function");this.Mt=(t=t||{}).src,this.St=t.dest,this.q=null,this.Lt=[],this.Et=0,this.Tt=0,this.Ct=0,this.Dt=Si.THOUSAND,this.Pt=!1,this.At=!1,this.Rt=!0,this.ht=null,this.Nt=null,this.Ot=Ti.generateUUID()}var t,e,i;return t=n,(e=[{key:"play",value:function(){return this.It()}},{key:"pause",value:function(){return this.At=!0,this}},{key:"resume",value:function(){return this.At=!1,this.Et+=this.Ct,this.Ct=0,this}},{key:"stop",value:function(){return this.Rt=!0,this}},{key:"finish",value:function(){return this.Rt=!0,this.Nt&&this.Nt(),this.Lt=[],this}}])&&Di(t.prototype,e),i&&Di(t,i),Object.defineProperty(t,"prototype",{writable:!1}),n}(),Pi=(Object.assign(Mi.prototype,{Ut:function(){for(var t in this)this[""+t]=null,delete this[""+t]},Ft:function(t){return this.Mt=t,this},Ht:function(t){return this.St=t,this},kt:function(t){return this.Dt=t*Si.THOUSAND,this},jt:function(t){return this.Tt=t*Si.THOUSAND,this},Gt:function(t){return this.ht=t,this},zt:function(t){return this.Nt=t,this},Vt:function(t){return this.Pt=t,this},It:function(){return this.Rt=!1,this.q&&(this.Et=this.q.Bt),this},Wt:function(){var t=new this.constructor({src:this.Mt,dest:this.St});return t.Et=this.Et,t.Tt=this.Tt,t.Dt=this.Dt,t.Pt=this.Pt,t.ht=this.ht,t.Nt=this.Nt,t},Yt:function(){var t=this.St.concat(),n=this.Mt.concat();return this.Mt=t,this.St=n,this}}),Mi);function Ai(t,n,e,i,r,o,s){ne.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:n,heightSegments:e,phiStart:i,phiLength:r,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Ri(t,n,e,i,r,o,s)),this.mergeVertices()}function Ri(t,n,e,i,r,o,s){C.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:n,heightSegments:e,phiStart:i,phiLength:r,thetaStart:o,thetaLength:s},t=t||1,n=Math.max(3,Math.floor(n)||8),e=Math.max(2,Math.floor(e)||6),i=void 0!==i?i:0,r=void 0!==r?r:2*Math.PI,o=void 0!==o?o:0,s=void 0!==s?s:Math.PI;for(var a,h=Math.min(o+s,Math.PI),c=0,u=[],l=new E,f=new E,d=[],v=[],p=[],m=[],g=0;g<=e;g++){var _=[],y=g/e,b=0;for(0==g&&0==o?b=.5/n:g==e&&h==Math.PI&&(b=-.5/n),a=0;a<=n;a++){var w=a/n;l.x=-t*Math.cos(i+w*r)*Math.sin(o+y*s),l.y=t*Math.cos(o+y*s),l.z=t*Math.sin(i+w*r)*Math.sin(o+y*s),v.push(l.x,l.y,l.z),f.copy(l).normalize(),p.push(f.x,f.y,f.z),m.push(w+b,1-y),_.push(c++)}u.push(_)}for(g=0;g<e;g++)for(a=0;a<n;a++){var x=u[g][a+1],M=u[g][a],S=u[g+1][a],L=u[g+1][a+1];(0!==g||0<o)&&d.push(x,M,L),(g!==e-1||h<Math.PI)&&d.push(M,S,L)}this.setIndex(d),this.setAttribute("position",new T(v,3)),this.setAttribute("normal",new T(p,3)),this.setAttribute("uv",new T(m,2))}function Ni(t){return(Ni="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Oi(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==Ni(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==Ni(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===Ni(t)?t:String(t)}(i.key),i)}}function Ii(t,n,e){return n&&Oi(t.prototype,n),e&&Oi(t,e),Object.defineProperty(t,"prototype",{writable:!1}),t}(Ai.prototype=Object.create(ne.prototype)).constructor=Ai,(Ri.prototype=Object.create(C.prototype)).constructor=Ri;var Mi=Ii(function t(n,e){if(!(this instanceof t))throw new TypeError("Cannot call a class as a function");this.Xt=n.isHemiSphere,void 0===this.Xt&&(this.Xt=!0),this.u=n.x,this.v=n.y,this.O=n.color,this.I=n.opacity,void 0===this.I&&(this.I=.5),this.U=n.height,void 0===this.U&&(this.U=0),this.rt=n.radius,void 0===this.rt&&(this.rt=8),this.H=n.url,this.N=[{x:this.u+this.rt,y:this.v},{x:this.u-this.rt,y:this.v},{x:this.u,y:this.v+this.rt},{x:this.u,y:this.v-this.rt}],this.j=null,this.Zt=null,this.qt=null,this.B=!1,this.Kt=!1,this.X=null,this.Z=new fengmap.FMBound,this.q=e}),Ui=(Object.assign(Mi.prototype,{K:function(){var t=this.X;if(!t)return!1;t.enableUpdateRender()},J:function(){var n=this,t=null,t=this.Xt?new Ai(this.rt,32,16,0,2*Math.PI,0,Math.PI/2):new Ai(this.rt,32,16,0,2*Math.PI,0,Math.PI),e=new y({color:new m(this.O),opacity:this.I,transparent:!0});return void 0!==this.H&&(e.visible=!1),this.j=new An(t,e),this.j.mapNode=this.q,void 0!==this.H&&this.tt(this.H,function(t){t=new P(t);t.repeat.set(1,1),t.wrapS=t.wrapT=g,n.j.material.map=t,n.j.material.color=null,n.j.material.needsUpdate=!0,n.j.material.visible=!0,n.K()}),this.K(),this.Qt(),!0},Qt:function(){var t=this.X;if(!t)return!1;this.Xt?this.j.position.set(this.u-t.x,this.U,-this.v+t.y):this.j.position.set(this.u-t.x,this.U+this.rt,-this.v+t.y)},tt:function(t,n){var e=new Image;e.crossOrigin="Anonymous",e.onload=function(){var t=document.createElement("canvas");t.width=512,t.height=512,t.getContext("2d").drawImage(e,0,0,512,512),n&&n(t)},e.src=t}}),Mi);function Fi(t){return(Fi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Hi(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,ji(i.key),i)}}function ki(t,n,e,i){return(ki="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(t,n,e,i){var r,t=Wi(t,n);if(t){if((r=Object.getOwnPropertyDescriptor(t,n)).set)return r.set.call(i,e),!0;if(!r.writable)return!1}if(r=Object.getOwnPropertyDescriptor(i,n)){if(!r.writable)return!1;r.value=e,Object.defineProperty(i,n,r)}else t=i,r=e,!((i=ji(i=n))in t?Object.defineProperty(t,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[i]=r);return!0})(t,n,e,i)}function ji(t){t=function(t,n){if("object"!==Fi(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==Fi(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===Fi(t)?t:String(t)}function Gi(t,n){return(Gi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t})(t,n)}function zi(e){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,n=Yi(e),n=(t=i?(t=Yi(this).constructor,Reflect.construct(n,arguments,t)):n.apply(this,arguments),this);if(t&&("object"===Fi(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Vi(n)}}function Vi(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Bi(){return(Bi="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,n,e){var i=Wi(t,n);if(i)return(i=Object.getOwnPropertyDescriptor(i,n)).get?i.get.call(arguments.length<3?t:e):i.value}).apply(this,arguments)}function Wi(t,n){for(;!Object.prototype.hasOwnProperty.call(t,n)&&null!==(t=Yi(t)););return t}function Yi(t){return(Yi=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Mi=function(t){var n=r;if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&Gi(n,t);var e,i=zi(r);function r(t){var n,e;if(this instanceof r)return Bi((n=Vi(e=i.call(this,t)),Yi(r.prototype)),"setType",n).call(n,H.SPHERE_MARKER),e.tool=new Ui(t,Vi(e)),e.update=e.update.bind(Vi(e)),e;throw new TypeError("Cannot call a class as a function")}return n=r,(t=[{key:"opacity",get:function(){return this.tool.I},set:function(t){this.tool.I=t,this.tool.j&&(this.tool.j.material.opacity=this.tool.I,this.tool.K())}},{key:"color",get:function(){return this.tool.O},set:function(t){this.tool.O=t,"ShaderMaterial"===this.tool.j.material.type?(this.tool.j.material.uniforms.color.value=new m(t),this.tool.j.material.uniforms.iscolor.value=!0):this.tool.j.material.color=new m(t),this.tool.K()}},{key:"url",get:function(){return this.tool.H},set:function(t){var n=this;this.tool.H=t,"ShaderMaterial"===this.tool.j.material.type?this.tool.qt.getMaterial(this,function(t){n.tool.j.material.dispose(),n.tool.j.material=t}):void 0!==this.tool.H&&this.tool.tt(this.tool.H,function(t){t=new P(t);t.repeat.set(1,1),t.wrapS=t.wrapT=g,n.tool.j.material.color=null,n.tool.j.material.map=t,n.tool.j.material.needsUpdate=!0,n.tool.K()})}},{key:"height",get:function(){return this.tool.U},set:function(t){this.tool.U=t,this.tool.Qt(),this.tool.K()}},{key:"radius",get:function(){return this.tool.rt},set:function(t){this.tool.rt=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"x",get:function(){return this.tool.u},set:function(t){this.tool.u=t,this.tool.Qt(),this.tool.K()}},{key:"y",get:function(){return this.tool.v},set:function(t){this.tool.v=t,this.tool.Qt(),this.tool.K()}},{key:"isHemiSphere",get:function(){return this.tool.Xt},set:function(t){this.tool.Xt=t;t=this.tool.j.parent;t.remove(this.tool.j),this.tool.j.geometry.dispose(),this.tool.j.material.dispose(),this.tool.J(),t.add(this.tool.j),this.tool.K()}},{key:"bound",get:function(){if(!0===Bi(Yi(r.prototype),"needUpdateBound",this)){this.tool.Z.reset(),this.tool.Z.expandByCoords(this.tool.N);var t=Yi(r.prototype),n=!1,e=!0;if(!ki(t,"needUpdateBound",n,this||t)&&e)throw new TypeError("failed to set property")}return this.tool.Z.clone()}},{key:"addTo",value:function(t){Bi(Yi(r.prototype),"addTo",this).call(this,t),this.tool.X=t.parent.parent,this.tool.J(),this.parent.scene.add(this.tool.j)}},{key:"remove",value:function(){var t=this.tool.X,n=this.tool.j.parent;n&&n.remove(this.tool.j),this.parent&&this.parent.remove(this),t&&(t.enableUpdateRender(),this.tool.B)&&t.off("update",this.update)}},{key:"addEffect",value:function(t){var n,e=this;"FMDiffusion"!==t.type?console.error("半圆覆盖物只能添加扩散效果"):(n=this.tool.X)&&(this.tool.qt=t,this.tool.qt.getMaterial(this,function(t){e.tool.B||(e.tool.j.material.dispose(),e.tool.j.material=t,e.tool.Kt=!0,n.on("update",e.update),e.tool.B=!0)}))}},{key:"removeEffect",value:function(){var n=this,t=(this.tool.qt=null,this.tool.X);t&&(t.off("update",this.update),t=new y({color:new m(this.tool.O),opacity:this.tool.I,transparent:!0}),this.tool.j.material=t,this.tool.j.scale.set(1,1,1),void 0!==this.tool.H&&this.tool.tt(this.tool.H,function(t){t=new P(t);t.repeat.set(1,1),t.wrapS=t.wrapT=g,n.tool.j.material.color=null,n.tool.j.material.map=t,n.tool.j.material.needsUpdate=!0,n.tool.K()}),this.tool.B=!1,this.tool.K())}},{key:"diffusion",value:function(t){var n=this,e=this.tool.X;if(!e)return!1;this.tool.Zt||(this.tool.Zt=new Pi);var i=t.maxScale,t=t.speed,t=this.tool.rt*i/t;this.tool.Zt.Ft([1]).Ht([i]).kt(t).Gt(function(t){t=t.destination[0];n.tool.j.scale.set(t,t,t),n.tool.K()}).zt(function(){n.tool.Zt.It()}),e._animator.Jt(this.tool.Zt.It())}},{key:"getRenderNode",value:function(){return this.tool.j}},{key:"update",value:function(){var n=this;null!==this.tool.qt&&("ShaderMaterial"!==this.tool.j.material.type&&this.tool.qt.getMaterial(this,function(t){n.tool.j.material.dispose(),n.tool.j.material=t}),this.tool.j.material.uniforms)&&(this.tool.qt.update(this.tool.j),this.tool.K())}}])&&Hi(n.prototype,t),e&&Hi(n,e),Object.defineProperty(n,"prototype",{writable:!1}),r}(fengmap.FMMarker);function Xi(t,n){this.array=t,this.stride=n,this.count=void 0!==t?t.length/n:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Xi.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Xi.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,n,e){t*=this.stride,e*=n.stride;for(var i=0,r=this.stride;i<r;i++)this.array[t+i]=n.array[e+i];return this},set:function(t,n){return this.array.set(t,n=void 0===n?0:n),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}});var Zi=new E;function qi(t,n,e,i){this.data=t,this.itemSize=n,this.offset=e,this.normalized=!0===i}function Ki(t){return(Ki="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Qi(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==Ki(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==Ki(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===Ki(t)?t:String(t)}(i.key),i)}}function Ji(t,n){return(Ji=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t})(t,n)}function $i(e){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,n=tr(e),n=(t=i?(t=tr(this).constructor,Reflect.construct(n,arguments,t)):n.apply(this,arguments),this);if(t&&("object"===Ki(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");if(void 0!==n)return n;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}}function tr(t){return(tr=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Object.defineProperties(qi.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(qi.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(var n=0,e=this.data.count;n<e;n++)Zi.x=this.getX(n),Zi.y=this.getY(n),Zi.z=this.getZ(n),Zi.applyMatrix4(t),this.setXYZ(n,Zi.x,Zi.y,Zi.z);return this},setX:function(t,n){return this.data.array[t*this.data.stride+this.offset]=n,this},setY:function(t,n){return this.data.array[t*this.data.stride+this.offset+1]=n,this},setZ:function(t,n){return this.data.array[t*this.data.stride+this.offset+2]=n,this},setW:function(t,n){return this.data.array[t*this.data.stride+this.offset+3]=n,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,n,e){return t=t*this.data.stride+this.offset,this.data.array[t+0]=n,this.data.array[t+1]=e,this},setXYZ:function(t,n,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=n,this.data.array[t+1]=e,this.data.array[t+2]=i,this},setXYZW:function(t,n,e,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=n,this.data.array[t+1]=e,this.data.array[t+2]=i,this.data.array[t+3]=r,this}});var nr,er=function(){var t=o,n=C;if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(n&&n.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),n&&Ji(t,n);var e,i,r=$i(o);function o(){var t,n;if(this instanceof o)return t=r.call(this),n=new Xi(new Float32Array([-.5,0,-.5,0,0,.5,0,-.5,1,0,.5,0,.5,1,1,-.5,0,.5,0,1]),5),t.setIndex([0,1,2,0,2,3]),t.setAttribute("position",new qi(n,3,0,!1)),t.setAttribute("uv",new qi(n,2,3,!1)),t;throw new TypeError("Cannot call a class as a function")}return t=o,e&&Qi(t.prototype,e),i&&Qi(t,i),Object.defineProperty(t,"prototype",{writable:!1}),t}();function ir(t){e.call(this),this.type="SpriteMaterial",this.color=new m(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}((ir.prototype=Object.create(e.prototype)).constructor=ir).prototype.isSpriteMaterial=!0,ir.prototype.copy=function(t){return e.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};var rr=new E,or=new E,sr=new E,ar=new O,hr=new O,cr=new _,ur=new E,lr=new E,fr=new E,dr=new O,vr=new O,pr=new O;function mr(t){var n;c.call(this),this.type="Sprite",void 0===nr&&(nr=new C,n=new Xi(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5),nr.setIndex([0,1,2,0,2,3]),nr.setAttribute("position",new qi(n,3,0,!1)),nr.setAttribute("uv",new qi(n,2,3,!1))),this.geometry=nr,this.material=void 0!==t?t:new ir,this.center=new O(.5,.5)}function gr(t,n,e,i,r,o){ar.subVectors(t,e).addScalar(.5).multiply(i),void 0!==r?(hr.x=o*ar.x-r*ar.y,hr.y=r*ar.x+o*ar.y):hr.copy(ar),t.copy(n),t.x+=hr.x,t.y+=hr.y,t.applyMatrix4(cr)}function _r(t){return(_r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function yr(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==_r(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==_r(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===_r(t)?t:String(t)}(i.key),i)}}mr.prototype=Object.assign(Object.create(c.prototype),{constructor:mr,isSprite:!0,raycast:function(t,n){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),or.setFromMatrixScale(this.matrixWorld),cr.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),sr.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&or.multiplyScalar(-sr.z);var e,i,r=this.material.rotation,r=(0!==r&&(i=Math.cos(r),e=Math.sin(r)),this.center);gr(ur.set(-.5,-.5,0),sr,r,or,e,i),gr(lr.set(.5,-.5,0),sr,r,or,e,i),gr(fr.set(.5,.5,0),sr,r,or,e,i),dr.set(0,0),vr.set(1,0),pr.set(1,1),null===t.ray.intersectTriangle(ur,lr,fr,!1,rr)&&(gr(lr.set(-.5,.5,0),sr,r,or,e,i),vr.set(0,1),null===t.ray.intersectTriangle(ur,fr,lr,!1,rr))||(r=t.ray.origin.distanceTo(rr))<t.near||r>t.far||n.push({distance:r,point:rr.clone(),uv:I.getUV(rr,ur,lr,fr,dr,vr,pr,new O),face:null,object:this})},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(t){return c.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this}});var br=function(){function e(t,n){if(!(this instanceof e))throw new TypeError("Cannot call a class as a function");this.q=t,this.$t=n,this.tn=void 0!==n.depth&&n.depth}var t,n,i;return t=e,(n=[{key:"createFlatMaterial",value:function(e){var i=new y;i.depthTest=!1,i.depthWrite=!1,i.transparent=!0,void 0!==this.$t.opacity?i.opacity=this.$t.opacity:i.opacity=1,i.side=Qt,this.createCanvas(function(t){var n=new P(t);n.minFilter=1006,n.generateMipmaps=!1,i.map=n,i.userData.scaleRatio=t.height/t.width,i.userData.mspriteScale=t.spriteScale,e(i)})}},{key:"createSprite",value:function(t){var n=new mr(new ir);return n.position.x=t.position.x,n.position.y=t.position.y,n.position.z=t.position.z,n.mapNode=this.q,n}},{key:"myUpdateMaterial",value:function(e){var i=this,r=new ir,o=(r.sizeAttenuation=!1,r.depthTest=!1,r.depthWrite=!1,r.transparent=!0,void 0!==this.$t.opacity?r.opacity=this.$t.opacity:r.opacity=1,r.side=Qt,this.q.getRenderNode());this.createCanvas(function(t){var n=new P(t);n.minFilter=1006,n.generateMipmaps=!1,r.map=n,r.userData.scaleRatio=t.height/t.width,r.userData.mspriteScale=t.spriteScale,"image"!==i.$t.layout.style&&"text"!==i.$t.layout.style&&(r.userData.style=i.$t.layout.style,r.userData.itHeightRatio=t.itHeightRatio),r.depthTest=i.tn,r.depthWrite=i.tn,o.material.map&&o.material.map.dispose(),o.material.dispose(),o.material=r,i.q.updateSize(),setTimeout(function(){e||(i.q.visible=!0,i.q.collision=i.$t.collision)},0)})}},{key:"createCanvas",value:function(t){"image"===this.$t.layout.style?this.createImageCanvas(t):"text"===this.$t.layout.style?this.createTextCanvas(t):this.createImageTextCanvas(t)}},{key:"getCenterByAnchor",value:function(t,n,e){var i,r;if("all"!==this.q.myanchor.baseon&&"flat"!==this.q.renderType)return i=n.width/e.width,n=n.height/e.height,r=t.width/e.width,t=t.height/e.height,"image"===this.q.myanchor.baseon?o(this.q.myanchor.anchor,i,n):o(this.q.myanchor.anchor,r,t);function o(t,n,e){var i=new O(n/2,e/2);switch(t){case fengmap.FMMarkerAnchor.LEFT:i.setX(0);break;case fengmap.FMMarkerAnchor.RIGHT:i.setX(n);break;case fengmap.FMMarkerAnchor.TOP:i.setY(e);break;case fengmap.FMMarkerAnchor.BOTTOM:i.setY(0);break;case fengmap.FMMarkerAnchor.LEFT_TOP:i.set(0,e);break;case fengmap.FMMarkerAnchor.RIGHT_TOP:i.set(n,e);break;case fengmap.FMMarkerAnchor.LEFT_BOTTOM:i.set(0,0);break;case fengmap.FMMarkerAnchor.RIGHT_BOTTOM:i.set(n,0)}return i}}},{key:"createImageTextCanvas",value:function(i){var r=this;this.createImageCanvas(function(t){var n=r.createTextCanvas(),e=null;(e="limage-rtext"===r.$t.layout.style||"ltext-rimage"===r.$t.layout.style?r.leftRight(n,t):"timage-btext"===r.$t.layout.style||"ttext-bimage"===r.$t.layout.style?r.topBottom(n,t):r.overlayText(n,t)).itHeightRatio=t.height/n.height,e.itWidthRatio=t.width/n.width,i&&i(e)})}},{key:"overlayText",value:function(t,n){var e=this.$t.layout.align,i=t.width,r=(i<n.width&&(i=n.width),t.height),o=(r<n.height&&(r=n.height),document.createElement("canvas")),s=(o.width=i,o.height=r,o.getContext("2d")),a=0,h=0,c=0,u=0,e=("center"===(e=void 0===e||e.indexOf("-")<0?"center-center":e).split("-")[0]?(h=r/2-t.height/2,u=r/2-n.height/2):"bottom"===e.split("-")[0]&&(h=r-t.height,u=r-n.height),"right"===e.split("-")[1]?(a=i-t.width,c=i-n.width):"center"===e.split("-")[1]&&(a=i/2-t.width/2,c=i/2-n.width/2),this.getCenterByAnchor(t,n,o));return e&&("image"===this.q.myanchor.baseon?(e.x=e.x+c/i,e.y=e.y+u/r):(e.x=e.x+a/i,e.y=e.y+h/r),this.q.getRenderNode().center.set(e.x,e.y)),s.drawImage(n,c,u,n.width,n.height),s.drawImage(t,a,h,t.width,t.height),o.spriteScale=r/t.rowHeight,o}},{key:"topBottom",value:function(t,n){var e=n.height+t.height,i=n.width,r=(i<t.width&&(i=t.width),document.createElement("canvas")),o=(r.width=i,r.height=e,r.getContext("2d")),s=this.$t.layout.align,a=this.$t.layout.style,h=0,c=0,a=("timage-btext"===a?c=n.height:"ttext-bimage"===a&&(h=t.height),0),u=0,s=(t.width>n.width?a=(t.width-n.width)/2:t.width<n.width&&(u=(n.width-t.width)/2),"left"===(s=void 0===s||"left"!==s&&"center"!==s&&"right"!==s?"center":s)?u=a=0:"right"===s&&(t.width>n.width?(a=t.width-n.width,u=0):t.width<n.width&&(u=n.width-t.width,a=0)),this.getCenterByAnchor(t,n,r));return s&&("image"===this.q.myanchor.baseon?(s.x=s.x+a/i,s.y=s.y+h/e):(s.x=s.x+u/i,s.y=s.y+c/e),this.q.getRenderNode().center.set(s.x,s.y)),o.drawImage(n,a,h,n.width,n.height),o.drawImage(t,u,c,t.width,t.height),r.spriteScale=e/t.rowHeight,r}},{key:"leftRight",value:function(t,n){var e=n.width+t.width,i=n.height,r=(i<t.height&&(i=t.height),document.createElement("canvas")),o=(r.width=e,r.height=i,r.getContext("2d")),s=this.$t.layout.align,a=this.$t.layout.style,h=0,c=0,s=("center"===(s=void 0===s||"top"!==s&&"center"!==s&&"bottom"!==s?"top":s)?n.height>t.height?(h=0,c=(n.height-t.height)/2):n.height<t.height&&(h=(t.height-n.height)/2,c=0):"bottom"===s&&(n.height>t.height?(h=0,c=n.height-t.height):n.height<t.height&&(h=t.height-n.height,c=0)),0),u=0,a=("limage-rtext"===a?u=n.width:"ltext-rimage"===a&&(s=t.width),this.getCenterByAnchor(t,n,r));return a&&("image"===this.q.myanchor.baseon?(a.x=a.x+s/e,a.y=a.y+h/i):(a.x=a.x+u/e,a.y=a.y+c/i),this.q.getRenderNode().center.set(a.x,a.y)),o.drawImage(n,s,h,n.width,n.height),o.drawImage(t,u,c,t.width,t.height),r.spriteScale=i/t.rowHeight,r}},{key:"createImageCanvas",value:function(t){var n,e=this,i=document.createElement("canvas"),r=(i.width=this.q.imagesize[0],i.height=this.q.imagesize[1],i.spriteScale=1,i.getContext("2d"));this.q.url?((n=new Image).crossOrigin="Anonymous",n.onload=function(){r.drawImage(n,0,0,e.q.imagesize[0],e.q.imagesize[1]),t&&t(i)},n.src=this.q.url):t&&t(i)}},{key:"createTextCanvas",value:function(t){var n=this.getTextInfo(),e=this.getCanvasInfo(n),i=document.createElement("canvas"),r=(i.width=e.width,i.height=e.height,i.getContext("2d")),r=(this.drawText(r,n,e),this.drawPlate(i,e,n)),o=1;if((1<n.length||"text"!==this.$t.layout.style)&&(o=i.height/e.rowHeight),r.spriteScale=o,r.rowHeight=e.rowHeight,this.q.size=e.size,!t)return r;t(r)}},{key:"drawPlate",value:function(t,n,e){var i,r,o=this.$t.text.padding,s=(void 0===o&&(o=[0,0,0,0]),this.$t.text.plateColor),a=this.$t.text.plateStrokeColor,h=this.$t.text.plateStrokeWidth;return void 0!==a&&void 0===h&&(h=1),void 0===s&&void 0===a?t:(void(r=0)!==a?r=4*h:h=0,(i=document.createElement("canvas")).width=n.width+2*(o[1]+o[3])+r,i.height=n.height+2*(o[0]+o[2])+r,r=i.getContext("2d"),void 0!==s&&(r.rect(0,0,i.width,i.height),r.fillStyle=s,r.fill()),void 0!==a&&(r.lineWidth=h,r.rect(0,0,i.width,i.height),r.strokeStyle=a,r.stroke()),r.drawImage(t,2*(o[3]+h),2*(o[0]+h),t.width,t.height),1<e.length?n.size=n.size+(o[0]+o[2]+2*h)/e.length:n.size=n.size+(o[0]+o[2]+h)/e.length,i)}},{key:"drawText",value:function(a,t,n){if(a.textBaseline="Alphabetic",1===t.length){var e=t[0],i=2*e.fontSize*1.2;c(e,2,n,n.height/2+i/3)}else for(var r=0,o=0;o<t.length;o++){var s=t[o],h=2*s.fontSize*1.2;0===o?r+=h:r=r+h+2*s.lineSpacing,c(s,2,n,r)}function c(t,n,e,i){var r=t.text,o=t.fontSize*n*1.2,s=o+"px "+t.fontFamily,o=(void 0!==t.fontWeight&&(s=t.fontWeight+" "+o+"px "+t.fontFamily),a.font=s,1);void 0!==t.strokeColor?(a.strokeStyle=t.strokeColor,void 0===t.strokeWidth||isNaN(""+t.strokeWidth)||(o=parseFloat(""+t.strokeWidth)),a.lineWidth=2*n*o):o=0,a.fillStyle=t.fillColor,t.textAlign===fengmap.FMTextAlign.Left?(a.textAlign="left",0!==o&&a.strokeText(r,0,i),a.fillText(r,0,i)):t.textAlign===fengmap.FMTextAlign.Right?(a.textAlign="right",0!==o&&a.strokeText(r,e.width,i),a.fillText(r,e.width,i)):(a.textAlign="center",0!==o&&a.strokeText(r,e.width/2,i),a.fillText(r,e.width/2,i))}}},{key:"getCanvasInfo",value:function(t){for(var n=document.createElement("canvas").getContext("2d"),e=(n.textBaseline="Alphabetic",null),i=0,r=null,o=0,s=0,a=0;a<t.length;a++){var h=2*t[a].fontSize*1.2,c=((null===r||r<t[a].fontSize)&&(r=t[a].fontSize),h+"px "+t[a].fontFamily);void 0!==t[a].fontWeight&&(c=t[a].fontWeight+" "+h+"px "+t[a].fontFamily),n.font=c;var c=n.measureText(t[a].text).width,u=h+2*t[a].lineSpacing,o=o+h+2*t[a].lineSpacing;s+=t[a].lineSpacing,i+=u,(null===e||e<c)&&(e=c)}var l=r,f=(1<t.length&&(l+=s/t.length),this.$t.text.padding),d=this.$t.text.plateStrokeColor,v=this.$t.text.plateStrokeWidth;return{width:e,height:i,fontHeight:i,size:l,rowHeight:(o+2*((f=void 0===f?[0,0,0,0]:f)[0]+f[2])+2*(v=void 0===(v=void 0!==d&&void 0===v?1:v)?0:v)*2)/t.length}}},{key:"getTextInfo",value:function(){var t=this.q.map,n=this.$t.text.content,e=n.lineSpacing,i=((e=void 0===e?2:e)<2&&(e=2),n.textAlign),r=(void 0===i&&(i=fengmap.FMTextAlign.Center),n.fontSize),o=(void 0===r&&(r=20),n.fontWeight),s=n.fontFamily,a=(void 0===s&&(s=t.getMapOptions().fontFamily),n.fillColor),h=(void 0===a&&(a="#000000"),n.strokeColor),c=n.strokeWidth,u=(void 0!==h&&void 0===c&&(c=1),n.text),l=[];if("string"==typeof u)if(u.indexOf("%rn%")<0)l.push({textAlign:i,fontSize:r,fontWeight:o,fontFamily:s,fillColor:a,strokeColor:h,strokeWidth:c,lineSpacing:0,text:u});else for(var f=u.split("%rn%"),d=0;d<f.length;d++)l.push({textAlign:i,fontSize:r,fontWeight:o,fontFamily:s,fillColor:a,strokeColor:h,strokeWidth:c,lineSpacing:e,text:f[d]});else for(var v=0;v<u.length;v++){var p=u[v];void 0===p.textAlign&&(p.textAlign=i),void 0===p.fontSize&&(p.fontSize=r),void 0===p.fontWeight&&(p.fontWeight=o),void 0===p.fontFamily&&(p.fontFamily=s),void 0===p.fillColor&&(p.fillColor=a),void 0===p.strokeColor&&(p.strokeColor=h),void 0===p.strokeWidth&&(p.strokeWidth=c),void 0===p.lineSpacing&&(p.lineSpacing=e),l.push(p)}return l}},{key:"getLocationScale",value:function(t,n){var e;return this.q.map.camera.isPerspectiveCamera?(e=new _,t.updateMatrixWorld(),this.q.map.camera.updateMatrixWorld(),e.multiplyMatrices(this.q.map.camera.matrixWorldInverse,t.matrixWorld),t=(new E).applyMatrix4(e),this.getScale(n)*Math.abs(t.z)):this.getScale(n)}},{key:"getScale",value:function(t){var n=0,n=this.q.map.camera.isPerspectiveCamera?t/(this.q.map.getRenderManager().renderer.domElement.clientHeight/(2*Math.tan(this.q.map.camera.fov*Si.DEG2RAD/2))):t*Math.abs(this.q.map.camera.top-this.q.map.camera.bottom)/this.q.map.camera.zoom/this.q.map.getRenderManager().renderer.domElement.clientHeight;return n=isNaN(n)?1:n}}])&&yr(t.prototype,n),i&&yr(t,i),Object.defineProperty(t,"prototype",{writable:!1}),e}();function wr(t){return(wr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function xr(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,function(t){t=function(t,n){if("object"!==wr(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==wr(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===wr(t)?t:String(t)}(i.key),i)}}function Mr(t,n,e){return n&&xr(t.prototype,n),e&&xr(t,e),Object.defineProperty(t,"prototype",{writable:!1}),t}var Sr=Mr(function t(){if(!(this instanceof t))throw new TypeError("Cannot call a class as a function");this.nn=new Map,this.en=[],this.Bt=(new Date).getTime(),this.rn=new Map,this.on=null,this.sn=this.sn.bind(this),this.an=0,this.hn()}),Lr=(Object.assign(Sr.prototype,{Jt:function(t){if(Array.isArray(t)){this.nn.set(t[0].Ot,t[0]),t[0].q=this;for(var n=1;n<t.length;n++)t[n].Et=t[n-1].Et+t[n-1].Dt,t[n].Tt=t[n-1].Tt+t[n-1].Dt,this.nn.set(t[n].Ot,t[n]),t[n].q=this}else this.nn.has(t.Ot)||(this.nn.set(t.Ot,t),t.q=this,t.Et=this.Bt)},cn:function(t){if(Array.isArray(t))for(var n=0;n<t.length;n++)this.nn.delete(t[n].Ot);else this.nn.delete(t.Ot)},un:function(t){this.en.push(t)},ln:function(t){t=this.en.indexOf(t);-1<t&&this.en.splice(t,1)},fn:function(t){this.rn.set(t.Ot=Ti.generateUUID(),t)},dn:function(t){this.rn.delete(t.Ot)},ht:function(t,n,e){for(var i=[],r=[],o=0;o<t.Mt.length;o++)void 0===t.Lt[o]&&(t.Lt[o]=0),1<=n?(i.push(t.St[o]),r.push(t.St[o]-t.Mt[o]-t.Lt[o])):(i.push((t.St[o]-t.Mt[o])*n+t.Mt[o]),r.push((t.St[o]-t.Mt[o])*e),t.Lt[o]+=(t.St[o]-t.Mt[o])*e);t.ht({destination:i,delta:r}),r.length=i.length=0},hn:function(){var i=this,r=(this.an=requestAnimationFrame(this.hn.bind(this)),(new Date).getTime()),o=r-this.Bt;this.rn.forEach(function(t){return t(o)});for(var t=0;t<this.en.length;t++)this.en[t].update(o/1e3);this.nn.forEach(function(t){var n,e;t.Rt||(t.At?t.Ct+=o:(n=(r-t.Et)/t.Dt,e=o/t.Dt,i.ht(t,n,e),n=r-t.Et-t.Tt,t.Dt<=n&&(t.Lt=[],t.Pt?(t.Et=r,t.Nt&&t.Nt()):(e=t.Rt,t.Rt=!0,!e&&t.Nt&&t.Nt()))))}),this.Bt=r,this.on&&0===this.nn.size&&this.sn()},Ut:function(t){this.on=t},sn:function(){this.an&&(window.cancelAnimationFrame(this.an),this.an=0),this.nn.forEach(function(t){t.Ut()}),this.nn.clear(),this.en=[],this.rn.clear(),this.on&&this.on({name:"Animator"})}}),Sr);function Er(t){return(Er="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Tr(t,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,Pr(i.key),i)}}function Cr(t,n,e,i){return(Cr="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(t,n,e,i){var r,t=Or(t,n);if(t){if((r=Object.getOwnPropertyDescriptor(t,n)).set)return r.set.call(i,e),!0;if(!r.writable)return!1}if(r=Object.getOwnPropertyDescriptor(i,n)){if(!r.writable)return!1;r.value=e,Object.defineProperty(i,n,r)}else t=i,r=e,!((i=Pr(i=n))in t?Object.defineProperty(t,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[i]=r);return!0})(t,n,e,i)}function Dr(t,n,e,i,r){if(!Cr(t,n,e,i||t)&&r)throw new TypeError("failed to set property")}function Pr(t){t=function(t,n){if("object"!==Er(t)||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===n?String:Number)(t);e=e.call(t,n||"default");if("object"!==Er(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"===Er(t)?t:String(t)}function Ar(t,n){return(Ar=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t})(t,n)}function Rr(e){var i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,n=N(e),n=(t=i?(t=N(this).constructor,Reflect.construct(n,arguments,t)):n.apply(this,arguments),this);if(t&&("object"===Er(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Nr(n)}}function Nr(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function R(){return(R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,n,e){var i=Or(t,n);if(i)return(i=Object.getOwnPropertyDescriptor(i,n)).get?i.get.call(arguments.length<3?t:e):i.value}).apply(this,arguments)}function Or(t,n){for(;!Object.prototype.hasOwnProperty.call(t,n)&&null!==(t=N(t)););return t}function N(t){return(N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Ir,Ur={FMWallMarker:t,FMTubeMarker:Le,FMSphereMarker:Mi,FMLine3dMarker:li,FMCompositeMarker:function(t){var n=r;if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&Ar(n,t);var e,i=Rr(r);function r(t){var n;if(!(this instanceof r))throw new TypeError("Cannot call a class as a function");void 0===t.anchor&&(t.anchor={baseon:"all",anchor:fengmap.FMMarkerAnchor.CENTER}),"image"!==t.layout.style&&"text"!==t.layout.style||(t.anchor.baseon="all"),void 0===t.collision&&(t.collision=!0),void 0!==t.render&&"flat"===t.render&&(t.collision=!1);var e={text:"",x:t.x,y:t.y,height:t.height,collision:!1};return"all"===t.anchor.baseon&&(e.anchor=t.anchor.anchor),(n=i.call(this,e)).myanchor=t.anchor,n.map=null,n.markerOptions=t,n.tool=new br(Nr(n),t),n.mydepth=void 0!==t.depth&&t.depth,n.url=null,n.imagesize=[32,32],n.renderType=t.render,n.myrenderNode=null,void 0===n.renderType&&(n.renderType="billboard"),t.image&&(n.url=t.image.url,t.image.size)&&(n.imagesize=t.image.size),n.rotateAnimation=null,n.animator=new Lr,n.myUpdateSize=n.myUpdateSize.bind(Nr(n)),n.renderUpdate=n.renderUpdate.bind(Nr(n)),n.zoomUpdate=n.zoomUpdate.bind(Nr(n)),"billboard"===n.renderType&&R((e=Nr(n),N(r.prototype)),"setInitWriteRenderNodeFunction",e).call(e,function(t){return n.tool.createSprite(t)}),n}return n=r,(t=[{key:"addTo",value:function(t){R(N(r.prototype),"addTo",this).call(this,t),this.map=t.parent.parent,this.size=this.imagesize[1],this.map.on("zoom",this.zoomUpdate),"billboard"===this.renderType?(this.markerOptions.collision&&(this.visible=!1),this.tool.myUpdateMaterial()):this.myInit()}},{key:"stop",value:function(){R(N(r.prototype),"stop",this).call(this),this.rotateAnimation&&(this.animator.cn(this.rotateAnimation),this.rotateAnimation=null)}},{key:"remove",value:function(){R(N(r.prototype),"remove",this).call(this),this.map.off("zoom",this.zoomUpdate),"flat"===this.renderType&&this.myrenderNode&&this.myrenderNode.parent&&(this.rotateAnimation&&(this.animator.cn(this.rotateAnimation),this.rotateAnimation=null),this.myrenderNode.parent.remove(this.myrenderNode),this.myrenderNode=null,this.map.off("zoom",this.myUpdateSize),this.map.off("resize",this.myUpdateSize),this.map.off("viewChanged",this.myUpdateSize),this.map.off("update",this.renderUpdate))}},{key:"setText",value:function(t){this.markerOptions.text.content.text=t}},{key:"getText",value:function(){return this.markerOptions.text.content.text}},{key:"setImage",value:function(t,n){this.url=t,this.imagesize=n}},{key:"getImage",value:function(){return{url:this.url,size:this.imagesize}}},{key:"update",value:function(){var e=this;"billboard"===this.renderType?this.tool.myUpdateMaterial(!0):this.tool.createFlatMaterial(function(t){new er;var n=e.myrenderNode;n.material.map&&n.material.map.dispose(),n.material.dispose(),n.material=t,e.myUpdateSize()})}},{key:"moveTo",value:function(t){R(N(r.prototype),"moveTo",this).call(this,t)}},{key:"rotateTo",value:function(t){var n,e,i,r,o,s=this;"flat"===this.renderType&&(n=this.map,e=t.duration||.5,i=this.myrenderNode.rotation.y,r=t.heading%360*Si.DEG2RAD,o=0,o=i+(o=(r=-Math.PI+r)-i!=0?Math.sin(r-i)/Math.abs(Math.sin(r-i))*Math.acos(Math.cos(r-i)):o),t.animate?(this.rotateAnimation?(this.rotateAnimation.Ft([i]),this.rotateAnimation.Ht([r])):this.rotateAnimation=new Pi({src:[i],dest:[o]}),this.rotateAnimation.kt(e).Gt(function(t){s.myrenderNode&&(s.myrenderNode.rotation.y=t.destination[0],n.enableUpdateRender())}).zt(function(){s.animator.cn(s.rotateAnimation),s.rotateAnimation=null,n.enableUpdateRender(),t.finish&&t.finish()}),this.animator.Jt(this.rotateAnimation.It())):this.myrenderNode&&(this.myrenderNode.rotation.y=o,n.enableUpdateRender()))}},{key:"visible",get:function(){return R(N(r.prototype),"visible",this)},set:function(t){Dr(N(r.prototype),"visible",t,this,!0),"flat"===this.renderType&&(this.getRenderNode().visible=!1,null!==this.myrenderNode)&&(this.myrenderNode.visible=t)}},{key:"plateColor",get:function(){return this.markerOptions.text.plateColor},set:function(t){this.markerOptions.text.plateColor=t}},{key:"plateStrokeColor",get:function(){return this.markerOptions.text.plateStrokeColor},set:function(t){this.markerOptions.text.plateStrokeColor=t}},{key:"height",get:function(){return R(N(r.prototype),"height",this)},set:function(t){Dr(N(r.prototype),"height",t,this,!0),this.renderUpdate(),this.map.enableUpdateRender()}},{key:"x",get:function(){return R(N(r.prototype),"x",this)}},{key:"y",get:function(){return R(N(r.prototype),"y",this)}},{key:"zoomRange",get:function(){var t=this.markerOptions.zoomRange;return t=void 0===t?[16,23]:t},set:function(t){this.markerOptions.zoomRange=t,this.zoomUpdate()}},{key:"opacity",get:function(){var t=this.markerOptions.opacity;return void 0===t?1:t},set:function(t){this.markerOptions.opacity=t}},{key:"level",get:function(){return R(N(r.prototype),"level",this)}},{key:"text",get:function(){return"image"!==this.markerOptions.layout.style?this.getText():" "}},{key:"type",get:function(){return R(N(r.prototype),"type",this)}},{key:"myInit",value:function(){var e=this;this.getRenderNode().visible=!1,this.tool.createFlatMaterial(function(t){var n=new er;e.myrenderNode=new An(n,t),e.myrenderNode.rotation.set(0,-Math.PI,-Math.PI,"XYZ"),e.myrenderNode.updateMatrixWorld(!0),e.myrenderNode.renderOrder=1,e.myrenderNode.mapNode=e.getRenderNode().mapNode,e.getRenderNode().parent.add(e.myrenderNode),e.myrenderNode.position.x=e.getRenderNode().position.x,e.myrenderNode.position.y=e.getRenderNode().position.y,e.myrenderNode.position.z=e.getRenderNode().position.z,e.map.enableUpdateRender(),e.myUpdateSize(),e.map.on("zoom",e.myUpdateSize),e.map.on("resize",e.myUpdateSize),e.map.on("viewChanged",e.myUpdateSize),e.map.on("update",e.renderUpdate),e.zoomUpdate()})}},{key:"myUpdateSize",value:function(){var t,n,e=this.map;!e||(n=this.myrenderNode.position,t=!1,t=!!(isNaN(n.x)||isNaN(n.y)||isNaN(n.z)||"number"!=typeof n.x||"number"!=typeof n.y||"number"!=typeof n.z)||t)||(n=this.tool.getLocationScale(this.myrenderNode,this.size),this.myrenderNode.scale.set(n,n,n),this.myrenderNode.scale.multiplyScalar(this.myrenderNode.material.userData.mspriteScale),this.myrenderNode.scale.setX(this.myrenderNode.scale.x/this.myrenderNode.material.userData.scaleRatio),e.enableUpdateRender())}},{key:"renderUpdate",value:function(){var t;null!==this.myrenderNode&&(t=this.getRenderNode(),this.myrenderNode.position.x===t.position.x&&this.myrenderNode.position.y===t.position.y&&this.myrenderNode.position.z===t.position.z||(this.myrenderNode.position.x=t.position.x,this.myrenderNode.position.y=t.position.y,this.myrenderNode.position.z=t.position.z,this.map.enableUpdateRender()))}},{key:"zoomUpdate",value:function(){var t=this.markerOptions.zoomRange,n=(void 0===t&&(t=[16,23]),this.getRenderNode()),e=("flat"===this.renderType&&(n=this.myrenderNode),this.map.getZoom());!(e<t[0]||e>t[1])&&this.visible?n.visible=!0:n.visible=!1}},{key:"dispose",value:function(){this.remove()}},{key:"getAnchor",value:function(){var t="billboard"===this.renderType?{x:this.getRenderNode().center.x,y:this.getRenderNode().center.y}:{x:.5,y:.5};return t}},{key:"getScreenSize",value:function(){var t,n;return"billboard"===this.renderType?{width:(t=this.size*this.getRenderNode().material.userData.mspriteScale*1.1)/this.getRenderNode().material.userData.scaleRatio,height:t}:(t=this.markerOptions.layout.style,n=this.myrenderNode.material.map.image,"image"===t?{width:n.width,height:n.height}:{width:n.width/2,height:n.height/2})}}])&&Tr(n.prototype,t),e&&Tr(n,e),Object.defineProperty(n,"prototype",{writable:!1}),r}(fengmap.FMTextMarker)};for(Ir in Ur)window.fengmap[Ir]=Ur[Ir];F.default=fengmap}],i={},r.m=e,r.c=i,r.d=function(t,n,e){r.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"vn",{value:!0})},r.t=function(n,t){if(1&t&&(n=r(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.vn)return n;var e=Object.create(null);if(r.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)r.d(e,i,function(t){return n[t]}.bind(null,i));return e},r.n=function(t){var n=t&&t.vn?function(){return t.default}:function(){return t};return r.d(n,"a",n),n},r.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},r.p="",r(r.s=0).default;function r(t){var n;return(i[t]||(n=i[t]={i:t,l:!1,exports:{}},e[t].call(n.exports,n,n.exports,r),n.l=!0,n)).exports}var e,i});