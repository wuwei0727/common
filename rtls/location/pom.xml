<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <groupId>com.tgy.rtls</groupId>
    <artifactId>location</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>location</name>
    <description>Demo project for Spring Boot</description>
    <parent>
        <groupId>com.tgy</groupId>
        <artifactId>rtls</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath><!-- lookup parent from repository -->
    </parent>


    <dependencies>
<!--      <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>-->

<!--       <dependency>-->
<!--            <groupId>org.apache.shardingsphere</groupId>-->
<!--            <artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>-->
<!--            <version>5.1.1</version>-->
<!--        </dependency>-->
        <!--   nacos-config配置中心依赖 -->
      <!--  <dependency>
            <groupId>com.alibaba.boot</groupId>
            <artifactId>nacos-config-spring-boot-starter</artifactId>
            <version>${nacos.config.version}</version>
        </dependency>
        &lt;!&ndash; nacos-discovery注册中心依赖 &ndash;&gt;
        <dependency>
            <groupId>com.alibaba.boot</groupId>
            <artifactId>nacos-discovery-spring-boot-starter</artifactId>
            <version>${nacos.discovery.version}</version>
        </dependency>-->

      <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!--整合Knife4j-->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>2.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
<!--        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>-->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.31.Final</version>
        </dependency>

        <dependency>
            <groupId>com.tgy.rtls</groupId>
            <artifactId>data</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!--thymeleaf-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>com.baomidou</groupId>-->
<!--            <artifactId>dynamic-datasource-spring-boot-starter</artifactId>-->
<!--            <version>3.5.2</version>-->
<!--        </dependency>-->



        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.8.0</version>
        </dependency>

      <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.8.0</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.9</version>
        </dependency>


    </dependencies>
<!--   <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                        <include>**/*.*</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
    </build>-->
 <!--<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
              <configuration>
                    <mainClass>com.tgy.rtls.location.LocationApplication</mainClass>
                    <layout>ZIP</layout>
                      <fork>true</fork>
                      &lt;!&ndash;增加jvm参数&ndash;&gt;
                      <jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- proguard混淆插件-->
         <!--   <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.2.0</version>
                <executions>
                    <execution>
                        &lt;!&ndash; 打包的时候开始混淆&ndash;&gt;
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <injar>${project.build.finalName}.jar</injar>
                    &lt;!&ndash;输出的jar&ndash;&gt;
                    <outjar>${project.build.finalName}.jar</outjar>
                    &lt;!&ndash; 是否混淆&ndash;&gt;
                    <obfuscate>true</obfuscate>
                    <options>
                        <option>-target 1.8</option> &lt;!&ndash;指定java版本号&ndash;&gt;
                        <option>-dontshrink</option> &lt;!&ndash;默认开启，不做收缩（删除注释、未被引用代码）&ndash;&gt;
                        <option>-dontoptimize</option>&lt;!&ndash;默认是开启的，这里关闭字节码级别的优化&ndash;&gt;
                  &lt;!&ndash;      <option>-adaptclassstrings</option>混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代&ndash;&gt;
                        <option>-ignorewarnings
                        </option>&lt;!&ndash; 忽略warn消息,如果提示org.apache.http.* 这个包里的类有问题，那么就加入下述代码：-keep class org.apache.http.** { *; }    -dontwarn org.apache.http.**&ndash;&gt;
                        <option>-keep class org.apache.logging.log4j.util.* { *; }</option>
                        <option>-dontwarn org.apache.logging.log4j.util.**</option>
                        <option>-keepattributes
                            Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod
                        </option>&lt;!&ndash;对异常、注解信息在runtime予以保留，不然影响springboot启动&ndash;&gt;
                        &lt;!&ndash;不混淆所有interface接口&ndash;&gt;
                        &lt;!&ndash;                        <option>-keepnames interface **</option>&ndash;&gt;
                        <option>-keepclassmembers enum * { *; }</option>&lt;!&ndash;保留枚举成员及方法&ndash;&gt;
                        <option>-keepparameternames</option>
                        <option>-keepclasseswithmembers public class * {
                            public static void main(java.lang.String[]);}
                        </option> &lt;!&ndash;保留main方法的类及其方法名&ndash;&gt;
                        &lt;!&ndash;忽略note消息，如果提示javax.annotation有问题，那麽就加入以下代码&ndash;&gt;
                        <option>-dontnote javax.annotation.**</option>
                        <option>-dontnote sun.applet.**</option>
                        <option>-dontnote sun.tools.jar.**</option>
                        <option>-dontnote org.apache.commons.logging.**</option>
                        <option>-dontnote javax.inject.**</option>
                        <option>-dontnote org.aopalliance.intercept.**</option>
                        <option>-dontnote org.aopalliance.aop.**</option>
                        <option>-dontnote org.apache.logging.log4j.**</option>
                        &lt;!&ndash;不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射&ndash;&gt;
                        <option>-keepclassmembers public class *{void set*(***);*** get*();}</option>
                        &lt;!&ndash;  ##### 以下为需要根据项目情况修改 comment by 郭秀志 20200719 ##### &ndash;&gt;
                        &lt;!&ndash;入口程序类不能混淆，混淆会导致springboot启动不了&ndash;&gt;
                        <option>-keep class com.tgy.rtls.location.LocationApplication</option>

                      <option>-keepclasseswithmembernames  class com.tgy.rtls.location.controller.**{*;}</option>
                        <option>-keep class  com.tgy.rtls.location.**</option>
                       &lt;!&ndash;<option>-keep class com.tgy.rtls.location.**{*;}</option>&ndash;&gt;



                        &lt;!&ndash;不混淆所有类,保存原始定义的注释&ndash;&gt;
                        <option>-keepclassmembers class * {
                            @org.springframework.beans.factory.annotation.Autowired *;
                            @org.springframework.beans.factory.annotation.Value *;
                            }
                        </option>
                    </options>
                    <libs>
                        &lt;!&ndash; 添加依赖 java8&ndash;&gt;
                        <lib>${java.home}/lib/rt.jar</lib>
                        <lib>${java.home}/lib/jce.jar</lib>
                    </libs>
                </configuration>
                <dependencies>
                    &lt;!&ndash; https://mvnrepository.com/artifact/net.sf.proguard/proguard-base &ndash;&gt;
                    <dependency>
                        <groupId>net.sf.proguard</groupId>
                        <artifactId>proguard-base</artifactId>
                        <version>6.1.1</version>
                    </dependency>
                </dependencies>
            </plugin>-->

            <!--Springboot repackage 打包-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- spingboot 打包需要repackage否则不是可执行jar -->
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.tgy.rtls.location.LocationApplication</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
