<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tgy.rtls.data.mapper.checkingin.ClassgroupMapper">
    <resultMap id="Classgroup" type="com.tgy.rtls.data.entity.checkingin.Classgroup">
        <id property="id" column="id"/>
        <collection property="personList" column="{id=id,sName=sName}" javaType="ArrayList" ofType="com.tgy.rtls.data.entity.user.PersonVO" select="findByPerson"/>
    </resultMap>

    <select id="findByAllLike" resultMap="Classgroup">
        select *,#{sName} as sName,
        (select count(1) from sys_person_classgroup where classgroupid=id)as count
        from classgroup
        where instanceid=#{instanceid}
        <if test="name!=null and name!=''">
            and name like concat('%',#{name},'%')
        </if>
        order by creatTime desc
    </select>


    <select id="findByAllEqual" resultMap="Classgroup">
        select *,#{sName} as sName,
        (select count(1) from sys_person_classgroup where classgroupid=id)as count
        from classgroup
        where instanceid=#{instanceid}
        <if test="name!=null and name!=''">
            and name =#{name}
        </if>
        order by creatTime desc
    </select>


    <select id="findByPerson" parameterType="java.util.Map" resultType="com.tgy.rtls.data.entity.user.PersonVO">
        select id,name,num,
        (select name from job where id=p.job)as jobName,
        (select name from department where id=p.department)as departmentName,
        (select name from level where id=p.level)as levelName,
        (select name from worktype where id=p.worktype)as worktypeName,
        (select num from tag where id=p.tagid)as tagName,
        (select ${sName} from status where type='online' and typeid=(select status from tag where id=p.tagid))as statusName
        from person p
        where id in
        (select  personid
        from sys_person_classgroup
        where classgroupid=#{id})
    </select>

    <select id="findByClassgroup" resultType="string">
        select GROUP_CONCAT(id)
        from classgroup
        where instanceid=#{instanceid}
    </select>

    <insert id="addClassgroup" useGeneratedKeys="true" keyProperty="id">
        insert into classgroup(name,instanceid)
        value (#{classgroup.name},#{classgroup.instanceid})
    </insert>


    <insert id="addPersonClassgroup">
        insert into sys_person_classgroup(personid,classgroupid)
        value (#{personid},#{classgroupid})
    </insert>

    <update id="updateClassgroup">
        update classgroup
        <set>
            updateTime=#{classgroup.updateTime},
            <if test="classgroup.name!=null and classgroup.name!=''">
                name=#{classgroup.name},
            </if>
        </set>
        where id=#{classgroup.id}
    </update>

    <delete id="delClassgroup">
        delete from classgroup
        where id in
        <foreach collection="ids" separator="," close=")" open="(" item="id">
            #{id}
        </foreach>
    </delete>

    <delete id="delPersonClassgroupId">
        delete from sys_person_classgroup
        where classgroupid =#{classgroupid}
    </delete>
    <delete id="delClassgroupByperson">
        delete from sys_person_classgroup
        where personid in
        <foreach collection="ids" separator="," close=")" open="(" item="id">
            #{id}
        </foreach>
    </delete>



    <delete id="delPersonClassgroup">
        delete from sys_person_classgroup
        where classgroupid in
        <foreach collection="classgroupids" separator="," close=")" open="(" item="id">
            #{id}
        </foreach>
    </delete>

</mapper>