<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tgy.rtls.data.mapper.equip.BaseMapper">
    <select id="findByAll" resultType="com.tgy.rtls.data.entity.equip.Basestation">
        select *,
        (select name from map_2d where id=map)as mapName,
        (SELECT ${name} FROM status WHERE TYPE='network' AND typeid=networkstate)AS networkName
        from basestation
        where 1=1
        <if test="instanceid!=null and instanceid!=''">
            and instanceid=#{instanceid}
        </if>
        <if test="map!=null and map!=''">
            and map=#{map}
        </if>
        <if test="num!=null and num!=''">
            and num like concat('%',#{num},'%')
        </if>
        <if test="networkstate!=null">
            and networkstate=#{networkstate}
        </if>
        <if test="relevance==1">
            and map is not null
        </if>
        <if test="relevance==0">
            and map is null
        </if>
        <if test="desc!=null and desc!=''">
            order by ${desc}
        </if>
    </select>

    <select id="findById" resultType="com.tgy.rtls.data.entity.equip.Basestation">
        select *,
        (select name from map_2d where id=map)as mapName
        from basestation
        where id=#{id}
    </select>

    <select id="findByNum" resultType="com.tgy.rtls.data.entity.equip.Basestation">
        select *,
        (select name from map_2d where id=map)as mapName
        from basestation
        where num=#{num}
    </select>

    <insert id="addBasestation" keyProperty="id" useGeneratedKeys="true">
        insert into basestation (num,map,networkstate,antennadelay,instanceid,x,y,z,floor)
        values (#{base.num},#{base.map},#{base.networkstate},#{base.antennadelay},#{base.instanceid},#{base.x},#{base.y},#{base.z},#{base.floor});
    </insert>

    <update id="updateBasestation">
        update basestation
        <set>
            updateTime=#{base.updateTime},
            <if test="base.num!=null ">
                num=#{base.num},
            </if>
            <if test="base.map!=null ">
            map=#{base.map},
            </if>
            <if test="base.networkstate!=null and base.networkstate!=''">
                networkstate=#{base.networkstate},
            </if>
            <if test="base.antennadelay!=null and base.antennadelay!=''">
                antennadelay=#{base.antennadelay},
            </if>
            <if test="base.x!=null">
                x=#{base.x},
            </if>
            <if test="base.y!=null">
                y=#{base.y},
            </if>
            <if test="base.z!=null">
                z=#{base.z},
            </if>
            <if test="base.floor!=null">
                floor=#{base.floor},
            </if>
            <if test="base.initiator!=null">
                initiator=#{base.initiator},
            </if>
        </set>
        where id=#{base.id}
    </update>

    <update id="updateBaseNetworkstate">
        update basestation
        set networkstate=#{networkstate}
        where num=#{num}
    </update>

    <delete id="delBasestation">
        delete from  basestation
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <delete id="delBasestationByInstance">
        delete from  basestation
         where instanceid=#{instanceid}
  </delete>
</mapper>