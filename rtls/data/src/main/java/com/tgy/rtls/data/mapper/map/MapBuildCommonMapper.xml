<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tgy.rtls.data.mapper.map.MapBuildCommonMapper">
    <sql id="Base_Column_List">
        <!--@sql select -->mwc.`id`,
                           mwc.`name`,
                           mwc.`map`,
                           mwc.`floor`,
                           mrf.name floorName,
                           mwc.fid,
                           mwc.x,
                           mwc.y,
                           mwc.object_type,
                           mwc.icon_type,
                           m2d.name AS `mapName`,
                           m2d.mapKey,
                           m2d.appName,
                           m2d.fmapID,
                           m2d.mapImg,
                           m2d.themeImg
        <!--@sql from `map_wc` mwc
                 left join map_2d m2d on m2d.id = mwc.map left join map_relevance_floor mrf on mrf.map = m2d.id
        -->
    </sql>
    <sql id="Base_Column_List2">
        <!--@sql select -->mb.`id`,
                           mb.`name`,
                           mb.`map`,
                           mb.`floor`,
                           mrf.name floorName,
                           mb.fid,
                           mb.x,
                           mb.y,
                           mb.object_type,
                           mb.icon_type,
                           m2d.name AS `mapName`,
                           m2d.mapKey,
                           m2d.appName,
                           m2d.fmapID,
                           m2d.mapImg,
                           m2d.themeImg
        <!--@sql from `map_build` mb
                 left join map_2d m2d on m2d.id = mb.map left join map_relevance_floor mrf on mrf.map = m2d.id        -->
    </sql>

    <!--$var desc=1-->
    <select id="getByConditions" resultType="com.tgy.rtls.data.entity.map.MapBuildCommon">
        select
        <include refid="Base_Column_List"/>
        from `map_wc` mwc
            left join map_2d m2d on m2d.id = mwc.map
            left join map_relevance_floor mrf on mrf.map = m2d.id AND mrf.level = mwc.floor
        where 1=1
        <if test="map != null">
            and mwc.map = #{map}
        </if>
        <if test="objectType != null and objectType != ''">
            and object_type =#{objectType}
        </if>
        <if test="floorName != null and floorName != ''">
            and mrf.name like concat('%',#{floorName},'%')
        </if>
        <if test="name != null and name != ''">
            and mwc.name like concat('%', #{name}, '%')
        </if>
        <if test="fid != null and fid != ''">
            and mwc.fid =#{fid}
        </if>
        <if test="floor != null">
            and mwc.floor = #{floor}
        </if>
        <if test="mapids != null and mapids != ''">
            and m2d.id in
            <foreach close=")" collection="mapids" item="mapids" open="(" separator=",">
                #{mapids}
            </foreach>
        </if>
        group by mwc.id desc
        <if test="desc != null and desc != ''">
            order by mwc.${desc} desc
        </if>
    </select>

    <insert id="addMapBuild">
        insert into map_wc (name, map, floor, fid, x, y, object_type, icon_type)
        values (#{name}, #{map}, #{floor}, #{fid}, #{x}, #{y}, #{objectType}, #{iconType});
    </insert>

    <update id="updateMapBuild">
        update map_wc
        <set>
            <if test="map != null">
                map = #{map},
            </if>
            <if test="x != null and x != ''">
                x = #{x},
            </if>
            <if test="y != null and y != ''">
                y = #{y},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="floor != null">
                floor = #{floor},
            </if>
            fid         = #{fid},
            object_type = #{objectType},
            icon_type   = #{iconType}
        </set>
        where id = #{id}
    </update>


    <!--$var desc=1-->
    <select id="getByConditions2" resultType="com.tgy.rtls.data.entity.map.MapBuildCommon">
        select
        <include refid="Base_Column_List2"/>
        from `map_build` mb
            left join map_2d m2d on m2d.id = mb.map
        left join map_relevance_floor mrf on mrf.map = m2d.id AND mrf.level = mb.floor
        where 1=1
        <if test="map != null">
            and mb.map = #{map}
        </if>
        <if test="objectType != null and objectType != ''">
            and object_type =#{objectType}
        </if>
        <if test="name != null and name != ''">
            and mb.name like concat('%', #{name}, '%')
        </if>
        <if test="fid != null and fid != ''">
            and mb.fid =#{fid}
        </if>
        <if test="floorName != null and floorName != ''">
            and mrf.name like concat('%',#{floorName},'%')
        </if>
        <if test="floor != null">
            and mb.floor = #{floor}
        </if>
        <if test="mapids != null and mapids != ''">
            and m2d.id in
            <foreach close=")" collection="mapids" item="mapids" open="(" separator=",">
                #{mapids}
            </foreach>
        </if>
        group by mb.id desc
        <if test="desc != null and desc != ''">
            order by mb.${desc} desc
        </if>
    </select>

    <insert id="addMapBuild2">
        insert into map_build (name, map, floor, fid, x, y, object_type, icon_type)
        values (#{name}, #{map}, #{floor}, #{fid}, #{x}, #{y}, #{objectType}, #{iconType});
    </insert>

    <update id="updateMapBuild2">
        update map_build
        <set>
            <if test="map != null">
                map = #{map},
            </if>
            <if test="x != null and x != ''">
                x = #{x},
            </if>
            <if test="y != null and y != ''">
                y = #{y},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="floor != null">
                floor = #{floor},
            </if>
            fid         = #{fid},
            object_type = #{objectType},
            icon_type   = #{iconType}
        </set>
        where id = #{id}
    </update>

    <select id="getMapBuild2ById" resultType="com.tgy.rtls.data.entity.map.MapBuildCommon">
        select
        <include refid="Base_Column_List"/>
        from `map_wc` mwc
                 left join map_2d m2d on m2d.id = mwc.map
        left join map_relevance_floor mrf on mrf.map = m2d.id AND mrf.level = mwc.floor
        where 1 = 1
        <if test="id != null and id != null">
            and mwc.id = #{id}
        </if>
    </select>

    <select id="getMapBuild2ById2" resultType="com.tgy.rtls.data.entity.map.MapBuildCommon">
        select
        <include refid="Base_Column_List2"/>
        from `map_build` mb
                 left join map_2d m2d on m2d.id = mb.map
        left join map_relevance_floor mrf on mrf.map = m2d.id AND mrf.level = mb.floor

        where 1 = 1
        <if test="id != null and id != null">
            and mb.id = #{id}
        </if>
    </select>

    <delete id="delMapBuild">
        delete
        from map_wc
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>;
    </delete>

    <delete id="delMapBuild2">
        delete
        from map_build
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>;
    </delete>
</mapper>