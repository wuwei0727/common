<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tgy.rtls.data.mapper.equip.GatewayMapper">
    <select id="findByAll" resultType="com.tgy.rtls.data.entity.equip.Gateway_uwb">
        select *,
        (select name from map_2d where id=map)as mapName
        from gateway_uwb
        where 1=1
        <if test="instanceid!=null and instanceid!=''">
         and instanceid=#{instanceid}
        </if>
        <if test="map!=null and map!=''">
            and map=#{map}
        </if>
        <if test="connect!=null">
            and connect=#{connect}
        </if>
        <if test="relevance==1">
            and map is not null
        </if>
        <if test="relevance==0">
            and map is null
        </if>
        <if test="name!=null and name!=''">
            and name like concat('%',#{name},'%')
        </if>
        order by addTime desc
    </select>

    <select id="findById"  resultType="com.tgy.rtls.data.entity.equip.Gateway_uwb">
         select *,
        (select name from map_2d where id=map)as mapName
        from gateway_uwb
        where id=#{id}
    </select>

    <select id="findByIp"  resultType="com.tgy.rtls.data.entity.equip.Gateway_uwb">
        select *
        from gateway_uwb
        where ip=#{ip}
    </select>

    <insert id="addGateway" useGeneratedKeys="true" keyProperty="id">
        insert into gateway_uwb(name,map,ip,x,y,z,instanceid,floor,username,password)
        values (#{gateway.name},#{gateway.map},#{gateway.ip},#{gateway.x},#{gateway.y},#{gateway.z},#{gateway.instanceid},#{gateway.floor},
        <choose>
            <when test="gateway.username != null and gateway.username != ''">
                #{gateway.username},
            </when>
            <otherwise>
                'admin',
            </otherwise>
        </choose>
        <choose>
            <when test="gateway.password != null and gateway.password != ''">
                #{gateway.password}
            </when>
            <otherwise>
                '123456'
            </otherwise>
        </choose>
     )
    </insert>

    <update id="updateGateway">
        update gateway_uwb
        <set>
            <if test="gateway.name!=null and gateway.name!=''">
                name=#{gateway.name},
            </if>
            <if test="gateway.map!=null ">
                map=#{gateway.map},
            </if>
            <if test="gateway.ip!=null and gateway.ip!=''">
                ip=#{gateway.ip},
            </if>
            <if test="gateway.x!=null and gateway.x!=''">
                x=#{gateway.x},
            </if>
            <if test="gateway.y!=null and gateway.y!=''">
                y=#{gateway.y},
            </if>
            <if test="gateway.z!=null and gateway.z!=''">
                z=#{gateway.z},
            </if>
            <if test="gateway.username!=null and gateway.username!=''">
                username=#{gateway.username},
            </if>
            <if test="gateway.password!=null and gateway.password!=''">
                password=#{gateway.password},
            </if>
            <if test="gateway.connect!=null and gateway.connect!=''">
                connect=#{gateway.connect},
            </if>
            <if test="gateway.floor!=null and gateway.floor!=''">
                floor=#{gateway.floor},
            </if>
        </set>
        where id=#{gateway.id}
    </update>

    <update id="updateGatewayConnect">
        update gateway_uwb
        set connect=#{connect}
        where id=#{id}
    </update>
    <delete id="delGatewayByInstance">
        delete from  gateway_uwb
         where instanceid=#{instanceid}
  </delete>
    <delete id="delGateway">
        delete from gateway_uwb
        where id in
        <foreach collection="ids" separator="," close=")" open="(" item="id">
            #{id}
        </foreach>
    </delete>

    <select id="findByAllGatewayLora" resultType="com.tgy.rtls.data.entity.equip.Gateway_lora">
        select gateway_lora.*,m.mapKey,m.appName,m.fmapID,m.themeImg,
        (select name from map_2d where id=gateway_lora.map)as mapName,
        (SELECT ${name} FROM status WHERE TYPE='network' AND typeid=gateway_lora.networkstate)AS networkName
        from gateway_lora left join  map_2d m on m .id = gateway_lora.map
        where 1=1
        <if test="networkstate!=null">
            and networkstate=#{networkstate}
        </if>
        <if test="map!=null and map!=''">
            and map=#{map}
        </if>
        <if test="relevance==1">
            and map is not null
        </if>
        <if test="relevance==0">
            and map is null
        </if>
        <if test="num!=null and num!=''">
            and num like concat('%',#{num},'%')
        </if>
        <if test="mapName!=null and mapName!=''">
            and m.name like concat('%',#{mapName},'%')
        </if>
        <if test="desc!=null and desc!=''">
            order by ${desc}
        </if>
    </select>

    <select id="findByAllGatewayLora2" resultType="com.tgy.rtls.data.entity.equip.Gateway_lora">
        select gateway_lora.*,m.mapKey,m.appName,m.fmapID,m.themeImg,mrf.name floorName,
        (select name from map_2d where id=gateway_lora.map)as mapName,
        (SELECT ${name} FROM status WHERE TYPE='network' AND typeid=gateway_lora.networkstate)AS networkName
        from gateway_lora left join  map_2d m on m .id = gateway_lora.map left join map_relevance_floor mrf on mrf.map = m.id AND mrf.level = gateway_lora.floor
        where 1=1 and num != 0112
        <if test="maps != null and maps != ''">
            and m.id in
            <foreach collection="maps" open="(" close=")"  separator="," item="maps">
                #{maps}
            </foreach>
        </if>
        <if test="floorName != null and floorName != ''">
            and mrf.name like concat('%',#{floorName},'%')
        </if>
        <if test="networkstate!=null">
            and networkstate=#{networkstate}
        </if>
        <if test="map!=null and map!=''">
            and gateway_lora.map=#{map}
        </if>
        <if test="relevance==1">
            and gateway_lora.map is not null
        </if>
        <if test="relevance==0">
            and gateway_lora.map is null
        </if>
        <if test="num!=null and num!=''">
            and num like concat('%',#{num},'%')
        </if>
        <if test="mapName!=null and mapName!=''">
            and gateway_lora.map = #{mapName}
        </if>
        <if test="desc!=null and desc!=''">
            order by ${desc}
        </if>
    </select>

    <select id="findGateway_loraByIdAndName" resultType="com.tgy.rtls.data.entity.equip.Gateway_lora">
        select *,
        (SELECT name FROM status WHERE TYPE='network' AND typeid=gateway_lora.networkstate)AS networkName,
        (select name from map_2d where id=map)as mapName
        from gateway_lora
        where 1=1
        <if test="id!=null and id!=''">
            and id=#{id}
        </if>
        <if test="map!=null and map!=''">
            and map=#{map}
        </if>
        <if test="num!=null and num!=''">
            and num =#{num}
        </if>
        order by id desc
    </select>

    <select id="findGateway_loraByNum" resultType="com.tgy.rtls.data.entity.equip.Gateway_lora">
        select *,
        (SELECT name FROM status WHERE TYPE='network' AND typeid=gateway_lora.networkstate)AS networkName,
        (select name from map_2d where id=map)as mapName
        from gateway_lora
        where  num =#{num}

        order by id desc
    </select>

    <insert id="addGatewayLora" useGeneratedKeys="true" keyProperty="id">
        insert into gateway_lora(num,map,ip,x,y,floor,networkstate,firmware,hardware)
        values (#{gateway.num},#{gateway.map},#{gateway.ip},#{gateway.x},#{gateway.y},#{gateway.floor},#{gateway.networkstate},#{gateway.firmware},#{gateway.hardware}
        )
    </insert>
    <insert id="addWxGateway" useGeneratedKeys="true" keyProperty="id">
        insert into gateway_lora(num,map,ip,x,y,floor,firmware,hardware)
        values (
                #{gateway.num},#{gateway.map},#{gateway.ip},
                #{gateway.x},#{gateway.y},#{gateway.floor},
                #{gateway.firmware},#{gateway.hardware}
               )
    </insert>


    <update id="updateGateway_Lora">
        update gateway_lora
        <set>
            <if test="gateway.num!=null and gateway.num!=''">
                num=#{gateway.num},
            </if>
            <if test="gateway.map!=null ">
                map=#{gateway.map},
            </if>
            <if test="gateway.ip!=null and gateway.ip!=''">
                ip=#{gateway.ip},
            </if>
            <if test="gateway.x!=null and gateway.x!=''">
                x=#{gateway.x},
            </if>
            <if test="gateway.y!=null and gateway.y!=''">
                y=#{gateway.y},
            </if>
            <if test="gateway.floor!=null ">
                floor=#{gateway.floor},
            </if>
            <if test="gateway.firmware!=null ">
                firmware=#{gateway.firmware},
            </if>
            <if test="gateway.hardware!=null ">
                hardware=#{gateway.hardware},
            </if>
            <if test="gateway.networkstate!=null ">
                networkstate=#{gateway.networkstate},
            </if>
            <if test="gateway.batteryTime != null">
                batteryTime=#{gateway.batteryTime},
            </if>
            <if test="gateway.offlineTime != null">
                offline_time=#{gateway.offlineTime}
            </if>
        </set>
        where id=#{gateway.id}
    </update>
    <update id="updateWxGateway">
        update gateway_lora
        <set>
            <if test="gateway.num!=null and gateway.num!=''">
                num=#{gateway.num},
            </if>
            <if test="gateway.map!=null and gateway.map!=''">
                map=#{gateway.map},
            </if>
            <if test="gateway.ip!=null">
                ip=#{gateway.ip},
            </if>
            <if test="gateway.x!=null and gateway.x!='' " >
                x=#{gateway.x},
            </if>
            <if test="gateway.y!=null and gateway.y!='' ">
                y=#{gateway.y},
            </if>
            <if test="gateway.floor!=null and gateway.floor!=''">
                floor=#{gateway.floor},
            </if>
            <if test="gateway.networkstate!=null and gateway.networkstate!='' ">
                networkstate=#{gateway.networkstate},
            </if>
            <if test="gateway.hardware!=null">
                hardware=#{gateway.hardware},
            </if>
            <if test="gateway.firmware!=null">
                hardware=#{gateway.firmware},
            </if>
            updateTime=#{gateway.updateTime}
        </set>
        where id = #{gateway.id}
    </update>

    <update id="updateGatewayState">
        update gateway_lora
        <set>
            <if test="state!=null">
                networkstate=#{state},
            </if>
        </set>
        where id = #{id}
    </update>
    <delete id="delGateway_lora">
        delete from gateway_lora
        where id in
        <foreach collection="ids" separator="," close=")" open="(" item="id">
            #{id}
        </foreach>
    </delete>


<select id="getGateway_loraAcount" resultType="com.tgy.rtls.data.entity.park.BeaconCount">
        SELECT (SELECT COUNT(id)
        FROM gateway_lora
        WHERE map=#{map} AND networkstate=0) AS offLine,
        (SELECT COUNT(id)
        FROM gateway_lora
        WHERE map=#{map})  AS total,
        (SELECT COUNT(id)
        FROM gateway_lora
        WHERE map=#{map} AND networkstate=1) AS onLine
</select>
    <select id="findGatewayByNum" resultType="com.tgy.rtls.data.entity.equip.Gateway_lora">
        select *,(select name from map_2d where id=#{map}) mapName
        from gateway_lora
        where num = #{num} and map = #{map}
    </select>
    <insert id="addInfraredOrigin" useGeneratedKeys="true" keyProperty="id">
        insert into infrared_original(timestamp,gatewaynum,infrarednum,state,count,rssi,power)
        values (#{infraredOrigin.timestamp},#{infraredOrigin.gatewaynum},#{infraredOrigin.infrarednum},#{infraredOrigin.state},#{infraredOrigin.count},#{infraredOrigin.rssi},#{infraredOrigin.power}
        )
    </insert>

    <select id="findInfraredOrigin" resultType="com.tgy.rtls.data.entity.equip.InfraredOrigin">
        select *
        from infrared_original
        where 1=1
        <if test="gatewaynum!=null">
          and   gatewaynum=#{gatewaynum}
        </if>
        <if test="infrarednum!=null">
          and  infrarednum=#{infrarednum}
        </if>
        <if test="state!=null">
            and  state=#{state}
        </if>
        <if test="count!=null">
            and  count=#{count}
        </if>
        <if test="start!=null and end !=null ">
            and  timestamp between #{start} and #{end}
        </if>
        order by timestamp
    </select>
    <select id="findInfraredCount" resultType="java.lang.Integer">
        SELECT DISTINCT(gatewaynum)
        from infrared_original
        where 1=1
        <if test="infrarednum!=null">
            and   infrarednum=#{infrarednum}
        </if>
        <if test="start!=null and end !=null ">
            and  timestamp between #{start} and #{end}
        </if>

    </select>
    <select id="findAllInfrared" resultType="java.lang.Integer">
        SELECT DISTINCT(infrarednum)
        from infrared_original
        where 1=1
        <if test="infraredd!=null and infraredd!='' ">
            and   infrarednum=#{infraredd}
        </if>
        <if test="gate!=null and gate!='' ">
            and   gatewaynum=#{gate}
        </if>
        <if test="start!=null and end !=null ">
            and  timestamp between #{start} and #{end}
        </if>
    </select>

    <select id="findAllGateway" resultType="com.tgy.rtls.data.entity.equip.Gateway_lora">
        select g.id, g.num, g.map, g.x, g.y, g.floor, g.networkstate, g.addTime,m2d.name as mapName
        from gateway_lora g
                left join map_2d m2d on g.map = m2d.id
        where 1=1
        <if test="id != null and id != ''">
            and g.id=#{id}
        </if>
        <if test="num != null and num != ''">
            and g.num=#{num}
        </if>
        <if test="map != null and map != ''">
            and g.map=#{map}
        </if>
    </select>
    <insert id="addGateWayState" useGeneratedKeys="true" keyProperty="id">
         insert into gateway_state(gatewaynum,error_code)
        values (#{gateWayState.gatewaynum},#{gateWayState.state} )
    </insert>

    <insert id="addInfraredState" useGeneratedKeys="true" keyProperty="id">
        insert into infrared_state(infrarednum,error_code)
        values (#{infraredState.infrarednum},#{infraredState.state} )
    </insert>




    <select id="findInfraredState" resultType="com.tgy.rtls.data.entity.equip.InfraredState">
        select infrared_state.id,infrared_state.timestamp,infrared_state.error_code as state,infrared_state.infrarednum
        from infrared_state
        where 1=1
        <if test="infrarednum!=null">
            and  infrarednum=#{infrarednum}
        </if>
        <if test="state!=null and state != ''">
            and  error_code=#{state}
        </if>
        <if test="start!=null and end !=null ">
            and  timestamp between #{start} and #{end}
        </if>
        order by id
    </select>


    <select id="findGateWayState" resultType="com.tgy.rtls.data.entity.equip.GateWayState">
        select gateway_state.id,gateway_state.timestamp,gateway_state.error_code as state,gateway_state.gatewaynum
        from gateway_state
        where 1=1
        <if test="gatewaynum!=null">
            and   gatewaynum=#{gatewaynum}
        </if>
        <if test="state!=null">
            and  error_code=#{state}
        </if>
        <if test="start!=null and end !=null ">
            and  timestamp between #{start} and #{end}
        </if>
        order by id
    </select>

    <select id="gatewayBatteryTimeWarningLevelsQuery" resultType="com.tgy.rtls.data.entity.equip.DeviceVo">
        SELECT g.id,
               g.num,
               g.map,
               g.batterytime,
               CASE
                   WHEN TIMESTAMPDIFF(MINUTE, g.batterytime, NOW()) > 10 and TIMESTAMPDIFF(HOUR, g.batterytime, NOW()) &lt;= 1 THEN 3
                   WHEN TIMESTAMPDIFF(HOUR, g.batterytime, NOW()) > 1 and TIMESTAMPDIFF(HOUR, g.batterytime, NOW()) &lt;= 10 THEN 2
                   WHEN TIMESTAMPDIFF(HOUR, g.batterytime, NOW()) > 10 THEN 1
                   WHEN g.batterytime is null THEN 1
                   ELSE 12
               END AS level
        FROM gateway_lora g
        WHERE g.networkstate != 1 and num != 0112 and map IS NOT NULL
        <!--        group by id-->
<!--        order by level-->
<!--        limit 6-->
    </select>
</mapper>