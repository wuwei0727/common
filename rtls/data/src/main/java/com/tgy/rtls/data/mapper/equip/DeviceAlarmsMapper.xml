<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tgy.rtls.data.mapper.equip.DeviceAlarmsMapper">
  <resultMap id="BaseResultMap" type="com.tgy.rtls.data.entity.equip.DeviceAlarmsVo">
    <!--@mbg.generated-->
    <!--@Table device_alarms-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="num" jdbcType="BIGINT" property="num" />
    <result column="mapName" jdbcType="VARCHAR" property="mapName" />
    <result column="placeName" jdbcType="VARCHAR" property="placeName" />
    <result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="equipment_type" jdbcType="TINYINT" property="equipmentType" />
    <result column="alarm_type" jdbcType="TINYINT" property="alarmType" />
    <result column="priority" jdbcType="TINYINT" property="priority" />
    <result column="state" jdbcType="BIGINT" property="state" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="x" jdbcType="VARCHAR" property="x" />
    <result column="y" jdbcType="VARCHAR" property="y" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
  </resultMap>

  <resultMap id="BaseResultMap1" type="com.tgy.rtls.data.entity.equip.DeviceAlarmsVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="deviceTypeId" jdbcType="INTEGER" property="deviceTypeId" />
    <result column="deviceName" jdbcType="VARCHAR" property="deviceName" />
    <result column="alarmsTypeId" jdbcType="INTEGER" property="alarmsTypeId" />
    <result column="alarmName" jdbcType="VARCHAR" property="alarmName" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    <!--@sql select -->
    d.id, d.num, IF(d.equipment_type = 4, pp_lock.name, matched_places.name) as placeName, d.device_id, m2d.name as mapName,
    d.equipment_type, d.alarm_type, d.priority, d.state, d.start_time, d.end_time, d.desc,
    IF(d.equipment_type = 1, bc.x, IF(d.equipment_type = 2, g.x, IF(d.equipment_type = 5, c.x, IF(d.equipment_type = 4, pp_lock.x, matched_places.x)))) as x,
    IF(d.equipment_type = 1, bc.y, IF(d.equipment_type = 2, g.y, IF(d.equipment_type = 5, c.y, IF(d.equipment_type = 4, pp_lock.y, matched_places.y)))) as y,
    IF(d.equipment_type = 1, bc.floor, IF(d.equipment_type = 2, g.floor, IF(d.equipment_type = 5, c.floor, IF(d.equipment_type = 4, pp_lock.floor, matched_places.floor)))) as floor
    <!--@sql FROM (SELECT id, name, x, y, floor FROM parking_place) matched_places
    RIGHT JOIN device_alarms d FORCE INDEX (idx_device_alarms_map_time) ON (matched_places.id = d.device_id AND d.equipment_type IN (3,6,7,8))
    LEFT JOIN map_2d m2d ON m2d.id = d.map
    LEFT JOIN (SELECT s.id, bc.x, bc.y, bc.floor FROM substation s JOIN bsconfig bc ON bc.bsid = s.id) bc ON d.device_id = bc.id AND d.equipment_type = 1
    LEFT JOIN gateway_lora g ON d.device_id = g.id AND d.equipment_type = 2
    LEFT JOIN camera_config c ON d.device_id = c.id AND d.equipment_type = 5
    LEFT JOIN floor_lock fl ON fl.id = d.device_id AND d.equipment_type = 4
    LEFT JOIN parking_place pp_lock ON pp_lock.id = fl.place
    -->
  </sql>

  <sql id="Base_Column_List1">
    <!--@mbg.generated-->
    <!--@sql select -->dac.id,dt.id deviceTypeId,dt.name deviceName,dat.id alarmsTypeId,dat.name alarmName
    <!--@sqlfrom device_alarms_config dac left join device_type dt on dt.name = dac.device_type_id left join device_alarms_type dat on dat.name = dac.device_alarm_type_id-->
  </sql>

  <!--$var desc=1-->
  <select id="getDeviceAlarmsData" resultMap="BaseResultMap">
      SELECT
    <include refid="Base_Column_List"/>
    FROM (SELECT id, name, x, y, floor FROM parking_place <where><if test="placeName != null and placeName != ''">name LIKE CONCAT('%', #{placeName}, '%')</if></where>) matched_places
      RIGHT JOIN device_alarms d FORCE INDEX (idx_device_alarms_map_time) ON (matched_places.id = d.device_id AND d.equipment_type IN (3,6,7,8))
      LEFT JOIN map_2d m2d ON m2d.id = d.map
      LEFT JOIN (SELECT s.id, bc.x, bc.y, bc.floor FROM substation s JOIN bsconfig bc ON bc.bsid = s.id) bc ON d.device_id = bc.id AND d.equipment_type = 1
      LEFT JOIN gateway_lora g ON d.device_id = g.id AND d.equipment_type = 2
      LEFT JOIN camera_config c ON d.device_id = c.id AND d.equipment_type = 5
      LEFT JOIN floor_lock fl ON fl.id = d.device_id AND d.equipment_type = 4
      LEFT JOIN parking_place pp_lock ON pp_lock.id = fl.place
      <where>
        <if test="id != null">AND d.id = #{id}</if>
        <if test="num != null and num != ''">AND d.num LIKE CONCAT('%', #{num}, '%')</if>
        <if test="placeName != null and placeName != ''">AND ((d.equipment_type = 4 AND pp_lock.name LIKE CONCAT('%', #{placeName}, '%')) OR (d.equipment_type IN (3,6,7,8) AND matched_places.name LIKE CONCAT('%', #{placeName}, '%')))</if>
        <if test="state != null">AND d.state = #{state}</if>
        <if test="map != null">AND d.map = #{map}</if>
        <if test="priority != null">AND d.priority = #{priority}</if>
        <if test="deviceType != null">AND d.equipment_type = #{deviceType}</if>
        <if test="alarmType != null">AND d.alarm_type = #{alarmType}</if>
        <if test="mapids != null and mapids != ''">
          AND d.map IN
          <foreach collection="mapids" item="maps" open="(" separator="," close=")">#{maps}</foreach>
        </if>
      </where>
        <if test="desc != null and desc != ''">ORDER BY ${desc}</if>
    <if test="pageSize != null">
      LIMIT #{pageSize}
    </if>
  </select>



  <update id="updateByIds">
    update device_alarms
    set state = 1,
    end_time = now()
    where id in
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>

  <update id="updateByIds1">
    update device_alarms
    <set>
      state = 1,
      <if test="desc != null and desc != ''">
        `desc` = #{desc},
      </if>
      end_time = now()
    </set>

    where id in
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>

  <!--$var desc=1-->
  <select id="getDeviceAlarmsTypeConfig" resultMap="BaseResultMap1">
    select
    <include refid="Base_Column_List1"/>
    from device_alarms_config dac
    left join device_type dt on dt.id = dac.device_type_id
    left join device_alarms_type dat on dat.id = dac.device_alarm_type_id
    where 1 = 1
    <if test="id != null">
      and dac.id = #{id}
    </if>
    <if test="deviceName != null">
      and dt.id = #{deviceName}
    </if>
    <if test="alarmType != null">
      and dat.id = #{alarmType}
    </if>
    <if test="desc != null and desc != ''">
      order by ${desc}
    </if>
  </select>

  <insert id="addDeviceType" useGeneratedKeys="true" keyProperty="id">
    insert into device_type(name) value (#{deviceName})
  </insert>

  <insert id="addDeviceAlarmsType" useGeneratedKeys="true" keyProperty="id">
    insert into device_alarms_type(name) value (#{deviceName})
  </insert>

  <insert id="addDeviceAlarmsConfig">
    insert into device_alarms_config(device_type_id, device_alarm_type_id) value (#{deviceTypeId},#{alarmsTypeId})
  </insert>

  <update id="editDeviceType">
    update device_type set name = #{deviceName} where id = #{deviceTypeId}
  </update>

  <update id="editDeviceAlarmsType">
    update device_alarms_type set name = #{alarmName} where id = #{alarmsTypeId}
  </update>
  
  <delete id="delDeviceAlarmsConfig">
    delete
    from device_alarms_config
    where id in
    <foreach collection="ids" item="id" open="(" separator="," close=")">
          #{id}
    </foreach>
  </delete>

  <select id="countWithConditions" resultType="long">
    SELECT COUNT(*) FROM device_alarms d
    LEFT JOIN parking_place pp_lock ON (d.device_id = pp_lock.id AND d.equipment_type = 4)
    LEFT JOIN parking_place pp ON (d.device_id = pp.id AND d.equipment_type IN (3,6,7,8))
    WHERE 1=1
    <if test="id != null">AND d.id = #{id}</if>
    <if test="num != null and num != ''">
      AND d.num LIKE CONCAT('%', #{num}, '%')
    </if>
    <if test="placeName != null and placeName != ''">
      AND (
      (d.equipment_type = 4 AND pp_lock.name LIKE CONCAT('%', #{placeName}, '%'))
      OR
      (d.equipment_type IN (3,6,7,8) AND pp.name LIKE CONCAT('%', #{placeName}, '%'))
      )
    </if>
    <if test="state != null">
      AND d.state = #{state}
    </if>
    <if test="map != null">
      AND d.map = #{map}
    </if>
    <if test="priority != null">
      AND d.priority = #{priority}
    </if>
    <if test="deviceType != null">
      AND d.equipment_type = #{deviceType}
    </if>
    <if test="alarmType != null">
      AND d.alarm_type = #{alarmType}
    </if>
  </select>
</mapper>