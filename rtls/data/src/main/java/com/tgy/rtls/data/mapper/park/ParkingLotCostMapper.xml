<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tgy.rtls.data.mapper.park.ParkingLotCostMapper">
  <resultMap id="BaseResultMap" type="com.tgy.rtls.data.entity.park.ParkingLotCost">
    <!--@Table parking_lot_cost-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="map" jdbcType="INTEGER" property="map" />
    <result column="cost" jdbcType="DOUBLE" property="cost" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="evaluate" jdbcType="DOUBLE" property="evaluate" />
    <result column="mapName" jdbcType="VARCHAR" property="mapName" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@sql select -->
        p.id, p.`map`, p.cost, p.`desc`, p.evaluate,m.name mapName
    <!--@sql from parking_lot_cost p left join map_2d m on p.map = m.id-->
  </sql>
  <select id="getParkLotCostById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from parking_lot_cost p left join map_2d m on p.map = m.id
    where 1=1
    <if test="desc==null">
      <if test="id != null">
         and p.id = #{id,jdbcType=INTEGER}
      </if>
    </if>

    <if test="desc != null and desc != ''">
      and map =#{map} and p.id !=#{id}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from parking_lot_cost
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tgy.rtls.data.entity.park.ParkingLotCost" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into parking_lot_cost (`map`, cost, `desc`,
evaluate)
    values (#{map,jdbcType=INTEGER}, #{cost,jdbcType=DOUBLE}, #{desc,jdbcType=VARCHAR}, 
      #{evaluate,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tgy.rtls.data.entity.park.ParkingLotCost" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into parking_lot_cost
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="map != null">
        `map`,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="desc != null and desc != ''">
        `desc`,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="map != null">
        #{map,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DOUBLE},
      </if>
      <if test="desc != null and desc != ''">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tgy.rtls.data.entity.park.ParkingLotCost">
    <!--@mbg.generated-->
    update parking_lot_cost
    <set>
      <if test="map != null">
        `map` = #{map,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DOUBLE},
      </if>
      <if test="desc != null and desc != ''">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null">
        evaluate = #{evaluate,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tgy.rtls.data.entity.park.ParkingLotCost">
    <!--@mbg.generated-->
    update parking_lot_cost
    set `map` = #{map,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DOUBLE},
      `desc` = #{desc,jdbcType=VARCHAR},
      evaluate = #{evaluate,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAllByMap" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from parking_lot_cost p
        left join map_2d m on p.map = m.id
        <where>
            <if test="map != null">
                and `map`=#{map,jdbcType=INTEGER}
            </if>
          <if test="mapids != null and mapids != ''">
            and m.id in
            <foreach close=")" collection="mapids" item="mapids" open="(" separator=",">
              #{mapids}
            </foreach>
          </if>
        </where>
    </select>

  <delete id="deleteByIdIn">
    delete from parking_lot_cost
    <where>
      <if test="ids != null and ids.length > 0">
        and id in
        <foreach item="item" index="index" collection="ids"
                 open="(" separator="," close=")">
          #{item,jdbcType=INTEGER}
        </foreach>
      </if>
    </where>
  </delete>
</mapper>