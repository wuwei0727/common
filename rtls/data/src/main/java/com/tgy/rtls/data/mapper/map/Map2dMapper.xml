<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tgy.rtls.data.mapper.map.Map2dMapper">
    <resultMap id="baseMap" type="com.tgy.rtls.data.entity.map.Map_2d">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="type" property="type"/>
        <result column="width" property="width"/>
        <result column="height" property="height"/>
        <result column="url" property="url"/>
        <result column="origin" property="origin"/>
        <result column="describe" property="describe"/>
        <result column="enable" property="enable"/>
        <result column="addTime" property="addTime"/>
        <result column="updateTime" property="updateTime"/>
        <result column="instanceid" property="instanceid"/>
        <result column="subStyle" property="subStyle"/>
        <result column="tagStyle" property="tagStyle"/>
        <result column="gatewayStyle" property="gatewayStyle"/>
        <result column="mapKey" property="mapKey"/>
        <result column="appName" property="appName"/>
        <result column="fmapID" property="fmapID"/>
        <result column="mapImg" property="mapImg"/>
        <result column="themeImg" property="themeImg"/>
        <result column="lng" property="lng"/>
        <result column="lat" property="lat"/>
        <result column="qrcode" property="qrcode"/>
        <result column="qrcodelocal" property="qrcodelocal"/>
        <result column="coordinate" property="coordinate"/>
    </resultMap>
    <select id="findByAll" resultMap="baseMap">
        select distinct m.id,
                        m.`name`,
                        m.`type`,
                        m.`enable`,
                        m.addTime,
                        m.updateTime,
                        m.mapKey,
                        m.appName,
                        m.fmapID,
                        m.mapImg,
                        m.theme                                                                   as themeName,
                        m.lng,
                        m.lat,
                        m.defaultfloor                                                            as defaultFloor,
                        m.welcome_page_path                                                          welcomePagePath,
                        m.coordinate,
                        (select count(1) from substation where map = m.id)                        as subNum,
                        (select count(1) from basestation where map = m.id)                       as baseNum,
                        (select count(1) from gateway_uwb where map = m.id)                       as gatewayNum,
                        (select url from style where type = 'sub' and id = m.subStyle)            as subUrl,
                        (select url from style where type = 'tag' and id = m.tagStyle)            as tagUrl,
                        (select url from style where type = 'gateway' and id = m.gatewayStyle)    as gatewayUrl,
                        (select color from style where type = 'sub' and id = m.subStyle)          as subColor,
                        (select color from style where type = 'tag' and id = m.tagStyle)          as tagColor,
                        (select color from style where type = 'gateway' and id = m.gatewayStyle)  as gatewayColor,
                        (select ${statusname} from status where type = 'map' and typeid = m.type) as typeName,
                        j.short_link                                                              as shortLink
        from map_2d as m
                 left join maptheme mt on mt.mapId = m.id
                 left join jump_map_param j on m.id = j.map_id
        where 1 = 1
        <if test="name != null and name != ''">
            and name like concat('%', #{name}, '%')
        </if>
        <if test="enable == 1">
            and enable = 1
        </if>
        order by addTime desc
    </select>

    <select id="findByAll2" resultType="com.tgy.rtls.data.entity.map.Map_2d">
        select m.id,
               m.`name`,
               m.`type`,
               m.`describe`,
               m.`enable`,
               m.addTime,
               m.updateTime,
               m.mapKey,
               m.appName,
               m.fmapID,
               m.mapImg,
               m.theme,
               m.themeImg,
               m.lng,
               m.lat,
               m.qrcode,
               m.qrcodelocal,
               m.welcome_page_path                                                          welcomePagePath,
               m.defaultfloor,
        mrf.name floorName,
               m.theme                                                                 themeName,
               m.coordinate,
               (select count(1) from substation where map = m.id)                        as subNum,
               (select count(1) from basestation where map = m.id)                       as baseNum,
               (select count(1) from gateway_uwb where map = m.id)                       as gatewayNum,
               (select url from style where type = 'sub' and id = m.subStyle)            as subUrl,
               (select url from style where type = 'tag' and id = m.tagStyle)            as tagUrl,
               (select url from style where type = 'gateway' and id = m.gatewayStyle)    as gatewayUrl,
               (select color from style where type = 'sub' and id = m.subStyle)          as subColor,
               (select color from style where type = 'tag' and id = m.tagStyle)          as tagColor,
               (select color from style where type = 'gateway' and id = m.gatewayStyle)  as gatewayColor,
               (select ${statusname} from status where type = 'map' and typeid = m.type) as typeName,
               (select m2d.name
                from map_2d m2d
                         right join parking_company pc on m2d.id = pc.map
                where pc.id = #{companyId})                                              as mapName
        from map_2d as m
                 left join maptheme mt on mt.mapId = m.id
                left join map_relevance_floor mrf on mrf.map = m.id AND mrf.level = m.defaultfloor
        where 1 = 1
        <if test="instanceid != null and instanceid != ''">
            and instanceid = #{instanceid}
        </if>
        <if test="floorName != null and floorName != ''">
            and mrf.name = #{floorName}
        </if>
        <if test="maps != null and maps != ''">
            and m.id in
            <foreach collection="maps" open="(" close=")" separator="," item="maps">
                #{maps}
            </foreach>
        </if>
        <if test="name != null and name != ''">
            and m.id = #{name}
        </if>
        <if test="enable == 1">
            and enable = 1
        </if>
        order by addTime desc
    </select>
    <select id="findByAll3" resultType="com.tgy.rtls.data.entity.map.Map_2d">
        select DISTINCT  m.id, m.name, m.`describe`, m.enable, m.addTime, m.updateTime,m.defaultfloor,mrf.name as floorName, m.welcome_page_path,m.coordinate,
        m.mapKey, m.appName, m.fmapID, m.mapImg, m.themeImg, m.lng, m.lat, m.qrcode, m.qrcodelocal, mt.themeName, mt.mapId,
        (select count(1) from substation where map=m.id)as subNum,
        (select count(1) from basestation where map=m.id)as baseNum,
        (select count(1) from gateway_uwb where map=m.id)as gatewayNum,
        (select url from style where type='sub' and id=m.subStyle)as subUrl,
        (select url from style where type='tag' and id=m.tagStyle)as tagUrl,
        (select url from style where type='gateway' and id=m.gatewayStyle)as gatewayUrl,
        (select color from style where type='sub' and id=m.subStyle)as subColor,
        (select color from style where type='tag' and id=m.tagStyle)as tagColor,
        (select color from style where type='gateway' and id=m.gatewayStyle)as gatewayColor,
        (select ${statusname} from status where type='map' and typeid=m.type)as typeName
        from map_2d as m
            left join maptheme mt on mt.mapId = m.id
        left join map_relevance_floor mrf on mrf.map = m.id AND mrf.level = m.defaultfloor
        where 1=1
        <if test="instanceid!=null and instanceid!=''">
            and instanceid=#{instanceid}
        </if>
        <if test="mapidAlls != null and mapidAlls != ''">
            and m.id in
            <foreach collection="mapidAlls" open="(" close=")"  separator="," item="mapidAlls">
                #{mapidAlls}
            </foreach>
        </if>
        <if test="floorName != null and floorName != ''">
            and mrf.name = #{floorName}
        </if>
        <if test="name!=null and name!=''">
            and m.id =#{name}
        </if>
        <if test="enable != null">
            and enable=#{enable}
        </if>
        order by addTime desc
    </select>

    <select id="findByAll4" resultType="com.tgy.rtls.data.entity.map.Map_2d">
            select *,
            (select count(1) from substation where map=m.id)as subNum,
            (select count(1) from basestation where map=m.id)as baseNum,
            (select count(1) from gateway_uwb where map=m.id)as gatewayNum,
            (select url from style where type='sub' and id=m.subStyle)as subUrl,
            (select url from style where type='tag' and id=m.tagStyle)as tagUrl,
            (select url from style where type='gateway' and id=m.gatewayStyle)as gatewayUrl,
            (select color from style where type='sub' and id=m.subStyle)as subColor,
            (select color from style where type='tag' and id=m.tagStyle)as tagColor,
            (select color from style where type='gateway' and id=m.gatewayStyle)as gatewayColor,
            (select ${statusname} from status where type='map' and typeid=m.type)as typeName
            from map_2d as m
            where 1=1
            <if test="instanceid!=null and instanceid!=''">
                and instanceid=#{instanceid}
            </if>
            <if test="mapidAlls != null and mapidAlls != ''">
                and m.id in
                <foreach collection="mapidAlls" open="(" close=")" separator=","  item="mapidAlls">
                    #{mapidAlls}
                </foreach>
            </if>
            <if test="name!=null and name!=''">
                and m.id =#{name}
            </if>
            <if test="enable != null">
                and enable=#{enable}
            </if>
            order by addTime desc
    </select>

    <select id="findByNameId" resultType="string">
        select group_concat(name)
        from map_2d
        where id in
        <foreach collection="ids" separator="," close=")" open="(" item="id">
            #{id}
        </foreach>
    </select>


    <select id="findById" resultType="com.tgy.rtls.data.entity.map.Map_2d">
        select m.id,
               m.`name`,
               m.`type`,
               m.`describe`,
               m.`enable`,
               m.addTime,
               m.updateTime,
               m.mapKey,
               m.appName,
               m.fmapID,
               m.mapImg,
               m.theme                                                                     themeName,
               m.themeImg,
               m.lng,
               m.lat,
               m.qrcode,
               m.qrcodelocal,
               m.welcome_page_path                                                         welcomePagePath,
               m.defaultfloor                                                              as defaultFloor,
               m.map_logo                                                                   mapLogo,
               m.map_logolocal                                                              mapLogolocal,
               m.coordinate,
               m.jumpAppId,
               m.jumpAppPage,
               (select count(1) from substation where map = m.id)                       as subNum,
               (select count(1) from basestation where map = m.id)                      as baseNum,
               (select count(1) from gateway_uwb where map = m.id)                      as gatewayNum,
               (select count(1) from parking_place where map = m.id)                    as placeNum,
               (select url from style where type = 'sub' and id = m.subStyle)           as subUrl,
               (select url from style where type = 'tag' and id = m.tagStyle)           as tagUrl,
               (select url from style where type = 'gateway' and id = m.gatewayStyle)   as gatewayUrl,
               (select color from style where type = 'sub' and id = m.subStyle)         as subColor,
               (select color from style where type = 'tag' and id = m.tagStyle)         as tagColor,
               (select color from style where type = 'gateway' and id = m.gatewayStyle) as gatewayColor,
               (select ${name} from status where type = 'map' and typeid = m.type)      as typeName,
               (select j.short_link from jump_map_param j where j.map_id = m.id)        as shortLink
        from map_2d m
                 left join jump_map_param j on m.id = j.map_id
        where m.id = #{id}
    </select>

    <select id="findByMapInstance" resultType="string">
        select GROUP_CONCAT(id)
        from map_2d
        where instanceid=#{instanceid}
    </select>

    <select id="findBySubInstance"  resultType="string">
        select GROUP_CONCAT(id)
        from substation
        where instanceid=#{instanceid}
    </select>

    <insert id="addMap2d" useGeneratedKeys="true" keyProperty="id">
        insert into map_2d(type, name, width, height, url, `describe`, enable, instanceid, subStyle, tagStyle,
                           gatewayStyle, mapkey, appName, fmapID, mapImg, theme, themeImg, lng, lat, qrcode,
                           qrcodelocal, welcome_page_path, welcome_page_pathlocal,defaultfloor,map_logo,map_logolocal,coordinate)
            value (#{map2d.type}, #{map2d.name}, #{map2d.width}, #{map2d.height}, #{map2d.url}, #{map2d.describe},
                   #{map2d.enable}, #{map2d.instanceid},
                   #{map2d.subStyle}, #{map2d.tagStyle}, #{map2d.gatewayStyle}, #{map2d.mapKey}, #{map2d.appName},
                   #{map2d.fmapID}, #{map2d.mapImg}, #{map2d.themeName}, #{map2d.themeImg}, #{map2d.lng}, #{map2d.lat},
                   #{map2d.qrcode}, #{map2d.qrcodelocal}, #{map2d.welcomePagePath}, #{map2d.welcomePagePathlocal},
                   #{map2d.defaultFloor},#{map2d.mapLogo},#{map2d.mapLogolocal},#{map2d.coordinate})
    </insert>

    <update id="updateMap2d">
        update map_2d
        <set>
            updateTime=#{map2d.updateTime},
            <if test="map2d.name!=null and map2d.name!=''">
                `name`=#{map2d.name},
            </if>
            <if test="map2d.type!=null and map2d.type!=''">
                type=#{map2d.type},
            </if>
            <if test="map2d.width!=null and map2d.width!=''">
                width=#{map2d.width},
            </if>
            <if test="map2d.height!=null and map2d.height!=''">
                height=#{map2d.height},
            </if>
            <if test="map2d.url!=null and map2d.url!=''">
                url=#{map2d.url},
            </if>
            <if test="map2d.describe!=null and map2d.describe!=''">
                `describe`=#{map2d.describe},
            </if>
            <if test="map2d.enable!=null">
                `enable`=#{map2d.enable},
            </if>
            <if test="map2d.origin!=null and map2d.origin!=''">
                origin=#{map2d.origin},
            </if>
            <if test="map2d.tagStyle!=null and map2d.tagStyle!=''">
                tagStyle=#{map2d.tagStyle},
            </if>
            <if test="map2d.subStyle!=null and map2d.subStyle!=''">
                subStyle=#{map2d.subStyle},
            </if>
            <if test="map2d.gatewayStyle!=null and map2d.gatewayStyle!=''">
                gatewayStyle=#{map2d.gatewayStyle},
            </if>
            <if test="map2d.mapKey!=null and map2d.mapKey!=''">
                mapKey=#{map2d.mapKey},
            </if>
            <if test="map2d.mapImg!=null and map2d.mapImg!=''">
                mapImg=#{map2d.mapImg},
            </if>
            <if test="map2d.themeName != null and map2d.themeName !=''">
                theme=#{map2d.themeName},
            </if>
            <if test="map2d.themeImg!=null and map2d.themeImg!=''">
                themeImg=#{map2d.themeImg},
            </if>
            <if test="map2d.appName!=null and map2d.appName!=''">
                appName=#{map2d.appName},
            </if>
            <if test="map2d.fmapID!=null and map2d.fmapID!=''">
                fmapID=#{map2d.fmapID},
            </if>
            <if test="map2d.lng!=null and map2d.lng!=''">
                lng=#{map2d.lng},
            </if>
            <if test="map2d.lat!=null and map2d.lat!=''">
                lat=#{map2d.lat},
            </if>
            <if test="map2d.qrcode!=null and map2d.qrcode!=''">
                qrcode=#{map2d.qrcode},
            </if>
            <if test="map2d.qrcodelocal!=null and map2d.qrcodelocal!=''">
                qrcodelocal=#{map2d.qrcodelocal},
            </if>
            <if test="map2d.defaultFloor!=null and map2d.defaultFloor!=''">
                defaultfloor=#{map2d.defaultFloor},
            </if>
                welcome_page_path=#{map2d.welcomePagePath},
                welcome_page_pathlocal=#{map2d.welcomePagePathlocal},
                map_logo=#{map2d.mapLogo},
                map_logolocal=#{map2d.mapLogolocal},
                coordinate = #{map2d.coordinate}
        </set>
        where id=#{map2d.id}
    </update>
    <update id="updateByIds">
        update map_2d
        set qrcode =#{map2d.qrcode},qrcodelocal=#{map2d.qrcodelocal}
        where id = #{map2d.id}
    </update>

    <delete id="delMap2d">
        delete from map_2d
        where id in
        <foreach collection="ids" separator="," close=")" open="(" item="id">
            #{id}
        </foreach>
    </delete>

    <delete id="delMap2dInstance">
        delete from map_2d
        where instanceid=#{instanceid}
    </delete>

    <select id="findByStyle" resultType="com.tgy.rtls.data.entity.map.Style">
        select *
        from style
        where `type`=#{type}
    </select>

    <select id="findByfmapID" resultType="com.tgy.rtls.data.entity.map.Map_2d">
        select *
        from map_2d
        where `fmapID`=#{fmapID}
    </select>

    <select id="findByMapId" resultType="com.tgy.rtls.data.entity.map.Map_2d">
        select *
        from map_2d
        where `id`=#{mapId}
    </select>

    <delete id="deleteByUserIdMap">
        delete from sys_user_map
        where map_id=#{mapId} and user_id = #{userId}
    </delete>

    <insert id="addUserMap">
        insert into sys_user_map
        values (#{uid},#{mapId})
    </insert>

    <delete id="delPlace">
        delete from parking_place
        where map in
        <foreach collection="ids" separator="," close=")" open="(" item="id">
            #{id}
        </foreach>

    </delete>

    <select id="findByAllSame" resultType="com.tgy.rtls.data.entity.map.Map_2d">
        select *
        from map_2d as m
        where 1=1
        <if test="name!=null and name!=''">
            and name =#{name}
        </if>
    </select>

    <select id="findByfmapId" resultMap="baseMap">
        select name
        from map_2d
        where `fmapID`=#{fmapId}
            <if test="mapId != null">
                and id !=#{mapId}
            </if>
    </select>
    <sql id="Join_Column_List">
        <!--@mbg.generated-->
        map_2d.id as map_2d_id,
        map_2d.type as map_2d_type,
        map_2d.name as map_2d_name,
        map_2d.map_name as map_2d_map_name,
        map_2d.sub_num as map_2d_sub_num,
        map_2d.base_num as map_2d_base_num,
        map_2d.gateway_num as map_2d_gateway_num,
        map_2d.place_num as map_2d_place_num,
        map_2d.width as map_2d_width,
        map_2d.height as map_2d_height,
        map_2d.url as map_2d_url,
        map_2d.origin as map_2d_origin,
        map_2d.describe as map_2d_describe,
        map_2d.enable as map_2d_enable,
        map_2d.instanceid as map_2d_instanceid,
        map_2d.add_time as map_2d_add_time,
        map_2d.update_time as map_2d_update_time,
        map_2d.sub_style as map_2d_sub_style,
        map_2d.tag_style as map_2d_tag_style,
        map_2d.gateway_style as map_2d_gateway_style,
        map_2d.qrcode as map_2d_qrcode,
        map_2d.qrcodelocal as map_2d_qrcodelocal,
        map_2d.map_key as map_2d_map_key,
        map_2d.app_name as map_2d_app_name,
        map_2d.fmap_i_d as map_2d_fmap_i_d,
        map_2d.map_img as map_2d_map_img,
        map_2d.theme_img as map_2d_theme_img,
        map_2d.sub_url as map_2d_sub_url,
        map_2d.tag_url as map_2d_tag_url,
        map_2d.gateway_url as map_2d_gateway_url,
        map_2d.sub_color as map_2d_sub_color,
        map_2d.tag_color as map_2d_tag_color,
        map_2d.gateway_color as map_2d_gateway_color,
        map_2d.type_name as map_2d_type_name,
        map_2d.lng as map_2d_lng,
        map_2d.lat as map_2d_lat,
        map_2d.short_link as map_2d_short_link,
        map_2d.theme_name as map_2d_theme_name
    </sql>
    <resultMap id="JoinResultMap" type="com.tgy.rtls.data.entity.map.Map_2d">
        <!--@mbg.generated-->
        <result column="map_2d_id" property="id"/>
        <result column="map_2d_type" property="type"/>
        <result column="map_2d_name" property="name"/>
        <result column="map_2d_map_name" property="mapName"/>
        <result column="map_2d_sub_num" property="subNum"/>
        <result column="map_2d_base_num" property="baseNum"/>
        <result column="map_2d_gateway_num" property="gatewayNum"/>
        <result column="map_2d_place_num" property="placeNum"/>
        <result column="map_2d_width" property="width"/>
        <result column="map_2d_height" property="height"/>
        <result column="map_2d_url" property="url"/>
        <result column="map_2d_origin" property="origin"/>
        <result column="map_2d_describe" property="describe"/>
        <result column="map_2d_enable" property="enable"/>
        <result column="map_2d_instanceid" property="instanceid"/>
        <result column="map_2d_add_time" property="addTime"/>
        <result column="map_2d_update_time" property="updateTime"/>
        <result column="map_2d_sub_style" property="subStyle"/>
        <result column="map_2d_tag_style" property="tagStyle"/>
        <result column="map_2d_gateway_style" property="gatewayStyle"/>
        <result column="map_2d_qrcode" property="qrcode"/>
        <result column="map_2d_qrcodelocal" property="qrcodelocal"/>
        <result column="map_2d_map_key" property="mapKey"/>
        <result column="map_2d_app_name" property="appName"/>
        <result column="map_2d_fmap_i_d" property="fmapID"/>
        <result column="map_2d_map_img" property="mapImg"/>
        <result column="map_2d_theme_img" property="themeImg"/>
        <result column="map_2d_sub_url" property="subUrl"/>
        <result column="map_2d_tag_url" property="tagUrl"/>
        <result column="map_2d_gateway_url" property="gatewayUrl"/>
        <result column="map_2d_sub_color" property="subColor"/>
        <result column="map_2d_tag_color" property="tagColor"/>
        <result column="map_2d_gateway_color" property="gatewayColor"/>
        <result column="map_2d_type_name" property="typeName"/>
        <result column="map_2d_lng" property="lng"/>
        <result column="map_2d_lat" property="lat"/>
        <result column="map_2d_short_link" property="shortLink"/>
        <result column="map_2d_theme_name" property="themeName"/>
    </resultMap>

    <select id="getMapName" resultType="com.tgy.rtls.data.entity.map.Map_2d">
        select id,`describe` as `name`
        from map_2d
                 left join sys_user_map s on map_2d.id = s.map_id
        WHERE map_2d.`enable`=1
        <if test="mapIds != null and mapIds != ''">
        and map_2d.id in
        <foreach close=")" collection="mapIds" item="mapId" open="(" separator=",">
            #{mapId}
        </foreach>
    </if>
        GROUP BY s.map_id
    </select>
</mapper>