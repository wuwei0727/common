<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tgy.rtls.data.mapper.warn.ParkingAlertConfigMapper">
  <resultMap id="BaseResultMap" type="com.tgy.rtls.data.entity.warn.ParkingAlertConfig">
    <!--@mbg.generated-->
    <!--@Table parking_alert_config-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="map" jdbcType="INTEGER" property="map" />
    <result column="config_name" jdbcType="VARCHAR" property="configName" />
    <result column="mapName" jdbcType="VARCHAR" property="mapName" />
    <result column="t1_threshold_hours" jdbcType="INTEGER" property="t1ThresholdHours" />
    <result column="t2_period_hours" jdbcType="INTEGER" property="t2PeriodHours" />
    <result column="t2_slot_change_limit" jdbcType="INTEGER" property="t2SlotChangeLimit" />
    <result column="holiday_t2_period_hours" jdbcType="INTEGER" property="holidayT2PeriodHours" />
    <result column="holiday_t2_slot_change_limit" jdbcType="INTEGER" property="holidayT2SlotChangeLimit" />
    <result column="t3_period_hours" jdbcType="INTEGER" property="t3PeriodHours" />
    <result column="t3_slot_usage_limit" jdbcType="INTEGER" property="t3SlotUsageLimit" />
    <result column="holiday_t3_period_hours" jdbcType="INTEGER" property="holidayT3PeriodHours" />
    <result column="holiday_t3_slot_change_limit" jdbcType="INTEGER" property="holidayT3SlotChangeLimit" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="t2TimePeriods" jdbcType="VARCHAR" property="t2TimePeriods1" />
    <result column="t3TimePeriods" jdbcType="VARCHAR" property="t3TimePeriods1" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    <!--@sql select -->
    pac.id,pac.`map`,pac.config_name,ctp.config_id,
    GROUP_CONCAT(CASE WHEN ctp.period_type = 't2' THEN CONCAT(DATE_FORMAT(ctp.start_time, '%H:%i'), '~', DATE_FORMAT(ctp.end_time, '%H:%i')) END ORDER BY ctp.start_time SEPARATOR ',')AS t2TimePeriods,
    GROUP_CONCAT(CASE WHEN ctp.period_type = 't3' THEN CONCAT(DATE_FORMAT(ctp.start_time, '%H:%i'), '~', DATE_FORMAT(ctp.end_time, '%H:%i')) END ORDER BY ctp.start_time SEPARATOR ',')AS t3TimePeriods,
    pac.t1_threshold_hours,pac.t2_period_hours,pac.t2_slot_change_limit,pac.holiday_t2_period_hours,
    pac.holiday_t2_slot_change_limit,pac.t3_period_hours,pac.t3_slot_usage_limit,pac.holiday_t3_period_hours,
    pac.holiday_t3_slot_change_limit,pac.`status`,pac.create_time,pac.update_time,m.name as mapName
    <!--@sql from parking_alert_config pac left join map_2d m on pac.map = m.id left join whitelist_slots ws on pac.id = ws.config_id left join parking_place pp on ws.place_id = pp.id left join config_time_periods ctp on pac.id = ctp.config_id -->
  </sql>

  <!--$var desc=1 -->
    <select id="getAllOrFilteredParkingAlertConfig" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from parking_alert_config pac
               left join map_2d m on pac.map = m.id
               left join config_time_periods ctp  on pac.id = ctp.config_id
<!--               left join whitelist_slots ws on pac.id = ws.config_id-->
<!--               left join parking_place pp on ws.place_id = pp.id-->
      where 1 = 1
      <if test="configName != null and configName != ''">
          and pac.config_name like concat('%', #{configName}, '%')
      </if>
      <if test="map != null and map != ''">
          and pac.map = #{map}
      </if>
      <if test="status != null and status != ''">
          and pac.status = #{status}
      </if>
        <if test="mapids != null and mapids != ''">
            and m.id in
            <foreach close=")" collection="mapids" item="mapids" open="(" separator=",">
                #{mapids}
            </foreach>
        </if>
      GROUP BY pac.id
      <if test="desc != null and desc != ''">
          order by ${desc}
      </if>
  </select>

  <select id="getParkingAlertConfigById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from parking_alert_config pac
             left join map_2d m on pac.map = m.id
            left join config_time_periods ctp  on pac.id = ctp.config_id
<!--             left join whitelist_slots ws on pac.id = ws.config_id-->
<!--             left join parking_place pp on ws.place_id = pp.id-->
    where pac.id = #{id}
    GROUP BY pac.id
  </select>
</mapper>